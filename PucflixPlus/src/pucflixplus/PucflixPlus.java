/*
 * Alunos: Gustavo Arildo Felix, Ronaldo Carvalho e Adriano Oliveira
 * SISTEMAS MULTIMÍDIA E HIPERMÍDIA - Ciencias da Computação - PUC Poços de Caldas 
 * PucFlixPlus - Trailers de filmes

Links de videos utilizados do YouTube
https://www.youtube.com/watch?v=HqOSLZl9GUo    //indianajones trailer //aventura
https://www.youtube.com/watch?v=WEctnzPOr_I    //mazzarop trailer  //comedia
https://www.youtube.com/watch?v=5-_wIaTtsLM   //o acampamento trailer // suspence
https://www.youtube.com/watch?v=ahxc2fv1Zcc  //contigo para sempre//romance
https://www.youtube.com/watch?v=gTEDClDGr5A  //amizade maldita//terror
https://www.youtube.com/watch?v=6ZfuNTqbHE8  //guerra infinita //ficção
https://www.youtube.com/watch?v=25Dcrc9K24A //27 estados do Brasil //documentario
 */
package pucflixplus;
//Importaçoes

import java.net.URL;
import javafx.application.Application;
import static javafx.application.Application.launch;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.scene.media.AudioClip;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import javafx.scene.paint.Color;
import javafx.scene.shape.SVGPath;
import javafx.scene.text.Font;
import javafx.scene.text.FontPosture;
import javafx.scene.text.FontWeight;
import javafx.scene.web.WebView;
import javafx.stage.Stage;

public class PucflixPlus extends Application {

    //Atributos
    Pane painel;
    Scene cena;
    WebView webVideo;
    ObservableList<String> opcoesUm;
    ComboBox comboUm;
    Image imagem;
    ImageView imagemLOGO2;
    Button botao;
    Label labelAventura1;
    Label labelAventura2;
    Label labelComedia1;
    Label labelComedia2;
    Label labelSuspence1;
    Label labelSuspence2;
    Label labelRomance1;
    Label labelRomance2;
    Label labelTerror1;
    Label labelTerror2;
    Label labelFiccao1;
    Label labelFiccao2;
    String lista[];
    String svgPathBluray = "m213.9 1041.2c-57.433 0-104.03 46.598-104.03 104.03 0 57.433 46.598 104.06 104.03 104.06 57.433 0 104.06-46.629 104.06-104.06 0-57.433-46.629-104.03-104.06-104.03zm0 76.906c14.981 0.0001 27.156 12.144 27.156 27.125 0.00001 14.981-12.175 27.156-27.156 27.156s-27.125-12.175-27.125-27.156c-0.00001-14.981 12.144-27.125 27.125-27.125z";
    String svgPathChapel = "m128.52 0c-20.48 0.54764-31.783 2.6636-49.472 11.562-6.029 3.034-12.079 10.265-3.625 8.657 10.99-2.091 20.071-9.962 29.817-13.532 5.04-1.847 23.28-6.687 23.28-6.687zm13.781 2c-3.6329 0.0905-7.0503 0.43471-9.8125 1.0625-6.8409 1.5548-26.805 6.8585-22.188 18.25 2.0136 4.9676 5.3892 4.9354 12.094 7.0312 16.7 5.2205 39.079 0.1269 48.031-11.719 7.79-10.306-12.38-15.016-28.12-14.624zm-54.096 2.3125c-10.675 2.5285-23.439 10.292-28.312 18.625 0 0-3.25 4.3425-3.25 10.844 0 3.7467 1.7565 25.855 3.2812 44.469-18.427 6.1517-28.361 10.781-44.406 24.156-6.9906 5.827-11.247 12.238-14.406 20.625-2.0953 5.5628-1.006 11.192 1.4375 15.812 3.0336 5.7359 8.4081 10.822 14.156 12.5 3.3372 0.97413 6.0822 1.3438 13.594 1.3438 7.5636 0 29.956-3.517 50.125-10s79.227-23.408 103.72-29.531c24.492-6.1229 57.269-15.855 63.031-17.656 3.8407-1.2002 6.7197-2.0844 8.2188-2.5312 0.77209-0.23013 1.2455-0.68182 1.5938-1.25 0.20081-0.32762 0.16348-0.67504 0.0937-0.9375-0.097-0.3653-0.51231-0.53125-2.2812-0.53125-3.0399 0-9.1233 1.5167-21.5-0.4375s-25.569-5.2544-32.688-7.4688c-2.5037-0.77884-4.6204-2.0706-5.5625-2.6875-0.20675-0.87686-8.2542-35.032-13.781-61.062-6.6066 18.23-22.982 24.543-48.406 23.844-17.8-0.488-38.709-8.677-36.843-22.936 0.87083-6.6543 8.125-11 8.125-11s-11.384 6.6833-17.344 10.656c-6.041 3.9187-13.443 5.3115-20.656 4.75-3.221-0.768-1.724-3.241-0.719-4.437 5.494-6.541 12.452-11.503 22.781-15.156zm106.88 76.219c3.49 1.8717 6.541 2.8824 10.5 3.9062 4.198 1.0857 22.65 5.5065 31.625 6.375 8.9749 0.86854 15.157-0.0705 17.188-0.25 0.8507-0.0752 1.9925-0.0383 2.375 0.15625 0.12013 0.0611 0.28481 0.28952 0.15625 0.5625-0.61917 1.3148-1.8773 1.0398-3.1875 1.0625-5.0236 0.087-15.388 0.83379-25.281 2.8125-14.407 2.8814-33.138 4.6748-48.625 10.438-15.487 5.7627-29.906 13.334-44.312 17.656-14.407 4.322-31.65 10.501-57.062 18-23.554 6.9502-51.427 10.932-60.906 8.5312-5.2375-1.3268-10.192-3.6539-14.281-10.875-2.2277-3.9342-3.3332-8.5243-1.4062-14.156 3.4671-10.133 15.145-17.51 25.031-23.094 10.192-5.756 19.459-9.4528 33.719-9.8125 0.15475-0.004 0.2855 0.003 0.4375 0 0.5888 7.0612 1.0312 12.188 1.0312 12.188s1.6062 4.426 17.5 4.6875c29.443 0.48449 75.957-10.238 109.44-22.562 4.8111-1.771 5.8608-4.8208 6.0625-5.625zm2.625 4.1562c-17.725 12.835-46.784 18.227-79.469 24.531-13.464 2.597-35.974 4.2016-44.281 2.9375-8.3071-1.2641-12.781-5.0625-12.781-5.0625 2.8804 11.596 43.926 5.9796 52.875 4.3438 12.873-2.3531 22.646-4.2671 35.094-7.0625 14.966-3.361 40.834-10.313 48.562-19.688z";
    String svgPathBolaFutebol = "m 94,9.2 a 88,88 0 0 0 -55,21.8 l 27,0 28,-14.4 0,-7.4 z m 6,0 0,7.4 28,14.4 27,0 a 88,88 0 0 0 -55,-21.8 z m -67.2,27.8 a 88,88 0 0 0 -20,34.2 l 16,27.6 23,-3.6 21,-36.2 -8.4,-22 -31.6,0 z m 96.8,0 -8.4,22 21,36.2 23,3.6 15.8,-27.4 a 88,88 0 0 0 -19.8,-34.4 l -31.6,0 z m -50,26 -20.2,35.2 17.8,30.8 39.6,0 17.8,-30.8 -20.2,-35.2 -34.8,0 z m -68.8,16.6 a 88,88 0 0 0 -1.8,17.4 88,88 0 0 0 10.4,41.4 l 7.4,-4.4 -1.4,-29 -14.6,-25.4 z m 172.4,0.2 -14.6,25.2 -1.4,29 7.4,4.4 a 88,88 0 0 0 10.4,-41.4 88,88 0 0 0 -1.8,-17.2 z m -106,57.2 -15.4,19 L 77.2,182.6 a 88,88 0 0 0 19.8,2.4 88,88 0 0 0 19.8,-2.4 l 15.4,-26.6 -15.4,-19 -39.6,0 z m -47.8,2.6 -7,4 A 88,88 0 0 0 68.8,180.4 l -14,-24.6 -25.4,-16.2 z m 135.2,0 -25.4,16.2 -14,24.4 a 88,88 0 0 0 46.4,-36.6 l -7,-4 z";
    String svgPathTesoura = "m46 3.2188c-16.45-0.141-33.368 7.1072-38.312 20.593-7.3485 16.274 4.457 35.266 24.593 41.126 0.064 0.016 0.159-0.018 0.219 0 21.958 7.936 49.296 11.813 73.09 36.442l8.91 9.24-8.03 8.19c-23.869 24.58-51.114 28.35-73.095 36.25-0.048 0.03-0.163-0.02-0.219 0-20.081 5.8-31.74 24.72-24.594 40.97 0.0255 0.05-0.0245 0.14 0.0005 0.19 6.1095 16.44 30.102 23.71 49.376 19.34 0.064-0.01 0.153 0.01 0.218 0 19.741-3.44 35.925-19.48 31.344-35.72-2.26-8.01-5.165-11.75-7.844-13.96-1.339-1.11-2.495-1.8-3.25-2.44-0.03-0.03-0.119-0.07-0.156-0.1-2.603 1.49-6.871 3.92-12.5 7.13 2.023 1.8 3.571 3.99 4.594 6.41 2.803 6.62 1.443 14.7-5.875 20.56-4.879 3.9-12.654 6.09-20 5.75-7.346-0.35-13.955-3.09-17.407-8.38l-0.218-0.15c-4.839-6.17-3.427-13.15 1.312-19 4.739-5.86 12.859-10.2 21.313-10.32v0.04c0.65-0.02 1.331-0.03 1.75 0 4.214 0 7.877 0.93 10.906 2.56l17.125-10.06c0.058-0.04 0.127-0.09 0.188-0.13 2.547-1.62 6.878-3.62 12.437-6 11.285-4.84 27.905-11.66 47.005-22.66 34.52 19.63 79.39 45.05 104.18 59.1 24.8 14.05 50.18 6.97 60.69 0.53l-133-78.06 133.75-78.816c-20.73-12.785-44.4-7.354-60.16 0.344-35.03 19.87-70.18 39.634-105.28 59.437-16-8.749-33.17-16.771-48.06-23.187-4.129-1.78-7.546-3.287-10.094-4.626-0.088-0.046-0.195-0.11-0.281-0.156-0.857-0.457-1.619-0.9-2.25-1.312-0.124-0.081-0.375-0.216-0.531-0.313-0.569-0.332-2.769-1.648-3.906-2.312-3.744-2.185-7.217-4.202-12.907-7.531-2.983 1.558-6.57 2.476-10.687 2.468h-0.219c-8.767 0.406-17.319-3.65-22.406-9.594s-6.547-13.325-1.531-19.687v-0.187c3.472-5.28 10.288-7.844 17.624-8.188 0.459-0.022 0.915-0.028 1.376-0.031 6.9-0.05 13.837 1.953 18.406 5.625 7.301 5.866 8.694 13.936 5.875 20.562-1.057 2.485-2.679 4.733-4.781 6.563l12.874 7.312c1.696-1.474 3.303-3.124 4.626-4.531 2.248-2.394 4.916-5.949 6.437-12.125 4.022-16.331-11.61-32.429-31.344-35.906-3.83-0.8442-7.937-0.968-11.312-1.219l0.031-0.0312z";
    String svgPathPessoas = "m266.59 3.024c8.437-1.598 17.306-3.082 25.773-1.002 6.592 2.037 5.901 10.08 7.006 15.492 1.44 6.623-0.88 13.172-3.858 19.032-2.119 4.053-1.473 9.495 2.545 12.17 8.604 8.137 21.205 7.479 32.037 10.08 3.274 1.754 4.811 5.379 6.569 8.419 4.959 10.081 10.651 19.806 15.166 30.084 3.03 7.093 3.485 14.854 4.97 22.324 0.869 4.951 1.803 9.902 2.301 14.906 0.783 7.656 3.137 15.418 1.069 23.075 0.021 7.834 0.297 15.7-0.625 23.513-0.636 0.281-1.907 0.867-2.543 1.148 0.487-2.381 0.964-4.771 1.229-7.197-1.603 2.611-2.703 5.477-4.039 8.223-0.19-2.988-0.254-5.986-0.668-8.963-0.943 3.488-1.949 7.02-4.26 9.902-0.563-3.469-0.604-6.967-0.754-10.467-1.08 2.643-1.482 5.641-3.306 7.918l-0.976-0.68c0.086-5.045 1.887-9.924 1.875-14.99-1.408 0.889-2.775 1.809-4.144 2.738-0.562-0.389-1.705-1.182-2.269-1.568 1.961-4.053 4.906-7.917 5.236-12.534 0.211-4.889-1.07-9.694-1.009-14.583 0.202-7.762-3.38-14.917-4.492-22.5-0.901-6.79-4.481-12.734-7.481-18.772-0.848-1.703-2.057-3.196-3.508-4.429-1.771 4.241-1.676 8.89-2.576 13.33-1.748 8.711-1.887 17.799 0.117 26.491 0.646 5.149 1.834 10.216 2.563 15.355-0.285 5.588-0.231 11.177 0.233 16.765 0.74 4.158-4.334 6.299-4.176 10.342-0.563 12.816-3.73 25.928-0.254 38.586 0.529 3.764 2.141 7.23 4.121 10.459 3.286 5.473 3.297 12.168 6.518 17.684 4.24 7.438 6.031 15.838 8.554 23.912-1.61 1.064-3.211 2.131-4.779 3.236 1.854 1.902 3.763 3.771 5.649 5.652-1.104 3.594-1.719 7.479-4.02 10.561-4.228 5.652-6.695 12.566-12.111 17.33-2.448 2.33-5.86 3.135-9.114 3.709-0.667-1.285-1.313-2.568-1.938-3.865 2.066-2.57 4.291-5.035 6.02-7.846 3.359-6.414 3.635-13.768 4.98-20.723-2.852-0.535-7.642 1.18-8.5-2.654-1.621-5.537-1.557-11.512-4.186-16.756-3.465-6.414-6.508-13.037-9.739-19.555-2.937-8.598-6.157-17.246-11.679-24.611-0.87 4.932-1.348 9.924-1.729 14.908-1.209 10.801-0.201 21.684-1.039 32.496-0.688 7.416 1.051 14.74 2.09 22.029 0.4 4.221 1.006 8.422 1.685 12.609-1.644 0.74-3.274 1.492-4.897 2.268 1.951 5.826 2.312 12.031 1.804 18.123-0.614 2.717-3.839 2.717-6.073 2.799-3.264 0.271-6.188-1.41-8.85-3.039-5.521-3.363-11.582-6.205-16.065-10.938-0.742-2.693 2.575-3.99 4.779-3.553 2.989 0.053 5.944 1.629 8.924 0.92 1.515-1.086 2.798-2.445 4.153-3.709-2.521-1.879-5.373-3.342-7.693-5.484 0.54-21.174-5.448-41.971-5.034-63.178-5.149 1.129-10.1 2.979-14.879 5.143-3.879 1.086-7.875 1.807-11.614 3.318-1.08 6.646-0.923 13.467-2.767 19.984-3.097 11.449-7.747 22.502-9.729 34.23-0.646 5.068-1.781 10.111-1.875 15.23 0.752 4.49 5.924 5.295 9.687 5.838-1.601 4.086-5.257 7.242-9.517 8.4-2.852 0.188-5.277-1.59-7.801-2.623-0.826 2.496-1.578 5.035-2.648 7.459-2.564-3.291-2.873-7.553-4.176-11.365 5.234-4.951 8.765-11.793 8.935-19.01 0.126-5.561 1.208-11.055 1.048-16.621 0.266-9.609-1.367-19.209-0.273-28.799 0.435-4.398 2.129-8.535 2.936-12.869-2.703 0.113-7.048-1.066-7.473 2.756-1.45 10.416-4.186 20.893-2.775 31.482 0.551 4.297 3.825 8.047 2.999 12.537-0.444 3.76-0.224 7.637-1.453 11.281-0.508-1.682-0.976-3.354-1.42-5.035-0.487 0.072-1.462 0.221-1.949 0.293-0.53 4.084-0.604 9.234-4.727 11.555-2.312 1.963-6.878 3.875-8.001-0.305 1.049-5.619 5.287-10.018 6.464-15.617 2.014-6.309 1.389-12.953 0.509-19.387-1.548-8.23-4.833-16.057-6.02-24.359-0.424-5.453-6.625-7.709-11.256-8.785-1.451-5.537-1.801-11.209-1.397-16.893-1.092 1.422-2.818 2.717-2.713 4.701-0.393 5.936 1.431 11.68 2.183 17.529 1.346 7.688 1.823 15.512 3.35 23.178 0.541 2.33-0.116 4.66-0.201 6.99 1.092 3.801 4.843 7.27 3.189 11.49-2.691 3.236-6.771 4.889-10.905 5.4-2.521 4.627-3.91 10.455-8.88 13.213-3.434 2.539-7.875 2.047-11.88 1.975 0.562-7.459 7.418-11.783 10.206-18.248 1.335-2.779 2.353-5.693 3.37-8.6-2.056-0.572-5.224 0.398-6.22-2.025-0.201-3.133 0.583-6.32-0.233-9.4-0.88-3.342-1.918-6.645-2.596-10.039-0.976-4.646-3.179-8.941-4.165-13.59-1.547-6.414-1.696-13.078-3.657-19.408-2.893 7.93-3.349 16.41-2.427 24.736 1.124 8.908 0.562 17.893 0.996 26.836 0.678 9.359 2.575 18.729 1.388 28.141-0.583 2.006-1.96 3.697-2.564 5.703-0.943 4.096-0.795 8.473-2.522 12.367-2.279 1.996-5.638 2.896-8.637 2.268-2.83-1.014-5.278-2.883-8.213-3.645-2.48-0.941-5.542-1.369-7.026-3.805-1.918-2.799-3.519-5.838-4.567-9.045-0.901-2.287 1.303-5.15 3.762-5.182 3.052 0.793 5.638 2.717 8.648 3.637 1.897-0.43 3.677-1.213 5.489-1.912-2.755-2.402-7.344-4.283-7.015-8.576 0.042-5.965-0.785-11.867-1.071-17.801-0.138-14.363-3.804-28.371-5.542-42.566-5.394 0.344-10.704 2.309-16.13 1.23 1.229 12.463 0.254 25.082 3.042 37.365 2.109 8.65 12.717 13.111 12.527 22.639-1.06 2.684-4.546 1.65-6.316 0.293-4.515-2.445-6.253-7.471-8.743-11.586-1.664-3.029-4.133-5.852-4.26-9.453-0.371-4.115-0.827-8.293-2.363-12.182-1.897-5.41-6.274-9.535-8.108-14.979-1.451-3.541-1.346-7.406-1.346-11.156-2.289 0.055-4.578 0.074-6.868 0.094 0.71 6.051 2.523 11.932 2.734 18.041 0.954 8.867-1.685 17.592-1.431 26.439-0.19 9.838 2.173 19.48 4.461 28.986 2.141 5.484-1.981 10.666-3.009 15.963-1.113-2.299-1.918-4.713-2.756-7.115-2.045 1.631-3.974 3.5-6.433 4.514-1.854-1.045-3.709-2.643-3.953-4.857 0.063-2.611 1.007-5.098 1.717-7.584 1.6 0.262 3.211 0.545 4.812 0.826 1.006-6.33 0.996-12.859-0.922-19.021-2.777-8.859-5.331-17.791-7.8-26.73-2.056-8.064-1.833-16.4-1.643-24.645-4.514 2.246-9.082 4.43-13.819 6.186-3.275 1.422-6.708-0.188-9.909-0.992-4.642-1.432-9.538-0.555-14.232 0.135-5.257 0.867-10.259-2.066-13.862-5.576-0.678-9.213 6.698-16.475 7.556-25.488-3.232 0.031-6.475 0.041-9.707-0.053-0.064-6.289 1.271-12.703 4.313-18.25 6.051-8.324 14.932-13.955 22.351-20.975 3.667-2.256 3.794-6.758 5.214-10.341 1.897-5.307 6.306-9.088 9.74-13.402 2.426-2.873 4.26-6.382 7.587-8.378 2.48-1.295 5.331-1.473 8.033-2.026-0.254-4.847-1.303-9.694-3.444-14.092-3.635-7.208-7.736-14.175-12.061-21.007-3.974 3.28-6.889 7.532-10.291 11.334-5.575 5.526-12.219 9.882-19.023 13.81-2.798 1.661-5.924 2.653-9.083 3.395-2.278-5.714-4.334-11.553-5.458-17.601-1.092-6.174 1.526-12.233 0.837-18.396-0.593-1.891-2.151-3.3-3.296-4.878 1.494-1.985 3.052-3.917 4.652-5.808-2.406-2.068-5.076-4.179-8.319-4.669-2.448-0.053-4.875 0.365-7.302 0.511 1.155-1.191 2.353-2.339 3.561-3.468 0.095-0.261 0.286-0.794 0.371-1.055-2.851-0.689-5.712-1.493-8.298-2.904 2.162-0.784 4.408-1.274 6.655-1.745-2.878-0.973-6.11-1.715-7.551-4.66 2.819 0.261 5.617 0.731 8.404 1.211-1.706-1.942-3.434-3.886-4.939-5.996 5.363 0.814 9.739 4.053 14 7.103-0.317-2.967-1.282-6.142 0.265-8.942 0.424 0.178 1.272 0.543 1.707 0.731 1.356 3.322 2.162 6.905 4.122 9.976 1.918 3.312 4.812 6.383 4.918 10.415 0.688 4.627 0.985 9.296-0.265 13.861 0.667 6.382 2.925 12.557 4.144 18.876 3.37-2.225 6.995-4.512 8.87-8.2 1.675-3.176 3.265-6.571 6.211-8.827 6.21-4.69 9.686-12.19 16.575-16.097 4.356-2.59 9.792-2.978 13.841-6.111 3.836-3.51 5.479-8.764 5.702-13.809-5.639 0.616-11.849 1.796-17.074-1.066-5.224-2.946-7.069-9.297-6.867-14.896 1.145-2.173 3.413-3.458 5.289-4.952 0.339 2.477 0.413 4.962 0.413 7.459 1.102 0.104 2.204 0.208 3.317 0.303 1.737-7.72 0.498-16.17 4.62-23.274 3.73-3.719 8.076-7.458 13.555-8.116 3.317-0.459 6.264-2.141 9.517-2.778 4.652 0.407 8.542 3.259 12.665 5.16 3.783 1.724 7.556 4.398 8.955 8.451-0.106 2.862-3.095 3.896-5.203 5.118-0.87 6.278-0.774 12.609-1.028 18.918-0.011 4.91-3.402 8.796-5.935 12.723-1.685-0.136-3.359-0.387-5.044-0.366-2.299 0.878-2.649 4.45-0.795 5.892 3.201 2.684 7.037 4.972 11.318 5.317 4.949 0.522 9.92 0.074 14.869-0.146 0.498-2.611 0.72-5.37 2.13-7.688 6.359-2.935 13.555-3.666 19.903-6.665 1.844-1.065 3.052-2.873 4.462-4.408-3.678-0.491-9.379 0.888-10.884-3.604-1.293-4.157-3.773-7.719-7.111-10.561 0.752-2.476 1.96-5.066 1.06-7.688-1.972-5.713 0.71-11.626-0.265-17.455-0.71-2.214 1.621-3.562 3.402-4.209 5.754-1.933 11.785-3.208 17.878-3.28 4.886 0.272 10.28 2.047 12.887 6.424 2.173 3.896 4.44 8.117 3.593 12.723 0.339 7.438-4.366 14.792-1.685 22.114 4.08 5.327 9.93 9.192 15.939 12.19 3.188 1.65 6.973 1.87 10.035 3.771 2.034 2.079 2.66 5.203 4.938 7.072 3.105-0.689 6.232-1.525 9.125-2.863 2.672-1.17 3.519-4.178 4.833-6.497-5.671-0.491-13.321 2.748-17.358-2.653-0.414-2.1-0.34-4.252-0.383-6.373 2.204 0.282 4.408 0.616 6.623 0.867-0.23-7.5-5.16-14.583-2.925-22.145 2.522-6.529 8.573-11.595 15.366-13.423 4.58-0.491 9.604-1.232 13.873 0.93 3.297 2.758 6.053 6.236 7.918 10.091 1.758 4.878 1.42 10.175 2.469 15.209 1.855 0.564 3.71 1.097 5.564 1.64-0.488 2.622-0.839 5.338-2.057 7.75-1.357 3.771-6.18 2.444-9.167 3.854-2.925 1.64-6.899 5.255-3.806 8.597 5.32 4.711 12.549 6.382 19.31 8.064 1.452-3.291 2.058-7.03 4.218-9.976 4.907-3.677 11.223-5.254 15.728-9.506 2.405-2.121 2.184-5.484 2.354-8.367-4.366-0.334-8.954 0.502-13.142-1.034-1.399-2.486-0.837-5.452-0.053-8.033-1.973-2.538-3.953-5.139-5.332-8.043 0.955-1.995 2.438-3.698 3.297-5.735 0.699-6.309-1.939-12.755 0.128-18.949 1.27-2.321 4.13-3.314 6.6-3.9z";
    String svgPathTenda = "m61.781 14.688l-1.719 1.374 7.219 11.063-45.469 70.875h33.813v-1-0.219-22.406h26.125v22.406 0.219 1h33.81l-45.466-70.906 6.812-10.906-1.687-1.376-6.531 10.563-6.907-10.687z";
    String svgPathCoracao = "m106.3 1.4635c-104.72-1.8827-201.62 161.88 80.7 331.67 0.30952-0.55704 1.4999-0.55704 1.8094 0 291.42-175.26 178.78-344.08 70.56-330.94-42.18 5.1204-62.09 28.534-71.47 48.671-9.38-20.137-29.28-43.551-71.47-48.674-3.3817-0.41084-6.7549-0.66296-10.133-0.7238z";
    String svgPathCasal = "M326.1669,278.6493c-9.6-4.736-18.6576-10.3653-27.468-16.4333c-5.0254-3.4612-6.6338-12.5623-4.3522-16.0925   c1.9858-3.0725,3.2674-6.655,5.3753-9.4604c3.1151-4.146,0.4936-6.8628-1.0984-9.9499c-0.7487-1.4517-1.9818-1.5789-3.6389-0.5152   c-2.768,1.7769-5.538,1.1815-7.9395-1.1053c-6.3233-6.0211-11.2029-15.7897-4.4333-23.8956   c1.874-2.2439,1.6726-4.5991,1.161-7.2561c-1.8405-9.5581,0.6015-14.9419,9.1989-19.4958   c3.6891-1.9541,6.8578-4.1674,8.9341-7.8453c0.4157-0.7364,1.404-1.8241,1.9269-1.7216c5.4626,1.0696,5.481-3.3067,6.6757-6.484   c1.3366-3.5548,2.3091-7.2092,5.5631-9.787c1.9818-1.5699,1.8936-4.265,2.1639-6.6672   c0.9167-8.1442,4.1921-14.6873,12.3202-17.9162c5.3163-2.1119,7.5359-6.5876,7.2484-11.7931   c-0.659-11.9334,4.4874-19.3176,16.0053-22.2335c5.7207-1.4483,9.7521-7.0969,16.5572-6.178   c1.9899,0.2687,3.3688-2.4484,4.1523-4.6402c1.0695-2.9917,2.5893-3.1685,3.7907-0.1467c1.7162,4.3167,3.6045,2.4535,4.5884-0.0685   c1.4821-3.799,3.1713-6.4673,7.8576-5.4003c0.7367,0.1677,1.8862-0.3321,2.4893-0.9006c5.8099-5.4761,13.838-8.5387,20.6-9.2674   c16.1369-1.7388,30.8709-10.427,47.5064-8.8083c2.6014,0.2531,5.1492,0.2601,7.3125,1.8688   c1.9168,1.4254,4.0014,1.5255,6.2916,1.4469c3.4393-0.118,6.7973-0.2386,9.9675,2.0903c2.5863,1.9,5.5826,0.3742,8.3463-0.7675   c11.965-4.9428,16.8992-3.0138,25.4877,6.8794c6.1394,7.072,11.8925,15.1086,21.7172,17.9944   c3.8348,1.1264,6.0621,3.9853,7.2663,7.6779c3.5709,10.9496,9.5242,19.9024,19.665,26.0937   c6.2805,3.8344,11.1597,9.3025,14.33,16.2911c2.5543,5.6307,7.0211,10.1439,10.0093,15.6703   c5.7416,10.6185,10.7257,21.5235,15.1961,32.7082c1.9359,4.8438,1.7253,10.0505,2.9823,14.9851   c2.5081,9.8451,6.7894,19.5785,7.2892,29.5114c0.6655,13.2233,8.0655,22.8651,13.6052,33.5878   c3.0881,5.9774,9.1816,9.3637,14.0037,13.7994c7.6585,7.0447,15.7112,13.6489,23.9878,19.9888   c8.0442,6.1618,16.4554,8.8689,26.2997,4.8065c5.1664-2.1319,9.7947-1.1379,14.5147,2.0211   c3.2584,2.1809,6.7857,4.2935,10.7994,5.2557c1.3568,0.3253,2.8043,1.231,3.7178,2.2944   c7.2586,8.4489,17.9119,12.2809,26.1638,19.5637c8.5388,7.5359,20.4776,9.1605,30.8752,13.4823   c21.5458,8.9557,43.4672,17.194,61.2079,33.0958c14.5623,13.0526,27.5129,27.6652,40.5598,42.2043   c19.2418,21.4423,32.5842,46.0766,41.6312,73.2867c5.8268,17.5248,8.5661,35.6712,11.7123,53.7503   c1.8269,10.4976,5.2124,20.6158,7.2269,31.0906c2.4357,12.6652,3.1927,25.5004,4.9764,38.2233   c1.4522,10.3593,4.0685,20.5192,4.8075,31.0034c0.7618,10.8052,2.1382,21.566,2.9777,32.3671   c1.9548,25.1526,3.2307,50.3169,3.8263,75.567c0.5548,23.5212,2.7368,47.0502,4.3506,70.5588   c1.4736,21.4673,2.4562,42.9702,4.2184,64.4111c1.6981,20.6629,4.5057,41.2379,6.0449,61.9096   c0.779,10.4623-2.9333,20.3112-8.5516,29.1259c-1.9384,3.0414-2.0263,4.8015,0.8945,6.7758   c1.3684,0.9248,2.4642,2.2946,3.8937,3.0806c8.1125,4.4608,14.2866,9.9977,13.902,20.4073   c-0.5092,13.7813,4.6532,26.5705,7.5025,39.7664c0.7705,3.5685,1.2359,7.2294-0.3411,10.8611   c-0.8233,1.8956-0.4733,3.9803,0.4025,5.9169c7.7017,17.0276,10.8097,35.291,13.7499,53.5006   c2.5871,16.0223,5.6667,32.1206,4.2298,48.4897c-1.3777,15.6956-1.9222,31.4113-4.6713,47.0728   c-1.8387,10.4755-1.6241,21.5408-3.5689,32.1329c-1.4473,7.8821-2.1323,16.3519-8.2283,22.7062   c-0.5765,0.601-1.1917,1.825-0.9568,2.4445c3.2196,8.496-1.8638,16.4622-1.4766,24.8784   c0.3844,8.3511-1.3669,16.8173-0.7343,25.2303c0.8632,11.4775-2.053,22.699-1.9836,34.0188   c0.0585,9.5671-0.783,19.1995,0.5854,28.7646c0.8055,5.6302-0.5316,11.2352-0.2212,16.9519   c0.6549,12.0643-0.6695,24.1959,0.5443,36.2891c0.4694,4.6769,0.869,9.1864,0.2412,14.0924   c-0.9948,7.7745,0.5233,15.8463,0.6751,23.798c0.1689,8.8463-0.3721,17.7178,0.0737,26.5439   c0.5081,10.0569-1.6004,20.0482,0.6108,30.2394c1.1827,5.4512,2.1044,11.5165,0.6268,17.4073   c-1.7511,6.9813-0.0168,14.4326-1.6568,21.1964c-2.2332,9.2106,1.3552,16.9957,3.4091,25.2679   c0.3217,1.2958,0.7375,2.6406-0.3532,3.641c-3.3531,3.076-2.1276,6.3485-1.1216,10.0461   c2.0789,7.6404,2.2949,15.6368,3.8071,23.4393c1.2827,6.6182,1.4996,13.4845,4.0087,19.9204   c-1.7491,1.5629-3.6563,0.8751-5.3577,0.8754c-187.3271,0.0361-374.6542-0.0044-561.9811,0.2009   c-5.7355,0.0063-5.3666-2.2686-4.9321-6.163c0.8542-7.6548,2.348-15.4987,2.5883-22.8837   c0.3506-10.7766,0.425-21.8417-0.9512-32.8481c-1.6168-12.9302-4.9325-25.7993-4.4559-38.8436   c0.2664-7.2915,0.0919-14.7467-1.0193-21.5764c-1.5425-9.4805,0.3731-18.8163-1.145-28.2458   c-0.8286-5.1467,1.5237-10.8392,0.6915-16.6288c-1.8061-12.5651,1.8094-24.941,2.3228-37.4581   c0.3831-9.3401,0.9695-18.6895,1.98-27.9788c0.5069-4.6603-1.9162-8.4722-2.5754-12.7854   c-1.4202-9.2936-3.7643-18.5481-6.7789-27.4641c-2.5682-7.5958-6.4977-16.4651-13.4512-19.2386   c-8.5197-3.3982-11.2041-8.4084-11.8432-16.1266c-0.8925-10.7778-8.0227-18.9703-12.4965-28.0148   c-6.9366-14.0232-8.7893-28.6029-10.5277-43.5271c-0.1673-1.4358-0.7038-2.8246-0.9592-4.2548   c-2.4185-13.5403-1.9015-27.1896-1.083-40.7976c0.2241-3.7261,1.4752-7.7085,3.3383-10.9507   c3.7018-6.4421,6.0207-13.4064,7.6535-20.4348c1.4072-6.0574,4.7658-10.0339,9.3187-13.4877   c1.3247-1.0049,3.1318-1.5839,2.6942-3.6466c-0.4263-2.0096-2.3407-2.2489-3.9234-2.3199   c-5.3108-0.2388-9.4536-2.1674-12.4795-6.8055c-1.7914-2.7458-5.5342-3.4312-7.692-6.0944   c-4.9576-6.1189-3.3619-13.2173-2.8681-19.9656c0.2505-3.4236,0.3018-6.3695-1.1678-9.5535   c-2.3344-5.0576-2.9044-10.8506-2.5329-16.0876c0.6655-9.38,0.3446-18.7605,0.9915-28.104   c0.4715-6.8099,4.8245-12.1356,8.3297-17.6578c1.2379-1.9504,2.1955-3.3926,0.1852-5.2234   c-9.0606-8.2511-11.2258-20.2133-16.2711-30.6027c-1.5435-3.1783-3.7964-5.802-5.3779-8.9114   c-1.5244-2.9972-2.504-6.5164-1.0769-9.0095c2.3562-4.1158,1.307-7.7975,0.4037-11.6343c-1.1506-4.887-1.0633-9.5248,1.768-13.8129   c1.139-1.725,0.8697-3.5811,0.7444-5.3594c-0.4474-6.3466,0.4005-12.4617,2.8926-18.3146c0.6119-1.4371,1.3121-3.3951,0.113-4.1129   c-4.5135-2.7021-3.9955-7.1457-4.312-11.2264c-0.4705-6.0669-3.7341-10.767-7.5256-14.9297   c-8.8081-9.6706-14.6267-21.3869-22.4154-31.7463c-6.8124-9.0608-12.9655-18.4774-22.2328-25.5853   c-5.3549-4.1071-8.9214-10.4414-14.1443-15.0028c-0.7824-0.6834-1.153-1.8384-2.1057-3.4292   c-1.7154,2.7766-1.1725,4.2457-0.7967,5.7809c4.8275,19.7187,15.6377,35.6663,30.4497,49.2673   c5.9669,5.4789,11.3345,11.611,16.9672,17.4531c0.6447,0.6686,1.2345,1.3865,0.8123,2.4426   c-0.2692,0.1136-0.6888,0.4348-0.8457,0.3365c-12.069-7.5615-23.7701-15.6488-34.1786-25.4143   c-4.9361-4.631-9.3325-9.8336-14.2007-14.5422c-2.8352-2.7423-0.9883-6.5611-0.6692-8.5752   c0.7897-4.9844-2.6023-8.6819-1.8078-13.6403c-2.3404,1.3845-0.9695,3.571-2.1221,4.9162   c-2.7657-0.4329-2.3158-2.822-2.6453-4.6556c-0.3372-1.8761-0.7593-3.9682-3.0373-3.7543   c-2.6909,0.2526-1.4635,2.543-1.5901,4.1894c-0.311,4.0438,1.7757,6.8907,4.0898,9.8649c2.182,2.8043,6.6825,6.3082,4.593,9.2739   c-5.0618,7.1844-1.3484,13.5472,0.6277,20.78c-3.291-1.0257-3.2457-5.021-6.7269-4.6548   c-0.5263,4.9108,2.2496,9.5563,5.5205,11.1577c8.7606,4.2888,6.9813,12.7463,10.4673,19.2035   c-2.5417,0.8038-2.4437-0.7239-3.1002-1.4261c-2.6207-2.8027-4.3329-7.6129-9.7067-2.6663   c-2.0859,1.92-6.3072,1.5201-10.0397,2.2748c4.8975,5.4517-0.0078,11.8474,3.1735,18.3923c-2.8763-1.116-4.1063-4.2623-6.47-1.1168   c-1.3191,1.7554-2.8661,0.5451-3.3981-1.5697c-0.2542-1.0106-0.7996-2.2555-2.2078-1.912   c-1.0482,0.2556-0.9981,1.4131-1.152,2.2995c-1.2854,7.4033-5.0359,15.0667,2.1255,21.6179   c2.7907,2.5529-0.4788,5.9283,1.4549,8.8264c1.6886,2.5307,1.7833,5.9831,3.9776,8.4157c0.6593,0.731,0.8418,1.8251,0.0948,2.4993   c-1.1919,1.076-1.9001-0.0869-2.6277-0.8849c-0.619-0.679-1.2888-1.3116-1.9106-1.9882c-0.8417-0.916-1.8501-1.3458-2.9288-0.5971   c-1.1613,0.8062-0.6192,1.8913-0.2952,2.9847c1.2761,4.306,4.3105,8.0941,3.9297,13.359   c-10.2808-5.1699-8.6421-18.8732-18.6308-24.0739c-0.837,7.853-7.068,14.7939-4.1827,23.6364   c0.4145,1.2703-0.1576,3.1271-1.8898,3.5406c-1.793,0.4279-1.8188-1.1613-2.3076-2.3758   c-0.7334-1.8218-1.8362-3.4949-3.0686-5.7576c-2.8486,3.7897-2.6903,7.1923-1.5419,11.059c0.4405,1.4832,2.1398,4.3596-0.78,5.217   c-2.418,0.7102-2.5565-2.1246-3.356-3.6105c-3.8724-7.1972-3.6475-15.24-4.2801-23.0168   c-0.9734-11.9675,0.8847-23.9195,0.9374-35.8953c0.0049-1.1083,0.0494-2.2173,0.0231-3.3248   c-0.0515-2.1648,0.3147-5.606-1.7496-5.785c-3.0899-0.2679-2.5232,3.2392-3.047,5.5002   c-0.9112,3.9335-2.1127,7.8007-3.2307,11.6847c-0.3158,1.097-0.8676,2.1923-2.2496,1.9035   c-1.5953-0.3333-0.9351-1.6904-0.95-2.6963c-0.0473-3.2002,0.9486-6.5212-1.0205-9.9153   c-4.5862,6.8555-8.3861,13.6829-12.2492,20.4928c-3.9253,6.9197-0.344,12.3759,2.8602,17.8298   c2.0629,3.5114,2.8273,7.1346,2.8391,11.0173c0.0055,1.806-0.1359,3.9243-2.4842,4.354c-1.8567,0.3395-3.2852-0.8661-3.9963-2.403   c-1.3661-2.9526-3.789-4.8182-6.6842-7.861c-0.3624,3.6438-1.1354,6.3484-0.7914,8.9026c1.058,7.8564-3.3584,13.176-7.9058,18.5135   c-0.9682,1.1364-2.1598,2.321-3.7834,1.3564c-1.4512-0.8623-1.4689-2.4305-1.2144-3.959c0.1214-0.7286,0.1565-1.4797,0.3541-2.1863   c3.3507-11.9847,0.659-22.2167-8.7698-30.5352c-0.5184-0.4574-1.1541-1.1363-1.1791-1.7352   c-0.0911-2.1883-0.4791-4.4247-2.9641-4.5734c-2.3712-0.142-3.0305,2.4417-4.0654,4.0731   c-8.3541,13.1705-9.4318,26.742-1.9583,40.6882c2.8404,5.3004,4.8131,11.1918,10.4376,14.5724   c1.1927,0.7169,1.9298,2.2709,0.7476,3.8579c-1.2874,1.7281-2.6511,2.886-5.102,2.158c-4.8681-1.4459-8.8764-4.7365-11.1709-8.6033   c-4.1143-6.9337-9.485-13.0083-13.2708-20.3672c-4.8356,4.0007-4.376,9.8143-5.0113,15.0381   c-1.2597,10.3586-3.7422,20.2053-9.6358,28.9852c-0.9089,1.3541-1.5639,3.5659-3.5008,2.7423   c-2.2983-0.9773-0.4371-3.0173,0.0795-4.1772c2.8675-6.4381,4.255-13.2341,5.422-20.1066   c0.3666-2.1592,1.3572-5.0153-0.7165-6.1354c-2.0872-1.1274-4.1453,1.2877-5.4827,2.8257   c-2.8754,3.3069-5.2289,7.0612-7.9393,10.5201c-1.6981,2.1671-3.4318,4.6031-6.3106,5.1287   c-2.0437,0.3732-5.7679,3.6089-5.4789-2.2687c0.0678-1.3779-1.2642-0.9398-2.0688-1.0476   c-1.3869-0.1858-3.389,0.2937-3.4742-1.7162c-0.0672-1.5859,1.7778-2.116,3.0203-2.9009   c4.2052-2.6561,8.3497-5.4016,11.7932-9.0588c1.8671-1.983,3.3068-4.0355,1.5433-6.8241c0.0055,0.0012,0.2479,0.225,0.2479,0.225   l-0.1531-0.2817c-5.2033,5.3226-11.1962,8.7601-19.0732,8.1852c-0.0133-2.793,2.2484-3.3055,3.7433-4.4662   c2.0324-1.5779,4.2339-2.9712,6.1011-4.7228c5.585-5.2395,5.4522-5.2159,0.134-10.9813c-2.3586-2.5568-4.3206-5.482-6.4285-8.2658   c-0.7619-1.0063-1.2464-2.4083-2.9607-1.7002c-5.804,2.3974-4.5981-2.6239-3.9222-4.5607   c1.2967-3.7158-0.1579-6.4301-1.6352-9.3448c-6.1961-12.2249-9.5422-25.253-8.4477-38.8563   c0.9859-12.2534,4.7938-24.0353,9.7044-35.3393c2.0896-4.8104,3.7856-9.6649,3.3704-14.9225   c-0.4121-5.2183,3.13-9.285,3.5191-14.3505c0.8177-10.6449-0.8112-21.3091,0.8154-31.9546   c0.7742-5.0664,1.1836-10.2018,2.1539-15.2565c0.2294-1.1949,0.9163-2.8542-0.4782-3.4935   c-1.5201-0.6968-2.0249,0.946-2.7478,2.023c-3.7927,5.65-4.7743,5.8536-9.2948,1.3936c-1.071-1.0567-1.2954-1.7144-2.8799-0.6226   c-4.5331,3.1238-8.0762,1.3532-7.6122-4.2326c0.7147-8.6021,2.8244-16.988,6.3213-24.964   c0.8115-1.8508,3.0846-3.6733,0.9534-5.8696c-2.3546-2.4268-4.5573-0.3924-6.3772,0.8906   c-6.3787,4.4966-11.6,10.0582-14.5019,17.4617c-0.5811,1.4825-1.5044,3.0413-2.8095,3.2039   c-7.8468,0.9783-7.8057,7.5807-9.322,12.9019c-1.9767,6.9367-5.7153,13.0953-8.2908,19.7601   c-0.3602,0.932-1.2549,2.6576-2.8611,1.7938c-1.0848-0.5835-0.8212-1.9855-0.4608-3.0293   c6.0791-17.6023,7.1647-36.7893,16.9938-53.2246c1.5122-2.5286,2.8868-5.1477,4.8116-7.3505   c5.0551-5.7851,6.7713-13.963,13.9759-18.378c2.2456-1.3762,6.6406-5.9056-0.9648-7.5426   c-1.4129-0.3041-0.4579-1.4998-0.1042-2.183c1.0988-2.1229,2.1563-4.2917,3.5011-6.2572c2.3969-3.5032,3.063-6.1176-2.0933-7.7505   c-3.679-1.1649-3.4288-3.1368-0.3494-5.3124c6.4015-4.5227,7.4763-13.5054,2.1371-20.2933   c-2.1897,7.3419-7.213,3.7338-11.1882,2.8135c-1.7651-0.4087-0.5449-3.1085-0.1355-4.653   c0.5811-2.1921,0.2889-2.9395-1.8644-4.5951c-3.4362-2.642-7.9064-5.976-9.3769-9.1655   c-4.8383-10.4953-6.5561-22.017-3.8854-33.6929c0.7746-3.3865,2.6271-6.7742,2.4443-10.0759   c-0.3017-5.4493-1.596-10.9033-3.0963-16.1778c-0.3136-1.1026-0.7233-1.9224-0.0221-2.6095   c6.6794-6.5456,6.2651-15.4464,7.6275-23.6248c1.3854-8.3161,4.1894-16.2051,6.5056-24.2153   c1.2669-4.3815,2.3777-8.8376,3.7997-13.1803c3.2703-9.9877,8.0655-19.2744,13.213-28.4096   c0.9222-1.6368,3.7138-4.0822-0.381-5.715c-0.7679-0.3062-1.0974-1.1935-0.6696-1.8353c3.224-4.8361,0.3841-10.8293,3.1353-15.8445   c0.8935-1.6287,0.3201-3.8408-0.0285-5.9813c-0.6569-4.0337,0.0341-8.4312-0.3322-12.7184   c-0.1187-1.3892,1.9156-1.9172,3.5682-1.7488c1.9247,0.1962,3.8822,0.2316,3.3254-3.2635   c-1.6841,0.4235-3.0236,2.8385-4.9736,1.3164c-1.7679-1.3799-1.1315-3.3245-1.3051-5.1165   c-0.5816-6.0054,2.217-11.6442,2.526-17.1618c0.4387-7.8339,2.5031-15.374,2.746-23.1545   c0.0632-2.0247-0.3481-4.0729,2.5811-5.3195c2.0482-0.8716,1.4944-3.9509,0.8954-6.0701   c-0.8709-3.0809-2.6007-0.3589-3.9217-0.3707c-2.3716-0.0212-4.8714,0.1276-3.4739-3.4737   c0.7107-1.8315,0.7273-3.3219-0.1648-5.2108c-1.0941-2.3168-0.2872-4.847,1.5066-6.6118   c7.6814-7.5574,8.041-17.8125,10.2012-27.3766c0.7648-3.386,0.9362-6.9132,1.2773-10.386c0.4857-4.9458,5.6412-7.011,6.869-11.639   c3.604-13.5855,12.7445-23.9352,21.7628-33.9541c5.4587-6.0644,11.7493-11.8901,19.5738-15.3475   c1.1447-0.5058,2.5647-1.0043,3.2006-1.9485c5.1965-7.7163,13.9386-11.8468,19.3369-19.3708   c2.8752-4.0074,6.4318-7.4029,10.5751-10.2229c2.4086-1.6394,4.9625-4.1196,4.7799-6.9951   c-0.3167-4.9856,3.2122-6.4164,6.2714-6.5536c9.9835-0.4478,17.3655-5.6046,24.1957-11.9814   c1.5793-1.4744,2.0352-1.903,3.5411,0.0973c1.1545,1.5335,3.3282,2.3239,5.4735,1.0419c1.3573-0.8111,3.1708-1.1442,4.2456-0.365   c5.0246,3.6429,7.8768,0.3823,10.8026-3.0148c1.8253-2.1193,3.6541-3.1462,5.7707-0.2429c0.8515,1.168,2.2538,1.2792,3.5042,0.6957   c0.8928-0.4166,1.1042-1.4133,1.071-2.376c-0.059-1.7148-1.0465-2.9297-2.6276-3.0554c-4.6697-0.3712-7.745-5.4135-13.0729-3.9975   c4.5639-2.5426,9.5493-2.4398,13.6554-1.0941c3.944,1.2927,8.1289,1.8686,11.9955,3.6701   c3.6155,1.6845,6.6112,2.9902,6.0761,7.7809c-0.3591,3.2157,2.6315,3.1743,4.5828,3.5338   c6.2554,1.1525,12.3805,2.714,18.5066,4.4393c9.2147,2.595,18.2107,5.3008,26.0022,11.3008   c2.809,2.1632,3.1819,7.0561,7.577,7.0055c3.16-0.0365,5.2433,1.8755,7.8263,2.9484c6.0017,2.4931,7.4462,8.8596,11.5476,13.0029   c5.9587,6.0196,11.7994,11.4987,20.0383,14.0155c1.833,0.5599,3.6243,0.5435,5.4597,0.5958   c1.8904,0.0538,3.3423-0.7473,3.7613-2.5768c0.3517-1.5362,0.412-2.955-0.9989-4.499   c-4.9203-5.3844-9.5321-11.8277-14.8183-15.9554c-9.0003-7.0277-11.3652-15.5872-12.5405-25.4757   c-0.5869-4.9373-2.9915-8.654-6.8663-11.3251c-5.041-3.475-4.1354-8.858-4.9193-13.7168   c-0.0259-0.1606,1.2248-0.5271,1.8629-0.8054c0.0084,0.0886,0.0343,0.185,0.0602,0.2813   c-0.0646-0.0594-0.1292-0.1188-0.1938-0.1783C325.9704,278.6093,326.0687,278.6293,326.1669,278.6493z M568.4982,810.1503   c0.7185,2.8322,1.3788,5.681,2.1779,8.4902c0.4606,1.6196,1.2272,3.3007,3.1678,3.3504c1.5106,0.0389,2.765-0.9789,3.48-2.3562   c6.303-12.1392,15.2381-22.493,22.7161-33.8161c3.5975-5.4472,7.4208-11.8646,5.9354-18.9911   c-4.4737-21.4647-6.5637-43.3992-13.0292-64.478c-3.5247-11.4916-4.5032-23.7312-10.4993-34.522   c-1.379-2.4815-1.4929-5.5899-1.9144-8.5182c-2.2165-15.3963-3.2474-31.0073-7.6364-46.0327   c-5.1714-17.7042-3.3599-36.4988-8.5922-54.2147c-0.8523-2.886-0.7028-6.379-0.0035-9.3531   c2.004-8.5216,0.5051-16.86-0.6517-25.2128c-4.1243-29.7787-4.985-59.4703,2.8948-88.7988   c1.2867-4.789-0.4461-5.7063-4.2524-6.5265c-6.2734-1.3516-12.9359-1.0116-18.8431-3.7576   c-2.9815-1.386-4.7059-0.4302-6.8403,1.3857c-8.2465,7.016-16.5507,13.9668-24.9358,20.8163   c-13.4999,11.0275-28.7198,18.2731-46.1379,20.5287c-9.1053,1.1791-17.3426-2.1552-25.638-5.061   c-2.2919-0.8028-3.9832-1.544-5.0346,1.7357c-4.8148,15.0184-14.6841,26.0491-27.5492,34.8027   c-9.6751,6.5831-17.4327,14.972-19.4614,26.9255c-1.4723,8.6755-2.277,17.4856-2.5114,26.3539   c-0.2708,10.2509,1.0194,20.6182-2.1797,30.7225c-2.9676,9.3733-2.0193,11.4018,6.757,15.2874   c10.4325,4.6188,19.786,10.4116,25.7003,20.6694c1.8274,3.1694,4.6793,5.3878,7.7772,7.5402   c8.3113,5.7747,16.2379,12.0683,22.3272,20.3773c5.5655,7.5942,12.0672,14.4092,19.4647,20.1942   c10.9795,8.5861,22.1784,16.9026,33.4808,25.0613c8.1071,5.8521,14.0048,13.8144,21.013,20.7009   c10.1902,10.0133,21.3024,19.0813,31.7488,28.8442c5.3309,4.9822,10.7017,10.0656,12.6649,17.6558   C568.3533,776.4222,569.6871,793.1346,568.4982,810.1503z M102.9565,1006.3499c0-2.0359,0.1632-3.5119-0.0406-4.9355   c-0.2643-1.8461,1.1863-5.0529-1.1338-5.235c-2.5742-0.2022-3.1223,3.0402-3.408,5.3997c-0.2232,1.844,0.8324,3.5667,1.0675,5.2271   c0.516,3.6452,4.8404,3.806,5.4545,7.0804c0.4655,2.4822-0.8054,6.7169,2.4173,6.8495c3.0521,0.1257,2.6899-4.3545,3.4353-6.799   c2.3328-7.6502,0.9695-15.1757-1.2703-23.8719c-1.8981,4.0406-2.9934,6.463-0.6589,9.4571   c1.5114,1.9386,0.9591,4.4679-2.2357,4.5057C104.835,1004.0486,104.8083,1005.6964,102.9565,1006.3499z M93.0456,928.6774   c-10.7961,14.9466-16.9043,42.872-11.2804,52.531c0.022-15.8098,4.4406-30.032,11.2162-43.6358   C94.3257,934.8737,95.0546,932.0727,93.0456,928.6774z M285.998,214.8285c1.3444,1.9557,0.1652,7.7897,5.749,3.3371   c1.7101-1.3636,2.4657,0.1444,3.1385,1.5836c0.6922,1.4808,1.5938,3.3669,3.5849,1.9028c1.3399-0.9852,1.6563-2.8086,0.6589-4.3983   c-1.1303-1.8014-1.7038-3.7282-2.3597-5.7261c-0.7817-2.3809-3.1057-5.3987-5.9604-5.3507   c-2.7295,0.0459-3.5989,3.1679-4.1617,5.7249C286.452,212.7907,286.2534,213.6787,285.998,214.8285z M258.8629,852.1829   c-0.529,0.1264-1.058,0.2528-1.5869,0.3792c0.5081,3.3593,0.3966,6.9815,1.6824,10.0104   c1.5752,3.7106-0.4662,7.2697,0.6193,10.7299c0.3199,1.0195,0.0967,2.9873,1.9319,2.8082   c1.8997-0.1852,1.8863-1.5954,1.6547-3.2676c-0.3751-2.709-0.4353-5.4705-0.4957-8.2126   C262.5683,860.0702,261.9207,855.7276,258.8629,852.1829z M57.1263,681.9475c3.8265-2.7067,7.6879-18.1438,5.9902-22.9442   C58.2522,665.9424,58.5877,673.9244,57.1263,681.9475z M289.1112,181.4782c-0.3625,0.2152-0.6989,0.3733-0.9882,0.5932   c-1.9699,1.4976-2.9807,10.7587-1.3335,12.537c0.338,0.3649,0.9174,0.7227,1.376,0.711c0.7898-0.02,1.4855-0.6555,1.3264-1.4286   c-0.7658-3.7221,0.0989-7.224,1.0805-10.7645C290.755,182.468,290.5023,181.1769,289.1112,181.4782z M97.5315,994.0031   c2.2805-1.3713,3.763-2.6311,2.7801-5.0679c-0.2597-0.6437-0.8949-1.4528-1.6292-0.951   C96.6623,989.3649,97.0749,991.4162,97.5315,994.0031z M55.3085,689.5721c1.4335-2.58,1.5542-4.3485,0.3768-6.7883   C54.1217,685.0765,53.5376,686.8045,55.3085,689.5721z M350.5729,105.4187c0.3313-0.2678,0.8017-0.5342,1.1139-0.9266   c0.4949-0.622,0.0091-1.0379-0.5266-1.0069c-0.4415,0.0256-0.9861,0.3766-1.2555,0.7493   C349.5436,104.7339,349.7886,105.2101,350.5729,105.4187z M85.6122,521.2166c1.0522-1.0487,0.7953-1.9493,0.6147-2.8021   c-0.034-0.1607-0.6576-0.3875-0.7132-0.3241C84.6898,519.0294,84.8561,520.0067,85.6122,521.2166z M295.2186,180.4982   c-0.3241-0.0821-0.5032-0.1275-0.6824-0.1729c0.0375,0.0988,0.0664,0.2761,0.1143,0.2814   C294.7812,180.6211,294.9199,180.563,295.2186,180.4982z";
    String svgPathCrianca = "M264.727,122.546c0,1.977,1.574,7.908,7.506,11.851c5.92,3.953,13.426,2.369,13.426,2.369v43.461v18.174     c0,0,2.761,26.462,7.115,35.162c4.346,8.691,3.953,16.207,4.346,21.334c0.391,5.139,5.529,50.968,5.529,50.968     s-5.529-0.783-9.474,1.967c-3.954,2.77-4.756,10.677-1.194,14.229c3.562,3.553,2.379,7.104,13.838,6.322c0,0,0,2.76,3.553,5.528     c3.553,2.77,9.082,3.851,13.829,0c4.735-3.85,6.322-4.746,3.942-9.081c0,0,6.322,4.335,13.438,0.783     c7.104-3.553,4.373-3.152,2.979-7.907c-1.395-4.737,0-11.06,0-11.06s-0.611-2.368-2.979-3.552     c-2.368-1.185,1.184-20.542,1.184-26.874c0-6.312,1.968-16.98-2.77-30.015c-4.736-13.036,4.622-22.127,6.265-26.864     c1.644-4.746,7.183-10.142,7.965-16.331c0.783-6.188,2.369-23.578,2.369-23.578v-34.37c0,0,3.552-7.906,2.769-16.998     c-0.791-9.073,6.715-6.303,6.312-11.059c-0.391-4.737,0.793-10.266-1.978-12.243l1.997-20.933c0,0-16.971-13.829-21.134-14.229     c-4.163-0.382-4.163-0.382-4.163-0.382s-6.724-2.769-6.724-6.723c0-3.954,11.889-9.092,10.887-14.23     c-1.003-5.137,2.158-9.473-4.163-18.164c-6.322-8.7-1.587-4.45-6.322-8.7c-4.737-4.25-7.907-10.267-13.438-11.45     c-5.529-1.194-7.114,0.382-12.634,2.369c-5.539,1.967-5.94,0.19-9.493,4.832c-3.552,4.642-7.897,5.043-8.289,8.595     c-0.4,3.553-3.953,9.091-2.77,13.045c1.184,3.944,1.586,8.29,2.77,10.657c1.185,2.379,1.185,17.782,3.553,20.15     c0,0-5.139,1.184-5.139,5.921c0,0-5.137,6.322-8.288,9.092c-3.171,2.77-12.644,14.229-13.046,18.966     C265.91,108.317,264.727,120.569,264.727,122.546z M329.025,66.336l5.921,3.562c0,0-4.737,1.194-5.921,0.888     C327.84,70.491,327.535,70.194,329.025,66.336z M321.91,265.469c0,0,2.071,30.807,1.48,34.952     c-0.593,4.154-1.48,8.595-1.48,8.595S318.949,273.167,321.91,265.469z";
    String svgPathFantasma = "m 69.997,3.0979 c 5.635,-0.4969 11.435,1.5747 17.401,6.2149 5.966,4.4752 9.778,9.5292 11.436,15.164 1.16,4.143 3.236,11.601 6.216,22.373 0.16,1.326 0.66,3.564 1.49,6.712 1.82,-2.154 4.06,-6.297 6.71,-12.429 2.49,-5.635 4.89,-9.53 7.21,-11.684 2.32,-2.32 4.89,-3.48 7.71,-3.481 2.81,0.001 4.89,1.161 6.21,3.481 2.65,4.475 3.98,9.861 3.98,16.158 0,6.63 -1.82,16.408 -5.47,29.334 -3.48,12.762 -5.22,22.457 -5.22,29.089 0,6.46 1.08,10.77 3.23,12.92 1.33,1.5 3.9,2.57 7.71,3.24 4.47,0.66 7.87,1.74 10.19,3.23 1.82,1.49 3.65,3.89 5.47,7.21 2.49,4.47 3.89,7.21 4.23,8.2 2.81,3.98 4.22,7.62 4.22,10.94 0,6.46 -2.15,11.76 -6.46,15.91 -0.17,0.66 -0.17,1.16 0,1.49 -0.83,5.8 0.91,8.7 5.22,8.7 2.48,0 4.64,-1.24 6.46,-3.73 0.5,-1.32 1.16,-3.15 1.99,-5.47 1.49,-2.65 3.9,-3.56 7.21,-2.73 4.47,0.99 7.21,2.81 8.2,5.47 0.5,1.32 0.5,4.06 0,8.2 -0.16,1.33 -0.24,2.65 -0.24,3.98 0,2.15 0.24,3.89 0.74,5.22 l 2.24,0 c 0,-6.13 1.99,-9.2 5.96,-9.2 0.83,0.33 2.16,0.91 3.98,1.74 -0.16,-0.5 -2.32,-2.57 -6.46,-6.21 -2.98,-2.66 -4.48,-5.22 -4.48,-7.71 0,-2.98 2.74,-6.22 8.21,-9.7 4.31,-2.81 7.7,-3.89 10.19,-3.23 l 5.47,5.47 c 1.82,-0.83 3.23,-1.24 4.23,-1.24 1.82,0 2.73,1.41 2.73,4.22 0,4.48 -1.24,6.72 -3.73,6.72 -1.33,0 -3.4,-0.75 -6.21,-2.24 -2.82,-1.66 -4.48,-2.49 -4.98,-2.49 -0.33,0 -0.49,0.25 -0.49,0.75 0,1.16 1.16,3.4 3.48,6.71 2.48,3.81 3.97,6.38 4.47,7.71 l 0,1.74 c -0.33,0.83 -0.83,1.9 -1.49,3.23 l -1.99,6.46 c -0.99,3.48 -2.73,5.22 -5.22,5.22 -0.66,0 -2.65,-1.49 -5.97,-4.47 -0.66,1.66 -1.74,3.48 -3.23,5.47 -2.65,0.83 -6.54,1.16 -11.68,0.99 -5.3,-0.16 -8.37,-0.91 -9.2,-2.24 -0.16,-0.16 -0.74,-2.9 -1.74,-8.2 -1.32,2.98 -3.15,7.96 -5.47,14.92 -2.82,0.66 -5.38,0.99 -7.7,0.99 -10.28,0 -15.42,-3.48 -15.42,-10.44 0,-1.16 0.17,-2.82 0.5,-4.97 0.33,-2.32 0.5,-4.06 0.5,-5.22 0,-5.64 -1.99,-8.45 -5.97,-8.45 -1.32,0 -3.23,1.49 -5.72,4.47 -5.63,6.8 -9.86,10.61 -12.67,11.44 -1.66,0.49 -3.4,0.74 -5.23,0.74 -12.756,0 -29.909,-7.95 -51.454,-23.86 -18.893,-13.92 -31.323,-25.53 -37.289,-34.81 -1.16,-1.82 -2.071,-5.05 -2.734,-9.69 -0.663,-4.64 -1.409,-7.79 -2.238,-9.45 -1.16,-1.16 -2.569,-3.31 -4.226,-6.46 0.166,-2.16 0.166,-5.3 0,-9.448 -0.497,-1.326 -2.569,-3.812 -6.2146,-7.458 -3.646,-3.812 -5.6348,-6.795 -5.9662,-8.949 -0.1658,-0.995 0.9943,-4.641 3.4803,-10.939 1.6572,-4.143 3.646,-7.789 5.9665,-10.938 10.772,1.161 19.887,3.398 27.345,6.712 1.16,0.498 3.314,1.575 6.463,3.232 l -0.497,-8.203 5.469,-4.475 c 0.332,-0.994 0.083,-2.9 -0.746,-5.718 -0.663,-2.817 -0.994,-4.557 -0.994,-5.22 -0.166,-1.823 -0.249,-3.646 -0.249,-5.469 0,-8.287 1.492,-15.661 4.475,-22.125 3.812,-8.2863 9.364,-12.761 16.656,-13.424 m 0,4.4746 c -6.132,0.6631 -10.69,5.0554 -13.673,13.175 -2.32,6.132 -3.48,12.927 -3.48,20.385 0,10.938 2.403,23.119 7.209,36.543 1.16,3.48 5.552,13.673 13.176,30.574 0.994,3.15 2.817,6.96 5.469,11.44 1.988,1.16 4.971,1.66 8.949,1.49 3.812,-0.17 6.463,-0.83 7.955,-1.99 l 0,-0.74 c 0.331,-0.34 0.911,-1.25 1.74,-2.74 -0.166,-1.99 -0.829,-6.3 -1.989,-12.93 -0.828,-5.3 -1.243,-9.774 -1.243,-13.42 0,-10.275 1.078,-18.23 3.232,-23.865 0.663,-1.657 0.994,-2.817 0.994,-3.481 0,-0.331 -0.083,-0.497 -0.248,-0.497 -0.829,0 -2.155,1.409 -3.978,4.226 -1.657,2.652 -2.569,4.558 -2.734,5.718 -0.332,10.275 -0.663,16.324 -0.995,18.147 -1.16,8.95 -3.646,13.422 -7.457,13.422 -1.989,0 -4.475,-0.99 -7.458,-2.98 -1.16,-0.829 -1.823,-1.409 -1.989,-1.741 0.166,-0.331 0.497,-0.497 0.995,-0.497 0.994,0 2.983,0.331 5.966,0.994 2.983,0.498 4.972,0.663 5.966,0.497 0,-11.435 0.746,-19.804 2.237,-25.107 2.32,-8.121 7.209,-14.833 14.669,-20.137 -1.82,-11.766 -4.974,-21.876 -9.448,-30.328 C 87.557,11.9734 79.602,6.5864 69.99,7.5814 m 56.183,22.373 c -5.47,1.16 -9.7,8.038 -12.68,20.633 -2.49,10.441 -3.48,19.225 -2.98,26.351 0.66,8.949 0.74,13.424 0.25,13.424 0,-0.166 -0.09,-0.58 -0.25,-1.243 -1.83,-8.12 -2.99,-17.07 -3.48,-26.848 -0.67,4.806 -1,9.861 -1,15.164 0,11.436 1.83,25.113 5.47,41.023 1,3.48 2.32,8.7 3.98,15.66 1.33,5.63 1.99,11.02 1.99,16.15 0,3.15 -0.33,6.22 -1,9.2 -2.48,-14.42 -5.8,-31.73 -9.94,-51.95 -2.65,-13.261 -3.98,-22.873 -3.98,-28.84 0,-4.143 1,-10.689 2.99,-19.639 -5.31,4.144 -7.959,13.507 -7.959,28.091 0,6.464 0.662,15.498 1.988,27.098 0.991,4.64 -0.497,7.37 -4.474,8.2 -1.823,0.33 -5.635,0.17 -11.436,-0.49 -1.325,-0.17 -2.651,-0.17 -3.977,0 0.497,0 1.74,1.16 3.729,3.48 1.989,2.32 2.983,3.72 2.983,4.22 l 0,0.25 c -0.332,-0.17 -0.912,-0.5 -1.74,-0.99 -3.978,-2.66 -7.044,-5.89 -9.198,-9.7 -9.447,-16.74 -17.319,-36.459 -23.616,-59.164 0.331,-0.332 0.165,-1.077 -0.498,-2.238 -0.165,1.492 -0.248,3.066 -0.248,4.724 0,6.297 2.32,15.33 6.96,27.096 -2.983,-4.806 -6.132,-12.678 -9.446,-23.616 l -0.497,2.734 c 0.165,0.664 0.497,2.155 0.994,4.475 1.989,8.618 4.889,18.976 8.701,31.079 l 9.446,30.08 c -6.132,-14.26 -10.358,-24.7 -12.678,-31.33 -4.143,-11.764 -6.878,-22.62 -8.203,-32.563 -6.63,-2.486 -17.568,-5.386 -32.815,-8.701 -3.149,4.64 -4.723,9.115 -4.723,13.424 0,9.612 9.281,24.362 27.842,44.25 8.287,8.78 16.573,18.4 24.86,28.84 -0.498,-0.83 -2.983,-3.48 -7.458,-7.96 -6.464,-6.46 -13.176,-13.17 -20.136,-20.13 l -11.187,-13.43 c 0,0.33 0.249,1 0.746,1.99 3.812,7.46 9.446,15.99 16.904,25.61 -0.994,-1 -3.149,-2.82 -6.463,-5.47 -4.806,-3.82 -8.452,-7.79 -10.938,-11.94 0.165,2.99 0.911,6.8 2.237,11.44 0.663,1.49 4.806,5.47 12.43,11.93 3.48,3.98 7.043,7.87 10.689,11.69 4.806,4.97 8.701,8.36 11.684,10.19 5.469,2.48 13.507,6.54 24.114,12.18 3.148,2.82 8.037,6.3 14.667,10.44 3.816,1.33 7.126,1.99 9.946,1.99 5.3,0 11.18,-3.9 17.65,-11.69 6.46,-7.78 11.18,-11.68 14.17,-11.68 5.47,0 8.2,2.32 8.2,6.96 0,1.82 -0.66,4.97 -1.99,9.45 -1.32,4.31 -1.99,7.54 -1.99,9.69 0,5.47 2.74,8.62 8.21,9.45 3.97,0.66 6.54,0.66 7.7,0 1.16,-0.66 2.32,-2.74 3.48,-6.22 1.16,-3.48 1.99,-5.55 2.49,-6.21 0.66,-0.83 1.57,-1.66 2.73,-2.49 2.16,-0.16 3.82,1.5 4.98,4.98 1.16,3.48 2.32,5.46 3.48,5.96 1.16,0.33 2.48,0.5 3.97,0.5 5.14,0 9.62,-2.65 13.43,-7.96 l 2.73,0.5 c 0.33,0.66 1,1.74 1.99,3.23 1.16,-0.33 2.65,-1.24 4.48,-2.73 1.49,-2.32 2.23,-4.72 2.23,-7.21 0,-2.82 -1.07,-5.72 -3.23,-8.7 -2.65,-3.65 -4.14,-5.97 -4.47,-6.96 -0.67,-3.48 0.58,-5.22 3.73,-5.22 3.64,0 6.38,1.16 8.2,3.48 l 2.24,0.49 c 0.49,-0.49 1.24,-2.32 2.23,-5.46 -1.16,0.49 -2.15,0.74 -2.98,0.74 -0.33,-0.33 -2.65,-1.32 -6.96,-2.98 -0.66,-0.17 -1.74,-0.17 -3.23,0 -0.33,0.16 -0.66,0.41 -1,0.74 -1.82,0.34 -4.39,1.25 -7.7,2.74 -0.33,0.5 -1.25,2.32 -2.74,5.47 0,0.33 0.75,1.24 2.24,2.73 4.31,4.48 6.46,8.37 6.46,11.69 0,1.16 -0.66,1.74 -1.98,1.74 -1.17,0 -2.82,-0.5 -4.98,-1.5 l -1.49,5.47 c -0.66,2.32 -1.66,3.57 -2.98,3.73 -3.65,0.83 -6.96,-2.07 -9.95,-8.7 -1.98,-4.64 -4.14,-6.96 -6.46,-6.96 -1.82,0 -4.47,2.4 -7.95,7.21 -3.32,4.81 -5.22,7.29 -5.72,7.46 -2.32,0.33 -4.31,-0.83 -5.97,-3.48 -1.49,-2.65 -2.07,-5.14 -1.74,-7.46 0.83,-6.13 1.25,-10.27 1.25,-12.43 0,-8.29 -3.9,-13.09 -11.69,-14.42 -1.66,-0.33 -3.06,-0.49 -4.22,-0.5 -4.65,0.01 -7.13,1.58 -7.46,4.73 -0.33,2.98 -0.58,5.96 -0.75,8.95 -1.16,4.97 -7.12,7.46 -17.9,7.46 -5.8,0 -10.935,-0.67 -15.41,-1.99 -1.988,-0.83 -5.137,-2.07 -9.446,-3.73 2.32,0.49 3.812,0.83 4.475,0.99 8.617,2.16 15.661,3.23 21.131,3.23 8.62,0 13.42,-2.56 14.42,-7.7 0.16,-2.99 0.91,-7.13 2.23,-12.43 -3.97,-1.83 -6.38,-4.23 -7.2,-7.21 -0.5,-1.66 -0.67,-5.14 -0.5,-10.44 0.16,-5.47 0.16,-9.28 0,-11.44 -0.33,-3.81 -1.24,-11.85 -2.74,-24.111 -1.32,-10.607 -1.99,-18.976 -1.99,-25.108 0,-7.955 0.83,-15.081 2.49,-21.379 0.5,-0.828 2.32,-4.226 5.47,-10.192 2.82,-5.303 4.89,-7.955 6.21,-7.955 0.83,0 1.83,0.248 2.99,0.745 -1.66,-2.154 -3.48,-3.065 -5.47,-2.734 m 4.97,28.34 c -0.66,2.651 -3.23,8.038 -7.71,16.158 -3.48,6.298 -5.22,11.85 -5.22,16.656 0,2.32 0.42,5.8 1.25,10.44 0.83,4.64 1.24,8.12 1.24,10.44 -0.17,0.17 -0.25,0.33 -0.25,0.5 0,0.33 0.5,0.74 1.49,1.24 0.5,-3.48 2.32,-11.52 5.47,-24.112 2.49,-9.943 3.73,-17.981 3.73,-24.113 0.17,-1.16 0.17,-3.563 0,-7.209 m -5.47,51.454 c -2.15,8.29 -3.23,14.67 -3.23,19.15 0,1.32 0.25,1.98 0.75,1.98 0.49,-0.16 0.99,-0.66 1.49,-1.49 3.15,-4.8 4.72,-7.79 4.72,-8.95 0,-0.66 -1.24,-4.22 -3.73,-10.69 m -4.97,9.95 0.75,0.99 c -0.34,-0.66 -0.58,-0.99 -0.75,-0.99 m 12.68,2.73 c -2.32,0.67 -5.39,5.97 -9.2,15.91 l -0.75,3.23 c 2.16,-3.97 5.47,-6.54 9.95,-7.7 0.5,-0.17 1.24,-0.33 2.24,-0.5 -5.14,2.32 -8.04,6.71 -8.71,13.18 1.16,0.33 5.56,0.74 13.18,1.24 6.3,0.5 11.19,5.14 14.67,13.92 1.32,-3.81 1.99,-7.46 1.99,-10.94 0,-10.44 -5.22,-15.91 -15.67,-16.4 1.66,-0.5 3.57,-0.75 5.72,-0.75 1.16,0 2.49,0.08 3.98,0.25 -3.98,-7.79 -8.95,-11.69 -14.92,-11.69 -0.99,0 -1.82,0.09 -2.48,0.25 m -65.63,11.94 c 0.331,0.33 0.165,0.74 -0.498,1.24 0.166,-0.83 0.332,-1.24 0.498,-1.24 m 15.412,29.08 0,0.99 c -0.166,-0.16 -0.248,-0.33 -0.248,-0.49 0,-0.17 0.082,-0.33 0.248,-0.5 m 0.995,0.99 c 0.331,0 0.58,0.09 0.745,0.25 -0.165,0.17 -0.414,0.25 -0.745,0.25 -0.332,0 -0.498,-0.08 -0.498,-0.25 0,-0.16 0.166,-0.25 0.498,-0.25 m 85.763,7.71 c 4.97,1.49 8.45,4.39 10.44,8.7 0.33,0.17 0.75,0.58 1.25,1.24 0.82,-4.3 1.24,-7.37 1.24,-9.19 0,-4.81 -1.83,-7.21 -5.47,-7.21 -2.32,0 -4.81,2.15 -7.46,6.46 m -15.66,2.24 c -0.5,1.82 -0.58,4.06 -0.25,6.71 0.5,3.15 1.33,4.72 2.49,4.72 0.66,0 1.49,-0.66 2.48,-1.99 1,-1.49 1.49,-2.65 1.49,-3.48 0,-0.82 -0.99,-1.9 -2.98,-3.23 -1.82,-1.49 -2.9,-2.4 -3.23,-2.73";
    String svgPathManopla = "M1960.9087,1276.0566c-19.2501-2.9022-38.1486-5.7212-57.0358-8.6123c-9.0536-1.386-18.1001-2.8282-27.1261-4.3822   c-51.7144-8.9039-103.5544-16.8087-155.9297-20.807c-18.7683-1.4329-37.4856-3.5247-56.2351-5.2185   c-20.3867-1.8416-40.8511-3.0245-61.1542-5.5282c-15.035-1.8542-30.1028-3.3568-45.1458-5.0966   c-23.6584-2.7362-47.344-5.2395-71.0229-7.7946c-17.8597-1.9271-35.6095-4.7102-53.4313-6.89   c-43.1874-5.282-85.6019-14.7214-128.2585-22.9236c-38.2649-7.3578-76.7017-13.8145-115.2767-19.4065   c-26.1934-3.797-52.3114-8.1351-78.5394-11.6647c-15.1572-2.0398-30.4969-2.6847-45.6992-4.4366   c-24.203-2.7893-48.4983-3.283-72.8109-3.798c-32.4039-0.6863-64.5641,2.1896-96.639,6.3295   c-27.3875,3.5349-54.786,7.0143-82.1133,10.976c-19.6748,2.8523-38.3923,9.371-57.1212,15.9039   c-33.9922,11.8571-68.7667,21.0896-103.836,29.137c-37.2666,8.5518-75.2034,10.032-113.2348,9.3218   c-12.4612-0.2327-24.8776-2.5641-37.344-2.929c-8.3177-0.2434-16.8631-0.1895-24.7763-1.8376   c-12.3837-2.5797-21.4183,2.7697-30.3696,9.1615c-13.4845,9.6285-28.4842,11.8282-44.2793,9.4929   c-13.3502-1.9738-25.0754-7.8383-34.1706-18.0342c-3.0938-3.4681-6.2639-4.4354-10.5976-3.3413   c-9.149,2.3101-17.9656,0.988-26.0672-3.6616c-5.7078-3.276-11.504-4.2848-17.7521-2.5751   c-7.0144,1.9196-13.5398,0.7008-19.7605-2.7275c-16.813-9.266-33.5038-18.6652-45.3925-34.4667   c-6.1101-8.1208-14.6423-13.3602-22.8176-19.1771c-22.9092-16.3002-34.2972-39.0488-33.8304-67.0454   c0.2313-13.8679,8.0078-25.1515,16.4602-35.693c2.2697-2.8306,6.7427-5.6298,5.8328-8.7452   c-0.9019-3.0883-6.1278-1.5637-9.3955-2.3348c-6.0253-1.4219-11.8076-3.6195-17.3674-6.2529   c-22.0294-10.4346-43.2624-22.1484-62.0892-37.9119c-22.8255-19.1116-34.7176-42.7788-34.6195-73.0996   c0.0733-22.6453,7.6525-41.2412,23.4175-56.9195c3.7887-3.7679,7.9206-7.0916,13.1588-8.8385   c1.8719-0.6243,4.9457-0.8489,4.5614-3.6565c-0.3129-2.2861-3.1136-2.1888-4.994-2.4727   c-23.5622-3.5573-42.3307-15.7602-59.3642-31.7504c-21.2852-19.9816-29.0188-43.775-26.6297-72.9543   c2.6438-32.29,19.5051-55.1516,42.3952-75.2577c5.1075-4.4861,11.2941-6.9658,18.0395-8.0027   c1.2042-0.1851,2.9854,0.2581,3.2585-1.4551c0.2044-1.2827-1.2535-1.8221-2.2315-2.4014   c-3.0075-1.7817-5.9316-3.7554-9.0876-5.2263c-14.6369-6.8218-26.3154-17.4255-37.3169-28.9026   c-9.4992-9.9098-14.2015-21.6461-12.8274-35.4644c1.2683-12.7544,2.3526-25.537,5.2907-38.0712   c2.7356-11.6702,8.2331-21.7654,16.8178-30.1211c22.3448-21.7489,47.5742-39.6685,74.468-55.2485   c12.522-7.2542,26.917-8.42,40.86-10.7031c10.3658-1.6972,20.8314-2.0714,31.3419-1.1622   c20.8684,1.8051,42.0335,0.343,62.5642,5.8821c8.8588,2.39,17.6091,4.9539,25.8038,9.2356   c7.6904,4.0182,16.0495,3.028,23.9813,1.5416c14.2422-2.669,28.374-5.7792,42.8696-6.973   c7.1735-0.5907,13.7631-3.8488,20.5779-5.994c8.5938-2.7053,17.1945-3.3875,26.136-2.3723   c8.4305,0.9572,16.9397,1.2358,25.4193,1.727c1.2112,0.0702,2.8251,0.6946,3.5493-0.9027c0.6182-1.3635-0.2124-2.57-0.9819-3.6764   c-0.3796-0.5457-0.7866-1.0784-1.2314-1.5717c-23.7498-26.3445-46.3463-53.8215-74.3354-76.0139   c-6.0416-4.7903-11.6005-10.0916-16.1899-16.2389c-11.989-16.0585-26.7222-29.5748-40.185-44.2704   c-23.1526-25.2727-39.2006-54.7329-50.3454-87.194c-10.8451-31.5881-15.1596-63.9439-16.0946-97.1466   c-0.5088-18.0664-1.3277-35.9184,3.6182-53.5456c4.9464-17.6289,13.4815-32.5816,30.1273-41.7039   c5.3197-2.9153,10.9241-4.8667,17.09-5.02c4.1347-0.1028,7.9457,0.5016,11.1362,3.4264c0.8408,0.7707,1.971,1.8277,2.9203,1.7809   c6.361-0.3139,8.5224,4.4076,11.6478,8.6286c16.8573,22.7662,29.9568,47.6393,41.3376,73.4332   c4.2314,9.5903,10.8008,17.3688,18.1927,24.0588c10.2816,9.3055,19.2055,19.8644,29.279,29.3222   c6.6756,6.2676,12.9447,12.7999,21.4164,16.9395c6.2539,3.0558,11.7429,7.5702,17.0443,12.1759   c3.6248,3.1491,6.4286,6.8525,7.3777,11.5885c0.4739,2.3647,1.5284,3.3968,3.8141,3.7787   c1.6113,0.2692,3.4119,0.6776,4.6599,1.6343c6.3224,4.8468,12.5175,9.8616,18.7042,14.8828   c3.2238,2.6164,1.7939,8.098,4.6975,9.9541c2.8152,1.7996,7.0513,1.5033,9.8638,4.1821   c16.2218,15.4503,35.6864,26.6301,53.2061,40.3858c25.5119,20.0307,53.1791,36.6707,82.631,50.2644   c19.0787,8.8058,36.5673,19.7776,51.2875,34.9934c8.6239,8.9142,16.0958,18.6519,22.814,29.0257   c27.5943,42.6087,60.2791,81.3354,91.9421,120.855c25.108,31.338,51.0532,61.98,76.4245,93.0965   c3.0451,3.7347,5.5494,7.9051,8.4852,11.735c23.9622,31.2598,56.5706,48.7926,93.743,59.2244   c23.1526,6.4974,46.6026,8.9227,70.6663,8.0917c22.7926-0.787,45.6702-0.7383,68.4546,0.2422   c31.9575,1.3754,63.9489,2.2955,95.8929,2.448c30.4575,0.1454,60.9233-0.0988,91.3713,0.8304   c18.3311,0.5596,36.6552,0.4468,54.9812,0.4179c36.9655-0.0583,73.9519,0.3953,110.8895-0.7059   c33.2747-0.9919,66.6238-1.1829,99.7915-4.9335c7.4037-0.8372,14.9712-0.1381,22.4578-0.3465   c24.9587-0.6951,49.87-2.4407,74.8256-3.3373c26.7579-0.9613,53.515-2.5844,80.1949-4.838   c17.7386-1.4984,35.551-2.1399,53.2253-4.1466c20.1473-2.2873,40.2394-5.1713,60.2733-8.3189   c24.1409-3.7929,48.2478-7.8584,72.2563-12.4041c7.5157-1.423,15.1796-1.9935,22.5785-3.9826   c3.9736-1.0682,5.0303,0.2704,5.0165,4.3336c-0.1405,41.3259-0.0856,82.6525-0.0856,123.9789c0,163.4726,0,326.9451,0,490.4178   C1960.9087,1272.2338,1960.9087,1274.212,1960.9087,1276.0566z";
    String svgPathEstrela = "m0-100l22.4514 69.0983 72.6543 0-58.7781 42.7051 22.4509 69.0983-58.7785-42.7051-58.7785 42.7051 22.4509-69.0983-58.7781-42.7051 72.6543 0z";
    String URLVIDEO;
    String URLAUDIO;
    Button botaoTocaAudio;
    Label labelTocaAudio;
    int indice;

    //BRASIL 
    String svgBRASIL = "m346.89 91.156 1.8948-1.0141 1.0044-2.8813 2.2588-1.9057 1.8464-3.1836c1.06-1.81 3.11-1.936 3.11-1.604 0 0.3318 0.84685 0.15005 1.8819-0.40388l1.8819-1.0072 5.6181 1.1784 5.6181 1.1784v1.7052l0.8217-0.50784 0.8217-0.50784 2.8457 1.4764 2.8457 1.4764 1.061-0.35368 1.061-0.35368 1.9601 1.8261 1.9601 1.8262h3.2458l2.1886 2.039c1.21 1.121 2.19 2.393 2.19 2.827v0.78785l2.8346-0.41603 2.8346-0.41603 3.4154 3.621c1.8785 1.9915 3.4554 3.9442 3.5042 4.3392 0.0488 0.39503 0.55038 1.8432 1.1146 3.2182l1.0258 2.5 0.88544-0.5 0.88545-0.5 0.32149 2.2648 0.3215 2.2648 1.1785-0.76463c0.64818-0.42055 3.4285-1.4772 6.1785-2.3481l5-1.5834 5.9856 2.9666 5.9856 2.9666 4.1813 0.11668 4.1813 0.11668 0.74978 0.75 0.74979 0.75h19.464l5.5861 2.9385c8.119 4.2708 17.272 11.148 24.036 18.06l5.9192 6.0485 2.2675 1.2172c1.3252 0.38271 1.5405 0.68127 2.1727 1.27 0.75865 0.69764 4.886 3.1223 7.4713 4.4622 0.98482 0.5104 7.7634 1.1986 7.7634 1.1986l6.0134 0.43497 2.6578 1.9844 2.6578 1.9844 1.8619 5.4509 1.8619 5.4508 0.60926 5.75 1.2798 4.4536c0.99523 1.4058 0.58361 2.4753 0.68775 3.712l-0.49986 6.8578-0.72337 7.5731c-0.62021 3.9403 0.14349 2.2907-0.94472 4.6535-0.44001 1.1-2.977 4.8028-5.6376 8.2285l-4.85 6.24c-1.5501 2.0066-2.7302 3.4722-4.5 4.1644l-3.5 4.3785c-1.925 2.4082-3.7825 4.4058-4.1279 4.4392-0.34533 0.0334-2.335 0.77404-4.4214 1.6458-1.8268 1.784-3.4177 2.2994-5.6872 4.356l-1.3823 1.7794c-0.76026 0.97866-2.2581 3.6949-3.3285 6.0362-2.031 4.4423-9.3199 14.407-12.868 17.591l-2.4636 1.9636-2.8029-5.5532-1.8199 0.51839c-0.28912 0.34695 2.8624 4.4129 0.83859 5.2802l-1.93 1.75v5.572l-1.0124 0.62568-1.0124 0.62569 0.89509 1.5994 0.89508 1.5994-1.5126 4.4392-1.5126 4.4392 0.92283 7.9235 0.92283 7.9235-2.8602 8.7212-2.8602 8.7212 0.00076 4.5 0.00076 4.5-3.5359 3.1795-3.5359 3.1795-0.82516 7.3579c-0.45383 4.0468-1.1315 8.5786-1.506 10.07-2.9365 8.9531-6.74 2.3846-4.869 7.9974l-2.0475 2.531c-1.1261 1.3921-3.527 4.0138-5.3354 5.8262l-3.2879 3.2951-1.4621 3.4993-1.4621 3.4993v6.9462l-1.25 0.80089c-0.6875 0.44049-3.5 1.7068-6.25 2.8141l-5 2.0132-0.33468 2.495c-0.18407 1.3722-0.49354 3.9369-1.1111 3.9347l-15-0.0533-1.0663-2.9751-1.5378 2.84-8.1721-1.4169-2.2784 0.54765v1.1815l-1.2573 0.39564-1.5242-1.1078-0.97409-3.0723-2.8348 1.4989c-0.49032 0.25926-0.71882 1.8112-0.72584 2.673l1.2446 1.7242 0.0716 1.8405c0.0358 0.91932-3.2835 1.3091-5.4633 2.0043-2.1798 0.69514-4.5744 1.8751-5.3214 2.622l-1.3582 1.3582h-5.6914l-4.8318 2.0712c-2.6575 1.1391-6.3999 3.2766-8.3165 4.75s-5.4046 3.9064-7.7511 5.4068l-4.2664 2.728-0.0553 1.272-0.0553 1.272-2.9463 2.3274-2.9463 2.3274-0.60311-1.5717-0.60312-1.5717-0.95506 0.59025-0.95505 0.59026 1.6786 1.2274 1.6786 1.2274-1.0071 1.9266c-0.55392 1.0596-1.4837 4.5147-2.0662 7.678l-1.0591 5.7514 1.0449 2.9974 1.0449 2.9974 0.90259-0.55783 0.90259-0.55783v2.1756l-0.25 2.2847c-0.89076 2.2078-1.9992 4.6334-1.9992 4.6334-0.96205 2.4884-1.7496 5.2566-1.75 6.1517l-0.00081 1.6274-7.25 7.4233-7.25 7.4233-5.3364 9.7253c-6.4174 11.695-7.2348 14.774-16.303 21.179l-7.5511 5.3328-1.2618 3.331c-0.69401 1.832-2.0012 4.8443-2.9049 6.6939l-1.643 3.363-4.9828 4.387c-5.5345 4.8728-6.0383 5.0773-6.9102 2.8052h-0.00006c-0.35-0.88-0.62-2.66-0.62-3.95v-2.361l2.0593-3.4902 2.0593-3.4902-2.061-1.103-2.0609-1.103-1.3753-3.2917-1.3754-3.2917-3.373-1.372-3.373-1.372-1.2696-1.7473c-0.69828-0.96104-3.0648-2.7563-5.2589-3.9895l-3.9893-2.2421-1.576-2.4053-1.576-2.4053-2.3412 2.1994-2.3412 2.1994-1.9699-3.8549-1.9699-3.8549-3.7684-3.4239-3.7684-3.4239-2.6434 1.5171-2.6433 1.5171-2.2643-0.83761-2.2643-0.8376 1.9641-2.7556c1.0803-1.5156 2.9417-3.639 4.1365-4.7189 1.1948-1.0798 4.241-4.9048 6.7695-8.5 6.0221-8.563 10.804-13.538 16.024-16.674 2.3375-1.404 4.25-2.8772 4.25-3.2738 0-0.39661 2.6573-1.9912 5.9052-3.5435l5.9052-2.8224 1.2394-2.3159 1.2394-2.3159-0.55957-5.2955c-0.30776-2.9126-1.0579-6.589-1.6671-8.1698l-1.1075-2.8742-3.9775 0.63603-3.9775 0.63604v-4.9056l0.89648-0.55405 0.89648-0.55406 1.1463-6.5825 1.1463-6.5825-0.67756-2.1725c-0.37265-1.1948-1.1015-2.4454-1.6197-2.779l-0.94211-0.60654-4.159 1.4329-4.159 1.4329-2.2641-2.6321-2.2641-2.6321v-3.3972c0-1.8684-0.42135-4.4309-0.93634-5.6942-0.51498-1.2634-1.2104-3.9846-1.5453-6.047l-0.60898-3.75h-1.9076c-1.0492 0-3.0405-0.51616-4.4251-1.147l-2.5174-1.147-1.4015 1.1631-1.4015 1.1631-4.8781-0.40694c-5.8642-0.48919-10.685-1.6421-11.405-2.7275l-0.52706-0.79431 0.55184-6.5764 0.55184-6.5764-2.3706-7.5774-2.3706-7.5774 3.0558-7.2799 3.0558-7.2799 0.60091-6.368 0.6009-6.368-2.0825-3.3095-2.0825-3.3095-2.9564-1.0306-2.9564-1.0306-0.94682-3.4291-0.94681-3.4291 0.85488-2.9808 0.85489-2.9808-8.6802-0.011c-4.7741-0.006-10.289-0.27722-12.256-0.6026l-3.576-0.59159-0.23477-5.1474-0.23477-5.1474-1.858-2-1.858-2 0.37361-5.5 0.37361-5.5-0.743-3.4858-0.743-3.4858-3.2782-2.2092-3.2782-2.2092-4.9781 0.58958-4.9781 0.58958-2.7056-2.5391-2.7056-2.5392-3.2168-0.67756-3.2168-0.67757-3.5776-2.4278-3.5776-2.4278h-3.7932l-0.61803-1-0.61803-1h-9.9035l-4.7392-3.2351c-2.6066-1.7793-6.0653-4.755-7.686-6.6126l-2.9468-3.3775-0.87159-6.1374c-1.0366-7.2994-1.0551-7.9228-0.3947-13.308l0.51141-4.1701-5.6758 0.4974c-7.646 0.67007-9.1986 1.3241-18.618 7.8428-3.1789 2.2-7.1924 4.8517-8.9189 5.8926-1.7266 1.0409-4.7593 2.9679-6.7394 4.2822l-3.6002 2.3896-2.7149-1.0322-2.7149-1.0322-6.1849 0.0354-6.1849 0.0354-2.4785 1.3721-2.4786 1.3721-2.7714-1.4332-2.756-1.45v-18.355l-3.75 3.5788-3.75 3.5788-4.2676 0.63883-4.2676 0.63883-2.4824-0.62305-2.482-0.63v-2.7832l-2-2-2-2h-9v-0.56574c0-0.31116 0.47431-1.452 1.054-2.5352l1.054-1.9694-4.1645-4.7148c-2.291-2.59-4.5701-5.61-5.0652-6.71-0.495-1.1-1.9806-3.8-3.3013-6l-2.4012-4 1.502-1.6783 1.502-1.6783-0.5662-1.8217-0.56619-1.8217 3.9604-4.5 3.9604-4.5 0.0218-2.5 0.0218-2.5 1.3363-2.5606 1.3363-2.5606 0.0857-3.4394 0.0857-3.4394 2.7746-2c1.526-1.1 3.8268-3.0105 5.1128-4.2455 3.1827-3.0566 6.7733-4.8049 13.447-6.5477l5.6351-1.4715 2.2384-1.5678 2.2384-1.5678 3.5022 1.4633c1.9262 0.80482 3.6705 1.2949 3.8763 1.0892 0.48906-0.48906 3.6823-17.28 5.8885-30.963l1.742-10.821-1.657-3.473c-0.911-1.911-1.656-4.103-1.656-4.872v-1.398l-3-2.136-3-2.1362v-11.427l4.5107-1.3319 4.5107-1.3319 1.5853 1.3157 1.5853 1.3157-0.346-2.453-0.346-2.452-4.25-0.308-4.25-0.307-0.133-2.193c-0.073-1.205-0.153-3.542-0.178-5.192l-0.0448-3 9.9279-0.28031 9.9279-0.2803 1.6734-2.194 1.6735-2.194 1.9773 1.7894 1.9773 1.7894 0.62952-1.0186c0.34623-0.56022 1.9256-1.9414 3.5096-3.0694l2.8801-2.0508 3.1464 4.2543 3.1464 4.2543-0.41813 2.25-0.41812 2.25h2.856l3.5186 2.6838 3.5186 2.6838 3.6646-1.0463c2.0156-0.57545 4.4521-1.3813 5.4146-1.7908l1.75-0.74451 0.0406 2.357 0.0406 2.357 2.7527-3.2147 2.7527-3.2147 3.4567-1.5502c1.9-0.854 4.14-1.963 4.96-2.465 0.825-0.50211 2.2235-1.1317 3.1078-1.3991l1.6078-0.48621 0.61719-3.0859 0.61-3.086h3.932l0.66134-1.0701c0.36374-0.58854 1.6278-1.46 2.809-1.9366l2.1477-0.86654-3.6276-0.06339-3.6276-0.06339-0.95025-1.25c-0.52264-0.6875-1.7027-3.29-2.6224-5.7834l-1.67-4.534v-6.1958l-3.5-2.6696-3.5-2.6696v-4.1122l1.75 0.75875c0.9625 0.41731 2.7749 0.83789 4.0276 0.93462l2.2776 0.17587 1.1724 1.1724 1.1724 1.1724 5.05 0.02224 5.05 0.02224 2.5 1.9555c1.375 1.0755 2.8375 1.9655 3.25 1.9778l0.75 0.02224v-3.9538l2.5941-1.6997 2.5942-1.6997 4.917-0.24865 4.917-0.24865 3.3569-2.0747 3.3569-2.0747h3.9032l2.2685-2.609 2.2685-2.609-0.51051-1.9522-0.51051-1.9522 1.1724-0.35229c0.64481-0.19376 2.6322-0.60445 4.4165-0.91265l3.2441-0.56035 1.6852 2.5719 1.6852 2.5719-1.1793 1.8883c-0.66 1.0369-1.19 2.3428-1.19 2.8998v1.0136h4.6182l1.5588 4.8744 1.5588 4.8744-1.7766 1.2805-1.7766 1.2805-0.58109 3.5951c-0.3196 1.9773-0.86227 5.4459-1.2059 7.7081l-0.62484 4.113 2.223 1.5571 2.223 1.5571-0.69461 1.1239-0.6946 1.1239 1.7563 2.706c1.972 3.0383 4.6029 5.1489 8.568 6.8732l2.684 1.1672 3.2764-2.4172 3.2764-2.4172h4.4934l0.61803-1 0.61803-1h3.6122l2.3961-1.8848 2.3961-1.8848 6.2711 0.3124c3.4491 0.17182 7.6943 0.62501 9.4339 1.0071l3.1629 0.69469-1.6839-2.5699-1.6839-2.5699 0.56604-1.4751c0.31132-0.81129 1.2696-1.7451 2.1296-2.0751l1.5636-0.59999 1.81 0.57446 1.81 0.57446 4.0212-1.0828 4.0212-1.0828 5.1759 2.6228 5.1759 2.6228 3.1021-0.56806c1.7062-0.31243 5.0146-0.72585 7.3521-0.91872l4.25-0.35066v1.6538h4.69l1.5633-1.75c0.85982-0.9625 2.7373-4.2427 4.1723-7.2892l2.609-5.5392 3.9946-4.834 3.9946-4.834 0.59652-2.3767 0.59653-2.3767h4.302l1.2227 1.9579 1.2227 1.9579 1.9558 8.9611 1.9558 8.9611 2.8444 5.7677 2.8444 5.7677 2.9665 0.79336 2.9665 0.79337 1.2512 1.7111 1.2512 1.7111v2.2618c0 1.244-0.50646 3.3734-1.1255 4.732l-1.1255 2.4701-2.2043 0.55325-2.2043 0.55325-1.9007 3.5294-1.9007 3.5294-1.6533 0.52473c-0.9093 0.2886-3.9556 2.9591-6.7695 5.9344l-5.09 5.412-0.11842 2.3099c-0.0651 1.2704-0.0595 2.6641 0.0124 3.0971 0.072 0.433-1.1122 1.8813-2.6316 3.2184l-2.7624 2.4311 1.298 0.0316c0.71392 0.0174 3.6389-1.4658 6.5-3.2961 2.8611-1.8302 5.652-3.4066 6.202-3.5031l1-0.1754 1.0047-4.7357 1.0047-4.7357 2.7395-1.313 2.7395-1.313 5.6019 1.0356 5.6019 1.0356 1.6869-0.90281 1.6869-0.9028 3.9671 0.90276c2.1819 0.49652 5.2484 1.1547 6.8146 1.4625l2.8475 0.55977-0.7326 2.7065c-0.40292 1.4886-0.81483 3.5148-0.91535 4.5027l-0.18276 1.7962-2.6821 3.0566c-1.46 1.68-2.67 3.475-2.67 3.988l-2.118 1.862h-3.7576l0.15065 2c0.1748 2.3206 0.2256 2.3377 2.8188 0.94982l1.9623-1.0502z";
    String svgAC = "m62.291 226.4 6.7906-0.46687 2.8426 0.99095 2.8426 0.99094 6.8667-4.1017c3.7767-2.2559 7.4719-4.6997 8.2115-5.4306 0.73961-0.73091 2.5407-1.9474 4.0024-2.7032 1.4617-0.75587 3.4361-2.2345 4.3876-3.2859l1.73-1.9116-10.629-3.7764c-5.848-2.07-17.52-6.89-25.939-10.71l-15.307-6.94-13.796-2.39-13.796-2.39-7.4924-2.609-7.4924-2.609-0.3469 1.0407c-0.1908 0.5724-0.95631 1.6501-1.7011 2.3949l-1.3542 1.3542 1.9435 2.0861c1.0692 1.16 1.9438 2.58 1.9438 3.17 0 0.99044 2.7533 5.8392 3.9786 7.0066 0.28864 0.275 2.0052 2.2244 3.8145 4.3319l3.2897 3.8319-0.60877 1.9181-0.60878 1.9181h2.5023c1.3763 0 3.6621 0.44096 5.0797 0.97992l2.5774 0.97992 1.1482 2.5201 1.1482 2.5201h10.759l3.8051-4 3.8051-4h2.3096v19.667l0.73779 0.73778 0.73779 0.73779 2.5122-0.68791c1.3817-0.37835 5.568-0.89799 9.3029-1.1548z";
    String svgAL = "m519.99 211.89 1.7988-1.7882 3.1652-3.605 3.1652-3.605-0.55728-0.55728c-0.30651-0.30651-2.6629-0.47764-5.2365-0.3803l-4.6792 0.17699-3.2834 2.5044-3.2834 2.5044-3.2917-0.2371-3.2917-0.23709-4-2.2699-4-2.2699-2.0589-0.012-2.0589-0.012-1.7407 1.2728-1.7407 1.2728 7.7996 4.4042c4.2898 2.4223 8.1766 5.0302 8.6374 5.7953 0.46078 0.7651 2.2458 2.2473 3.9666 3.2938l3.1288 1.9027 2.2834-2.1451 2.2834-2.1452c2.0448-2.6143 2.0135-2.0751 2.9941-3.8633z";
    String svgAP = "m304.67 82.023 0.61537-3.0769 5.7454-5.6731c3.16-3.1202 6.4882-6.3481 7.3961-7.1731 0.90792-0.825 2.7993-2.9625 4.2031-4.75l2.5524-3.25h2.7316l0.65866-3.511 0.65866-3.511-1.2358-1.489-1.2358-1.489h-3.652l-2.3015-2.25-2.3015-2.25-2.6904-8c-1.4797-4.4-2.9744-9.575-3.3215-11.5-0.34707-1.925-1.0838-4.9625-1.6371-6.75l-1.0061-3.25h-2.1782l0.63655 0.63656 0.63656 0.63656-4.2813 4.7618-4.2813 4.7618-3.8653 7.6153-3.8653 7.6153-2.995 1.8963-2.9949 1.8963-2.4604-0.93544-2.4604-0.93544-1.7838 0.56614-1.7838 0.56614-0.67318-1.0892-0.67319-1.0892-1.2621 1.0474-1.2621 1.0474-2.3989 0.05648c-1.3194 0.03107-3.6364-0.24589-5.1489-0.61546l-2.75-0.67194v2.2332l2.25 0.0023 2.25 0.0023 3.5 2.9954 3.5 2.9953 2.1361 0.002 2.1361 0.002 1.7182 3.6209 1.7182 3.6209 1.7788 0.46517 1.7788 0.46518 0.60587 3.6639c0.33323 2.0152 0.61082 4.9014 0.61687 6.4139l0.011 2.7501h0.96104c0.52858 0 1.8786 0.98485 3 2.1886l2.039 2.1886v3.4694l2.5889 3.0767 2.5889 3.0767h4.8722l0.61537-3.0769z";
    String svgAM = "m102.39 204.07 3.4556-3.034 2.8292 0.0724c1.5561 0.0398 4.5255 0.0865 6.5987 0.10378l3.7695 0.0314 6.0945-4.0697c3.352-2.2384 6.6694-4.0698 7.3721-4.0698h1.2776l0.60807-2.4227 0.60807-2.4227 2.8369-2.8369c1.5603-1.5603 3.0229-3.3385 3.2503-3.9516l0.41346-1.1147 6.095-0.42825 6.095-0.42824 1.5197 2.6479 1.5197 2.6479 4.8853 2.4047 4.8853 2.4047 22.75 0.33185 22.75 0.33184 0.0153-2.8318c0.008-1.5575 0.42703-3.4826 0.93023-4.278l0.91491-1.4461-1.0093-1.8858-1.0093-1.8858 1.4632-1.168 1.4632-1.168 0.53269-3 0.5327-3-1.9287-3.1374-1.9288-3.1374 13.114-29.363c7.2126-16.149 13.31-29.684 13.549-30.078l0.43553-0.71498-5.4102-3.5922-5.4102-3.5922-4.8772-0.4667c-2.7-0.262-5.68-0.716-6.64-1.015l-1.75-0.544v-2.423l-2-1.442c-1.1-0.79284-2-1.9127-2-2.4886 0-0.57591-1.1018-2.6686-2.4485-4.6503l-2.4484-3.6032-0.68038-5.1289-0.68037-5.1289h-12.443l-3.1495 5.0664c-1.73 2.787-3.15 5.477-3.15 5.977 0 0.50078-1.1118 1.639-2.4706 2.5293l-2.4706 1.6188-2.6643-2.0957-2.6643-2.0957h-4.3302l-1.2 1.2-1.2 1.2v2.7182c0 1.495-0.27314 3.43-0.60699 4.3l-0.60699 1.5818h-3.7164l-3.4168-3c-1.8792-1.65-3.8896-3-4.4674-3h-1.0506l-0.6744-2.1248-0.6744-2.1248 1.22-0.75 1.214-0.75031-0.59205-1.8748c-0.32564-1.0312-1.03-6.1196-1.5652-11.308l-0.97317-9.4328-4.2853-6.3193c-2.3569-3.4756-4.5282-6.2058-4.8252-6.0672-0.28 0.139-2.65 1.152-5.24 2.252l-4.7129 2-0.004 1.595-0.004 1.595-1.75 1.5009c-0.9625 0.82552-4 2.5525-6.75 3.8378l-5 2.3369-3.7489 3.8172c-4.12 4.198-4.75 4.512-4.75 2.376 0-0.79254-0.40208-1.6895-0.89352-1.9932l-0.89352-0.55223-3.9124 1.3804-3.9124 1.3804-3.8722-2.8872-3.8722-2.8872h-3.62l-0.64901-4.0586-0.649-4.0586-1.7845-2.1914-1.7845-2.1914-3.0422 2.9024-3.0422 2.9024-1.289-1.0698-1.289-1.0698-1.9383 1.4173-1.9383 1.4173h-18.618v1.9182c0 1.055-0.27315 2.63-0.60699 3.5l-0.613 1.582h7.814l1.2 1.2 1.2 1.2v5.4334l-1.25 0.44821-1.25 0.4482-1.6163-0.82848-1.6163-0.82849-3.1337 1.1828-3.134 1.182v8.1692l3.4611 3.3546 3.4611 3.3546-0.45579 0.73747-0.45578 0.73747 1.4885 2.8541 1.4885 2.8541 0.006 2.5416c0.007 2.9745-6.8609 42.159-7.5019 42.8-0.23904 0.23905-2.4653-0.13393-4.9473-0.82884l-4.5127-1.2635-2.2757 1.4911-2.2757 1.4911-5.4903 1.173-5.4903 1.173-3.75 2.4756-3.75 2.4756v1.9716h-1.4286c-0.78572 0-2.1357 0.70714-3 1.5714l-1.5715 1.5714-0.0354 3.1786-0.0354 3.1786-1.4291 2.5-1.4291 2.5-0.0354 2.5378-0.0354 2.5378-2.9594 3.4622c-1.6276 1.9042-2.9776 3.932-3 4.5061l-0.0406 1.0439 8.3516 2.7198 8.3516 2.7198 13.464 2.3609 13.464 2.3609 13.434 6.2837c13.353 6.2456 32.326 13.877 34.649 13.936 0.66837 0.0171 2.7702-1.3343 4.6708-3.003z";
    String svgBA = "m464.06 322.39 2.8755-2.714-0.53466-2.1302-0.53466-2.1302 2.7273-8.9057 2.7273-8.9057 0.32165-12.5c0.29614-11.509 0.78662-18.753 1.3542-20 0.12513-0.275 0.35179-1.9878 0.50369-3.8063l0.27618-3.3063 1.8642-1.4247c1.3972-0.94956 1.3026-0.99298 0.46847-2.3428l-1.3957-0.91808 0.61433-1.6009 0.61433-1.6009h5.0628v1.941c0 1.0675 0.38542 2.1792 0.85649 2.4703l0.85648 0.52934 3.1435-3.9117c1.7-2.15 3.11-4.39 3.11-4.97 0-0.58225 0.36714-1.0586 0.81586-1.0586s1.8275-1.8 3.064-4l2.2481-4h-3.1052l-2.0114-1.7222-2.0114-1.7222-0.0318-1.5278c-0.0175-0.84027-0.6925-2.4013-1.5-3.4689-0.81-1.07-1.47-2.71-1.47-3.64v-1.7019l1.5-0.57561 1.5-0.5756 1.3723 0.52661 1.3723 0.52662 0.46163-2.4149 0.46164-2.4149-1.8582-5.8674c-1.022-3.2271-2.2973-6.3065-2.834-6.8431-0.54-0.54-0.98-1.6-0.98-2.35 0-0.75428-0.56652-1.9379-1.2589-2.6304l-1.2589-1.2589-1.2405 0.41351-1.2406 0.41352-0.60751-1.5832-0.60752-1.5832-1.143-0.006c-0.62865-0.003-2.4208-0.67263-3.9827-1.4872l-2.8396-1.481-1.9104 1.0224c-1.0507 0.56231-1.9112 1.344-1.9121 1.7372-0.00098 0.39315-2.026 1.9936-4.5 3.5566l-4.5 2.84v1.9344l-0.91459-0.56524-0.91459-0.56525-0.42279 1.2562-0.42279 1.2562-1.6626-1.3724-1.6626-1.3724v-2.8178l-1.5806-0.60652-1.5806-0.60652 0.50289-1.9231 0.50289-1.923-2.1723-0.80605-2.1723-0.80606-3.3648 3.264-3.3648 3.264-6.4062 2.103c-3.52 1.16-7.29 2.11-8.38 2.11h-1.979v-1.773l-3.1949-0.46891c-1.7572-0.2579-3.9404-0.27397-4.8515-0.0357l-1.6566 0.43321 0.71374 3.9031 0.71374 3.9031-3.2798 3.8317-3.2798 3.8317-4.8324 1.2408c-2.6578 0.68246-5.8774 1.5004-7.1546 1.8177l-2.3221 0.57689-2.4279-1.2994-2.4278-1.2994-0.0318-1.081c-0.0175-0.59456-0.67517-1.9308-1.4615-2.9695l-1.4297-1.8885-3.6362 3.8885c-5.9 6.3-6.45 7-6.45 8.2v1.1431l2.3808 1.56 2.3808 1.56-0.23044 2.9294-0.23044 2.9294-1.2721 1.5328-1.2721 1.5328 1.2563 3.033 1.2563 3.033-0.62592 0.62593-0.62593 0.62592 1.1489 1.3844 1.149 1.3844-1.0795 1.0795-1.0795 1.0795 0.51302 1.3369 0.51302 1.3369-1.1388 3.4507-1.1388 3.4507 1.9872 4.3405c2.3046 5.0338 2.7241 7.6286 1.6383 10.134-0.42748 0.98622-0.57336 1.997-0.32419 2.2462 0.5637 0.5637 11.785-5.4329 13.699-7.321 2.0762-2.0475 5.7333-3.2183 10.053-3.2183h3.8279l0.60699 1.5818c0.34 0.87 0.61 2.49 0.61 3.6v2.012l4.75-0.64236 4.75-0.64235 6.207 4.0485 6.207 4.0485h4.78l1.996 1.75c1.0978 0.9625 2.5003 2.7024 3.1167 3.8664l1.1206 2.1164 5.2656 0.6985 5.2656 0.6985 3.7708 2.1193 3.7708 2.1193v4.5184l-1.9272 1.3499c-1.06 0.74242-2.4822 2.5679-3.1605 4.0567-0.67833 1.4888-1.5953 2.7068-2.0376 2.7068-0.44237 0-1.3291 0.98056-1.9705 2.179l-1.1662 2.179 1.7885 3.321c0.98365 1.8265 2.1676 3.321 2.631 3.321h0.84253v3.8866l2.2225 1.5567c2.806 1.9654 2.449 2.0363 5.8326-1.1573z";
    String svgCE = "m481.13 179.45 1.3724-1.6536 0.0663-6.0964c0.0365-3.353 0.40049-7.5167 0.80889-9.2527l0.74255-3.1564 2.3534-0.59066 2.3534-0.59066 3.6295-6.4901 3.6295-6.4901 1.856-0.99332 1.856-0.99332-8.1478-7.8188c-10.55-10.14-14.07-12.76-24.65-18.4l-3.5-1.8675-6 0.65091-6 0.65092-1.1661 0.92248-1.1661 0.92248 0.28814 4.2739 0.28814 4.2739 1.1243 2.1007 1.1243 2.1007-0.12442 4.8226c-0.0684 2.6524 0.0871 7.6157 0.34558 11.03l0.47002 6.2071 1.0173 1.2929c0.55954 0.7111 1.3094 2.8303 1.6664 4.7094l0.64902 3.4165 2.4348 3.1922 2.4348 3.1922-1.501 2.143-1.5011 2.143 0.6312 1.0213 0.63119 1.0213 5.217-0.17048 5.217-0.17048 1.9709 1.0548c1.084 0.58015 2.8232 1.9965 3.8647 3.1474 2.2832 2.523 3.8799 2.6457 5.7114 0.43896z";
    String svgDF = "m359.71 287.85-0.21-3.25l-1-0.73469-1-0.73468-5.75-0.0153-5.75-0.0153v8h13.92l-0.20975-3.25z";
    String svgES = "m441.96 363.17 1.0341-1.9323 1.9116-0.60672 1.9442-1.096 1.7317-2.2034 1.7643-2.6927 2.4538-2.3764c-0.28331-3.7698-2.3439-4.1704 1.3873-4.1704l1.7388-1.9898 1.0338-1.9317 1.0338-1.9317 0.81049-7.5646 0.81049-7.5646-3.6129-2.5037-3.6129-2.5037h-5.1786l-0.57561 1.5-0.5756 1.5h-3.0628v0.95295c0 0.52412 0.52779 2.1113 1.1729 3.5271l1.1729 2.5742-1.0998 1.0998-1.0998 1.0998 0.90815 2.3886 0.90814 2.3886-3.2061 5.2344c-3.3197 5.4199-6.428 8.6436-8.3897 8.7012l-1.1334 0.0333-0.46806 2.4485-0.46806 2.4485 0.75442 0.80148c0.41493 0.44082 0.91609 1.698 1.1137 2.7938l0.35927 1.9923 2.9878 0.63939c1.6433 0.35166 3.3095 0.69263 3.7026 0.75771 0.39315 0.0651 1.1802-0.75121 1.7489-1.814z";
    String svgGO = "m316.09 332.35 2.91-2.74v-2.4362l1.75-0.90984c0.9625-0.50041 4.45-1.2369 7.75-1.6367l6-0.72686 0.71251-1.1485 0.7125-1.1485 7.2875 0.18527c4.0081 0.10191 8.457 0.28243 9.8863 0.40117l2.5988 0.2159 2.0064-2.0064 2.0064-2.0064 0.62856-2.5044 0.62856-2.5044-1.9602-1.774-1.9603-1.774 2.5077-2.9802 2.5077-2.9802-0.65364-2.1361c-0.3595-1.1749-1.0798-2.6699-1.6006-3.3222l-0.94701-1.1861 1.0694-1.9982c0.58816-1.099 1.0694-2.2346 1.0694-2.5235 0-0.28891-3.7125-0.65599-8.25-0.81574l-8.25-0.29 0.16211-3.5c0.0892-1.925 0.20166-4.0625 0.25-4.75l0.0879-1.25h13.755l0.94553 1.25c0.52003 0.6875 1.001 2.3134 1.0688 3.613 0.0678 1.2997 0.36811 2.6079 0.66734 2.9071l0.54405 0.54406 2.1906-0.97749 2.1906-0.97749 0.27755-4.7773 0.27756-4.7773 1.1547-1.3913 1.1547-1.3913 0.8867 0.54801 0.88669 0.548v-1.359c0-0.74746 0.53386-1.8929 1.1864-2.5454l1.1863-1.1863 1.7764 1.6076 1.7764 1.6076 1.5372-0.58989 1.5372-0.5899v-4.0092l-2.2254-4.5804-2.2254-4.5804-8.465 0.3746-8.465 0.3746-0.39303 1.1791-0.39303 1.1791h-3.4562l-2.1351-1.9891-2.1351-1.9891-1.479 0.56756-1.479 0.56756-1.6894-2.5784-1.6894-2.5784h-5.1124l-1.5787 1.3848-1.5787 1.3848-5.75-2.5119-5.75-2.5119-0.0304-2.6228-0.0304-2.6228-1.0247 1.7596c-0.56357 0.96779-2.0903 2.8253-3.3928 4.1278l-2.3682 2.3682-1.1422 4.3722c-0.6282 2.4047-1.7879 6.6222-2.577 9.3722l-1.4349 5-3.2497 1.5-3.2497 1.5-1.3196 4.1693-1.3196 4.1693-3.6869 1.4752-3.6869 1.4752-2.4436 4.3555c-1.344 2.3955-3.2311 5.2038-4.1936 6.2405-0.9625 1.0368-2.4358 3.3303-3.274 5.0967l-1.524 3.2116 0.95175 3.3186 0.95174 3.3185-0.55397 2.2072-0.55396 2.2072 2.4838 0.62341 2.4839 0.62341-0.5241 2.0042-0.5241 2.0042h1.602c0.88111 0 4.1961 1.2821 7.3666 2.8491 6.2624 3.0951 14.56 6.9895 15.104 7.0889 0.1869 0.0341 1.6494-1.174 3.25-2.6847z";
    String svgMA = "m382.39 208.52c0.88563-2.3079 0.74229-7.4596-0.3096-11.127l-0.91658-3.196 3.3939-6.2974 3.3939-6.2974 0.0227-2.095 0.0227-2.095 1.75-1.5771c0.9625-0.86739 3.1-1.9003 4.75-2.2953 4.5286-1.0842 8.5869-3.3399 12.794-7.1109l3.7939-3.4008 3.7061 0.62439c2.0383 0.34342 4.4047 0.81221 5.2585 1.0418l1.5524 0.41737 1.8408-1.346 1.8408-1.346-1.7792-4.6586-1.7792-4.6586 1.8505-4.75c1.0178-2.6125 1.7072-5.2 1.5321-5.75-0.17512-0.55-0.41165-3.475-0.52564-6.5l-0.20725-5.5 3.3945-5.1626 3.3945-5.1626 2.2321-0.56021c2.27-0.56 6.6-3.82 6.6-4.97 0-0.34798-0.83776-0.6327-1.8617-0.6327s-4.839-1.35-8.478-3l-6.6164-3h-3.9258l-0.61803 1-0.61803 1h-5.764l-0.61803 1c-0.33992 0.55-1.0415 1-1.559 1h-0.94098l-0.0761-1.75-0.0761-1.75-1.2428 3.4396-1.2428 3.4396-1.1811 0.3937-1.1811 0.39371v-4l-1.1434-0.38114-1.1434-0.38113 1.1461-2.1415 1.1461-2.1415-1.0837-0.66979-1.0837-0.66978 0.60523-2.4114 0.60522-2.4114-1.0471-1.9566c-0.57591-1.0761-1.9851-2.4586-3.1316-3.0721l-2.0844-1.1156-1.0422 1.0422-1.0422 1.0422-3.5783-2.9495c-1.97-1.622-4.15-2.949-4.85-2.949h-1.2722l-0.0703-1.25-0.0703-1.25-0.85943 2c-0.47269 1.1-0.89106 3.246-0.92971 4.7689l-0.0703 2.7689-3 5.6219c-1.65 3.092-3 6.3669-3 7.2774v1.6556l-3.4744 5.4537c-1.9109 2.9995-3.4859 5.7634-3.5 6.1419-0.0141 0.37856-1.3545 2.1432-2.9786 3.9215l-2.953 3.2332 0.45604 0.73788 0.45604 0.73789-4.253 2.098c-2.3391 1.1539-5.3612 2.9563-6.7157 4.0054l-2.4627 1.9074 3.6146 0.67811 3.6146 0.67811 2.8481 2.9782 2.8481 2.9782-0.0464 8.679-0.0465 8.679-1.2892 2.3444-1.2892 2.3444 1.9607 2.1556c1.0784 1.1856 2.5057 3.211 3.1718 4.5008l1.2111 2.3451 3.3156-0.62201 3.3156-0.62201 1.6558 1.6558 1.6558 1.6558-0.55751 1.4528c-0.30664 0.79906-0.55752 2.0825-0.55752 2.852v1.3992l-2.3103 0.57985-2.3103 0.57985-0.96853 3.1892-0.96852 3.1892 2.7759 4.1759 2.7759 4.1759-0.57438 1.4968-0.57437 1.4968 2.0773 2.0773 2.0773 2.0773h2.786l0.60699-1.5818z";
    String svgMT = "m238.9 306.49 3.3955-1.6253 4.3717 0.59921 4.3717 0.5992 2.9331 1.5168 2.9331 1.5168h2.883c1.5856 0 3.1976-0.31464 3.5822-0.6992l0.6992-0.6992 4.2913 0.2639 4.2913 0.26389 1.2879-1.5518 1.2879-1.5518 1.5489 0.86679 1.5489 0.86678 1.0894 3.2952 1.0894 3.2952 1.3854 0.45357 1.3854 0.45358-0.64201-3.4222-0.64202-3.4222 3.2566-4.8521c1.7911-2.6687 4.1718-6.331 5.2903-8.1384 1.1185-1.8075 2.8758-4.2168 3.905-5.3541l1.8713-2.0678h3.5964l1.9227-4.25c1.0575-2.3375 2.8961-5.2625 4.0858-6.5l2.163-2.25h2.6056l1.0728-3.75c0.59002-2.0625 1.3954-5.325 1.7897-7.25 0.39429-1.925 1.8135-5.9008 3.1537-8.835l2.4368-5.335-0.96748-2.7753-0.96748-2.7753 0.22934-11.89 0.22934-11.89 2.1295-6.4571c1.1712-3.5514 1.905-6.6816 1.6306-6.956-0.27444-0.27443-19.657-1.5387-43.071-2.8094l-42.572-2.3104-2.8329-2.2335-2.8329-2.2335-0.0553-1.2814-0.0553-1.2814-1.75-0.61763c-0.9625-0.33969-2.7625-1.529-4-2.6429l-2.25-2.0253v-2.2108c0-2.89-3.1-12.43-4.04-12.43-1.1331 0-2.1098 3.9241-2.6007 10.448l-0.44752 5.9478-1.0807 1.3022-1.0807 1.3022h-39.756l0.0436 0.75c0.0239 0.4125 0.41781 2.6859 0.87524 5.052l0.83169 4.302-1.4317 4.8841-1.4317 4.8841 2.6843 4.0562 2.6843 4.0562 5.1762-0.11933 5.1762-0.11933 3.196 1.6527 3.196 1.6527-0.0153 1.7243c-0.008 0.94838-0.39893 2.3296-0.86779 3.0694l-0.85248 1.3451 1.869 4.9189 1.869 4.9189-1.9658 3.736c-1.0812 2.0548-2.945 5.761-4.1418 8.236s-2.4503 4.6198-2.7854 4.7663c-0.33519 0.14644-1.1993 0.63994-1.9203 1.0967l-1.3109 0.83041 2.1937 2.4628 2.1937 2.4628 0.38289 3.4406c0.21059 1.8923 0.45643 5.0407 0.54631 6.9963l0.16343 3.5558-0.78383 1.2683-0.78383 1.2683 2.1048 2.2404 2.1048 2.2404v9.3096l12.25 0.28078 12.25 0.28078 0.0662 1.5c0.0364 0.825-0.33104 2.3139-0.81657 3.3086l-0.88279 1.8086 0.65082 2.9631 0.65081 2.9631 3.4056 1.423 3.4056 1.4229 1.603 3.3616 1.603 3.3616 4.6571-4.297 4.6572-4.297 3.3955-1.6253z";
    String svgMS = "m264.1 397.01 1.5954-0.81411 2.1069 1.4758 2.1069 1.4758 1.0477-1.9576c0.56-1.09 1.03-2.67 1.03-3.53v-1.5657l1.9746-1.9746c1.086-1.086 2.234-2.9985 2.5511-4.25l0.57652-2.2754 8.732-6.173 8.732-6.173 4.841-9.827 4.841-9.827 3.2981-3 3.2981-3 0.32788-4.345 0.32788-4.345-3.5-1.8447c-1.925-1.0146-5.975-2.9485-9-4.2975s-7.2116-3.2388-9.3035-4.1996l-3.8035-1.7468 0.45374-1.1824 0.45374-1.1824-1.9002-1.1867-1.9002-1.1867v-3.983h-0.96104c-0.52858 0-1.8786-0.98485-3-2.1886l-2.03-2.19v-3.6228h-0.94098c-0.51754 0-1.2191 0.45-1.559 1l-0.61803 1h-10.764l-0.6203 1.0037-0.6203 1.0037-2.6887-0.61035c-1.4788-0.33569-4.632-1.5174-7.0072-2.626l-4.3184-2.0157-4.4372 0.50013-4.4372 0.50014-4.7444 4.3181c-5.9942 5.4556-5.9091 5.3041-8.2403 14.671-1.0738 4.3144-2.6689 9.2807-3.5446 11.036l-1.5922 3.1917-0.37542 3.1682c0.0521 0.90141-0.69449 2.0919 0.30735 4.7388l1.7715 5.3103 1.7715 5.3103-0.2225 5c-0.12238 2.75-0.4381 5.7353-0.70161 6.6339l-0.4791 1.6339 2.7805 0.7385c1.5293 0.40618 5.0191 0.93235 7.7551 1.1693l4.9745 0.43076 1.1924-1.6307 1.1924-1.6307 2.3331 1.4585c1.2832 0.80219 3.5136 1.7313 4.9565 2.0648l2.6234 0.60625 1.3503 3.2598 1.3502 3.2598-0.29523 2.2529-0.29523 2.2529h2.1432v8.1314l1.04 1.9433 1.04 1.9433 2.71-0.64734c1.4905-0.35604 3.4279-1.0137 4.3054-1.4614z";
    String svgMG = "m377.98 382.12 1.9773-1.9773 1.2727 0.48399 1.2727 0.48398 10.921-3.5067 10.921-3.5067h9.6168l4.0116-1.6051 4.0116-1.6051 1.1562-3.8592 1.1563-3.8592 2.3524-2.21 2.3524-2.21v-5.5234l3.8343-2.155 3.8343-2.155 2.8473-5.2635 2.8472-5.2635-1.3411-3.2378-1.3411-3.2378 1.4096-0.87713 1.4096-0.87712-1.0516-1.7805-1.0516-1.7805 0.35214-1.5 0.35215-1.5 2.4851-1.8236 2.4851-1.8236 3.3138-0.17643 3.3138-0.17643-2.1856-3.5-2.1856-3.5 0.68519-2.5c0.6392-2.3322 1.9301-4.1189 7.802-10.799l2.3148-2.6333-1.7975-1.3144c-0.98861-0.72289-4.0027-1.9692-6.698-2.7696l-4.9005-1.4553-2.1468 0.5388-2.1468 0.5388-1.2281-3.3963-1.2281-3.3963-2.539-1.1569c-1.39-0.59-3.31-1.11-4.25-1.11h-1.7208l-3.6791-2.5c-2.0235-1.375-4.1155-2.5-4.6488-2.5-0.53335 0-1.1438-0.52232-1.3566-1.1607l-0.3869-1.1607-5.5567 0.18158-5.5567 0.18158-1.2516-1.5081-1.2516-1.5081 0.56085-1.4615 0.56084-1.4616-1.8639-0.59158-1.8639-0.59159-2.835 0.67163-2.835 0.67164-2.0846 1.8877c-2.5443 2.304-15.154 8.8498-17.047 8.8498h-1.3679v-1.3776c0-0.75765-0.66245-1.9273-1.4721-2.5993l-1.4721-1.2218-1.5993 1.5993c-0.87962 0.87962-2.2422 1.5993-3.0279 1.5993h-1.4286l-0.14537 2.25c-0.0799 1.2375-0.057 3.6052 0.051 5.2615l0.19636 3.0115-2.9035 1.0959-2.9035 1.0959-1.0955 3.1425-1.0955 3.1426h1.737l0.68378 3.1132 0.68379 3.1132-2.066 2.7945-2.066 2.7944 1.4735 0.56543 1.4735 0.56543-0.38002 4.5618c-0.20901 2.509-0.55181 4.6929-0.76178 4.8532s-1.9568 1.2356-3.8818 2.3895l-3.5 2.098-8.2492-0.71088-8.2492-0.71088-1.4562 1.4562-1.4562 1.4562-5.0152 0.25361c-2.7584 0.13949-5.9285 0.54346-7.0446 0.89771l-2.0294 0.6441v2.4892l-2.9513 2.182-2.9513 2.182-1.0216 3.6998c-0.56186 2.0349-0.87572 3.8457-0.69746 4.0239 0.17827 0.17826 1.5756-0.32517 3.1052-1.1187l2.7811-1.4428 2.6177 1.0018 2.6177 1.0018 5.25 0.12868 5.25 0.12868v4.8444l4.25-0.80237c2.3375-0.4413 5.899-0.83631 7.9145-0.87781l3.6645-0.0754 0.75214-0.75 0.75214-0.75h6.3567l1.7763 1.9628 1.7763 1.9628-0.56184 1.4641-0.56184 1.4641 1.3845 1.149 1.3845 1.149-1.0035 2.2024-1.0035 2.2024 1.0348 2.7216 1.0348 2.7217h2.7396l1.8137 2.0041 1.8136 2.0041-1.1587 2.543c-0.65 1.4-1.17 3.62-1.17 4.94v2.3958l2.0988 3.5572 2.0988 3.5572h3.8024l1.9773-1.9773z";
    String svgPA = "m324.39,200.68 0.60679,-2.4176 5.0108,-5.4826 5.0108,-5.4826 1.3568,-3.8498 1.3568,-3.8498 -0.86152,-2.325 -0.86152,-2.325 1.1364,-4.675 1.1364,-4.675 1.514,-1.75 c 0.83273,-0.9625 2.0193,-1.75 2.6368,-1.75 1.6156,0 4.4247,-3.5518 7.2365,-9.15 l 2.4418,-4.8615 -0.61451,-0.9943 -0.6145,-0.99429 h -3.9448 l -0.62213,-1.6212 -0.62213,-1.6212 3.9035,-3.347 c 2.1469,-1.8408 5.6011,-4.2098 7.676,-5.2644 l 3.7725,-1.9174 3.2802,-4.3643 c 4.7429,-6.3104 8.8619,-13.631 10.895,-19.364 0.97519,-2.75 2.4013,-6.35 3.1692,-8 1.6474,-3.5399 3.6226,-11.672 3.0572,-12.587 -0.21725,-0.35153 -2.5441,-1.2202 -5.1708,-1.9305 -2.6267,-0.71024 -5.2258,-1.5468 -5.7758,-1.859 -1.8275,-1.0375 -3.9498,-1.403 -9.3047,-1.6026 l -5.3047,-0.19772 -1.967,2.5007 c -1.0819,1.3754 -2.231,3.5526 -2.5537,4.8382 l -1.08668,1.0875 -0.35825,1.25 c 0,0 -2.3695,1.5112 -4.2166,3.3583 -1.8471,1.8471 -4.2833,3.75 -4.2833,3.75 0,0 1.6066,-2.4678 0,0 l -1.846,0.0036 -1.0886,-1.7658 -0.4176,-2.5028 -0.1893,-2.0805 3.20715,-0.948141 2.43107,-1.49081 c 10.16693,-10.177602 5.57371,-6.559175 5.57371,-6.559175 l 0.62652,-3.039373 0.84915,-4.466708 -12.38765,-2.263271 -3.91224,1.568971 -10.2762,-1.789786 -3.87145,2.646214 -1.9269,8.479846 -5.53666,2.873483 c -5.57854,2.895218 -10.867,6.3448 -12.232,4.1364 l -0.67189,-1.0871 1.1129,-1.1129 c 0.61,-0.612 1.11,-1.473 1.11,-1.913 v -0.8 h -3.6076 l -3.127,-3.25 -3.127,-3.25 -0.69766,-2.83 -0.69765,-2.83 -2.2868,-1.0419 -2.2868,-1.0419 -0.5711,-2.1281 c -0.31411,-1.1705 -0.57725,-3.8118 -0.58476,-5.8696 l -0.0136,-3.7415 -2.0722,-1.2585 -2.0722,-1.2585 -1.3768,-3.25 -1.3768,-3.25 h -1.3189 c -0.72539,0 -2.9193,-1.0875 -4.8753,-2.4166 l -3.56,-2.416 -2.92,-0.334 -2.93,-0.333 -0.30525,-3.6642 -0.30525,-3.6642 -1.3702,-0.52578 -1.3702,-0.52578 -3.7235,1.0281 -3.7235,1.0281 -2.375,-0.45401 -2.375,-0.454 -0.48329,0.78197 -0.48329,0.78198 0.95295,2.5065 0.95296,2.5064 -1.2414,1.0303 -1.2414,1.0303 -8.3991,-0.84672 -8.3991,-0.84671 -1.3053,0.50089 c -0.72,0.276 -1.31,0.903 -1.31,1.394 v 0.89301 l -1.25,0.0339 c -0.6875,0.0187 -3.0415,0.88093 -5.2311,1.9162 l -3.9812,1.8822 -0.84288,-0.52093 -0.84289,-0.52093 -2.176,1.9558 c -1.1968,1.0757 -2.9635,2.2337 -3.926,2.5734 l -1.75,0.61763 0.007,1.7814 c 0.004,0.97976 0.64001,5.9966 1.4136,11.148 l 1.4065,9.367 4.2462,6.2616 4.2462,6.2616 6.1648,1.0215 6.1648,1.0215 5.6754,3.6306 5.6755,3.6306 v 1.5359 c 0,0.84476 -5.9031,14.768 -13.118,30.941 l -13.118,29.405 0.61155,1.2785 c 0.33636,0.70317 1.0144,1.9535 1.5068,2.7785 0.49239,0.825 2.0325,3.75 3.4224,6.5 l 2.5271,5 0.69622,4 c 0.38292,2.2 1.3311,5.0125 2.107,6.25 l 1.4108,2.25 h 2.3994 l 3.5273,3.9407 3.5273,3.9407 35.5,1.9257 c 19.525,1.0591 39.164,1.9858 43.642,2.0593 l 8.1416,0.13358 0.60679,-2.4176 z";
    String svgPB = "m510 186.6 2.3486-2.5h7.5212l2.5651-0.97525 2.56-0.97c-0.28214-3.9485 10.409-0.0462 9.694-2.5344-0.65581-1.8699 1.6073-4.2916-0.53164-5.4986l-0.84938-2.0198-0.31293-2.735-3.75-0.61983c-2.0625-0.34091-5.2421-0.62479-7.0657-0.63084l-3.3157-0.011-1.9343-1.0352-1.9343-1.0352v4.0704l-2.0814 2.0814-2.0814 2.0814-1.6686-1.4485-1.6686-1.4485-3.1548 0.0339-3.1548 0.0338-1.5302-1.5302-1.5302-1.5302 2.471-3.6364c1.3591-2.0001 2.2426-3.6365 1.9635-3.6365-0.27914 0-3.0514 1.125-6.1605 2.5l-5.6529 2.5h-5.518l-0.51255 2.6812-0.51255 2.6813 1.0565 2.3187 1.0565 2.3188-1.094 2.4012-1.094 2.4012 3.4057 0.6389 3.4057 0.63891 2.8507-1.4742c1.5679-0.81078 3.4355-2.1788 4.1503-3.0401l1.2996-1.5659h4.5102l1.3311 1.6039 1.3311 1.6039-1.6885 2.942-1.6885 2.942 1.2204 1.9541c1.616 2.5876 2.9112 2.4644 5.7393-0.54589z";
    String svgPR = "m306 433.1c0-0.55 0.9-1.9 2-3l2-2h4.0628l0.49736-1.2961 0.49736-1.2961 4.7663 0.15124 4.7663 0.15124 2.272 1.2159 2.272 1.2159 2.3978-1.5711 2.3978-1.5711h7.0704v-2.9006l-1.75-0.98741-1.75-0.98741 1.2482-1.2605 1.2482-1.2605 3.5689 0.10117 3.5689 0.10116-1.624-1.7944-1.624-1.7944-2.0894 0.54638-2.0894 0.54638 0.50751-2.6549 0.50751-2.6549h-8.5086l-0.57561-1.5-0.5756-1.5 0.52853-1.3773 0.52852-1.3773-2.0562-3.3727-2.0562-3.3727-0.004-4.0275-0.004-4.0275-1.5567-2.2225-1.5567-2.2225h-10.957l-2.5541-1.6735-2.5541-1.6735-3.6607-0.34039c-2.0134-0.18721-6.7199-0.59849-10.459-0.91395l-6.7982-0.57357-4.3303 2.0355-4.3303 2.0355-0.59422 2.3676c-0.32682 1.3022-1.5065 3.4194-2.6214 4.705l-2.03 2.35v4.0364l-1.5724 1.7375-1.5724 1.7375-0.38479 6.0209-0.38479 6.0209-1.5441 3.6956-1.5441 3.6956 2.7795-0.5559 2.7795-0.5559 2.2218 3.2425c1.222 1.7834 2.2218 3.7179 2.2218 4.299v1.0564l4.25 0.65417c2.3375 0.3598 5.6 0.87071 7.25 1.1354 1.65 0.26465 5.7 1.3553 9 2.4237s6.5625 1.9667 7.25 1.9963l1.25 0.0538v-1z";
    String svgPE = "m516.75 200.4 3.8312-0.37457c3.0049-0.37031 2.5974-0.26767 4.8373 0.24456l2.718 0.12758c1.3762-0.36614 1.9803 0.0383 3.0041-1.7982l0.85943-2 0.85943-2 0.0703-4.6682c0.0387-2.5675 1.183-4.173 0.84913-5.043l-0.29411-2.7441-4.0421-0.0447h-2.3433l-0.79969 1.338-0.79969 1.338-4.3676 1.0855-4.3676 1.0855-1.4114-0.54158-1.4113-0.54158-2.9798 3.1181c-3.3987 3.1024-6.72 3.1675-8.5948-0.0202l-2.6324-2.7477 2.0822-3.5291 2.0822-3.5291-0.94137-0.5818-0.94136-0.5818-4.2584 2.8962c-2.3421 1.5929-5.307 3.1594-6.5886 3.4812l-2.3302 0.58496-3.8939-1.3738-3.8939-1.3738-0.58496 0.94648-0.58496 0.94649h-3.7686l-1.3067-1.8299c-0.72-1.01-2.43-2.54-3.81-3.42l-2.5-1.5874-5.7387-0.0448-5.7387-0.0448 0.23867 4.6258 0.23867 4.6258-4.1193 3.1774-4.1193 3.1774 1.8693 1.1674 1.8693 1.1674v1.5267c0 0.83969 0.70986 2.6101 1.5775 3.9342l1.5775 2.4075 4.9446-3.6927c2.7195-2.031 6.287-4.6619 7.9277-5.8465l2.9831-2.1538 5.6779 2.9038c3.1228 1.597 6.1663 2.9037 6.7633 2.9037h1.0854l1.5382 2.5351 1.5382 2.5351 2.3464-2.0351c1.2905-1.1193 2.5285-2.0351 2.751-2.0351s2.5161 1.1934 5.097 2.6519c2.5808 1.4586 6.0424 2.9706 7.6924 3.3602l3 0.70833 2-1.3744c1.1-0.75595 3.4625-2.1264 5.25-3.0454z";
    String svgPI = "m401.56 217.63 5.6604-1.4743 2.3872-2.7757 2.3872-2.7756 0.001-2.3157c0.00067-1.2737-0.43932-3.1389-0.97777-4.145l-0.97898-1.8292 1.5825-1.3134 1.5825-1.3134 3.853 0.15365 3.853 0.15364 2.7488 1.4403 2.7488 1.4403 6.0446-2.1356 6.04-2.14 2.0969-2c4.6547-4.4397 8.433-7.5 9.2596-7.5 0.48059 0 2.0127-0.89585 3.4047-1.9908l2.5309-1.9908-0.95919-3.7789-0.95919-3.7789 1.9658-4.586 1.9658-4.586-2.3666-2.8943-2.3666-2.8943-0.0397-2.5-0.0397-2.5-1.8539-3.04-1.8539-3.04 0.42674-2.96 0.42673-2.96-0.91686-4.0454-0.91685-4.0454 0.8632-2.3335 0.8632-2.3335-0.87103-1.1211c-1.1379-1.4645-2.1065-5.1011-2.7623-10.371l-0.52892-4.25h2.2494l-0.61803-1-0.61803-1h-4.7472l-0.61356 1.9331-0.61356 1.9332-4.3452 2.1035-4.3452 2.1035-2.5395 3.8375-2.5395 3.8375 0.32366 6.8759 0.32365 6.8759-1.7849 4.1331-1.7849 4.1331 1.8931 4.2285 1.8932 4.2285-1.2744 2.6384-1.2744 2.6384h-15.216l-2.83 2.8248-2.83 2.8248-3.5388 1.5443c-1.9464 0.84938-4.8766 1.8442-6.5116 2.2106l-2.9727 0.66628-0.96223 3.4646c-0.52922 1.9055-2.2388 5.8553-3.799 8.7772l-2.8367 5.3126 1.0642 3.9522 1.0642 3.9522-0.67293 3.7352c-0.3701 2.0544-1.1194 4.2977-1.665 4.9852l-0.99206 1.25h5.3124l2.065 3.5 2.065 3.5h1.8524c1.0188 0 4.3996-0.66346 7.5128-1.4744z";
    String svgRJ = "m425.6 386.51-0.53358-1.3905 2.6673-2.4733 2.6673-2.4733c6.9988-1.9634 5.6516-1.8686 8.0354-3.5234 0.024-0.4125 0.0186-2.9635 0.47171-5.3062l0.82389-4.2594-3.7574-0.60084-3.7574-0.60084-1.2607-2.3556-1.2607-2.3556-0.96093 0.59389c-0.52851 0.32663-2.0009 2.9454-3.2719 5.8194l-2.311 5.2255-4.7551 2.2352-4.7551 2.2352-3.5723-0.49127-3.5723-0.49126-6 1.5513c-3.3 0.85321-6.4275 1.9344-6.95 2.4026l-0.95 0.85131 1.8151 0.73095c1.5476 0.62322 1.7546 0.72803 2.2416 0.91382l1.9696 0.7514-1.2586 2.8227c-0.16648 0.37339-0.29042 2.3453 2.3505 0.93196l1.8895-1.0112 1.4461 0.91491c0.79537 0.5032 2.4363 0.92181 3.6464 0.93023l2.2003 0.0153 0.9259-1.6545 0.9259-1.6545 1.6872 0.64743 1.6872 0.64742-1.1411 0.79918 0.19477 1.585 5.5419-0.17076c3.1805-0.098 6.1458 0.14271 6.5958-0.0504l0.81818-0.35115z";
    String svgRN = "m512 167.66v-2.3185l1.4361-1.1918 1.4361-1.1918 1.8139 0.94578 1.8139 0.94578 6.8914 0.71835 6.8914 0.71835-0.66548-2.3447c-0.36601-1.2896-0.93734-3.5895-1.2696-5.1108l-0.60414-2.766-2.0545-2.9499c-2.0647-1.7431-3.724-2.1764-5.373-2.4491l-5.6656-0.56899h-5.3495l-4.3508-2.9221-4.3508-2.9221-2.7996 1.4478-2.7996 1.4477v0.9549c0 0.5252-1.5806 3.4258-3.5125 6.4458l-3.5125 5.4909-2.2375 1.2172-2.2375 1.2172 2.5 0.64892 2.5 0.64891 5.7215-2.8376c3.1468-1.5607 6.3612-2.8376 7.143-2.8376h1.4215l0.52075 1.357 0.52075 1.357-1.9072 2.893c-1.0489 1.5911-1.9101 3.5117-1.9138 4.268l-0.007 1.375 2.9128-0.58256 2.9128-0.58255 1.2005 1.4465 1.2005 1.4466 0.8867-0.54801 0.88669-0.548v-2.3185z";
    String svgRS = "m 284.54,527.5 3.4075,-2.599 2.5647,-5.651 c 1.4106,-3.108 3.0585,-6.5305 3.662,-7.6056 l 2.99869,-2.83108 c 10.4092,-8.18691 10.41908,-8.1864 12.71,-9.9864 l 7.0269,-11.877 c 2.3894,-4.0387 5.6654,-10.779 6.1705,-11.301 0.52,-0.53 0.93,-1.6 0.93,-2.38 v -1.4166 l -1.9632,0.51339 -1.9632,0.5134 -1.0853,-1.3077 -1.0853,-1.3077 0.94499,-0.58404 c 0.51975,-0.32122 1.8844,-2.3863 3.0325,-4.589 l 2.0875,-4.005 h -8.0588 l -2.2045,-2.2803 c -1.2125,-1.2542 -3.3331,-3.6844 -4.7125,-5.4006 l -2.508,-3.1203 -6.492,-2.9521 -6.492,-2.9521 -4.5,-0.77318 c -2.475,-0.42525 -5.8699,-0.79912 -7.5442,-0.83083 l -3.0442,-0.0576 -6.9558,3.3562 c -3.8257,1.8459 -7.8558,4.2143 -8.9558,5.2631 -1.1,1.0488 -3.575,2.9 -5.5,4.1138 l -3.5,2.2069 -6.3441,7.9635 c -3.4892,4.3799 -8.3529,10.205 -10.808,12.944 l -4.464,4.9806 1.1456,0.38186 1.1456,0.38185 1.1125,-1.1125 c 0.61188,-0.61191 1.9046,-1.1125 2.8727,-1.1125 h 1.7602 l 5.0398,4.9608 5.0398,4.9608 v 3.3084 l 2.3715,-1.5539 2.3715,-1.5539 2.8046,2.9273 2.8046,2.9274 2.0739,0.64195 c 1.1407,0.35308 3.9764,2.3833 6.3016,4.5115 l 4.2276,3.8696 h 2.6134 l 1.8306,3.25 c 1.0068,1.7875 2.945,4.1997 4.3071,5.3605 l 2.4766,2.1105 -2.0915,4.0996 -2.0915,4.0996 v 2.0398 c 0,2.6264 0.43453,2.5729 4.541,-0.55919 z";
    String svgRO = "m184.63 255.83c0.59006-0.36468 2.8182-4.0552 4.9515-8.2011l3.8787-7.5381-1.7711-4.9867-1.7711-4.9867 1.0388-1.9409c1.4436-2.6974 1.4187-2.7443-2.1105-3.9746l-3.1492-1.0978h-7.4318l-2.6548-2.0883-2.6548-2.0883-1.5683-3.0327-1.5683-3.0327 1.127-4.4756 1.127-4.4756-0.66789-5.9034-0.66789-5.9034h-1.8506c-1.0178 0-3.7722-0.75192-6.1208-1.6709l-4.2702-1.6709-3.2981-3.3291-3.2981-3.3291-3.7019 0.0293-3.7019 0.0293-3.1569 2.8734-3.1569 2.8734-1.7122 3.6081-1.7122 3.6081-2.6093 0.65489-2.6093 0.65488-4.9901 3.5843-4.9901 3.5843-6.6731-0.16791-6.6731-0.1679-2.8455 2.97-2.8455 2.97 6.987-0.68721 6.987-0.6872 1.9208-0.99154 1.9208-0.99154 1.3309 1.8201 1.3309 1.8201-0.0911 6.5565c-0.0501 3.6061-0.0645 8.391-0.032 10.633l0.0591 4.0766 2.259 2.9234c3.0287 3.9195 3.6229 4.4626 8.5248 7.7908l4.2232 2.8674 3.2768-0.49561 3.2768-0.49562 2.8178 1.4389 2.8178 1.4389 1.1822-0.41364 1.1822-0.41363 3.2286 2.8036 3.2286 2.8036 3.524 0.66111 3.524 0.66111 2.2474 2.3513 2.2474 2.3513 7.5308-0.26861c4.142-0.14774 8.0136-0.56698 8.6037-0.93165z";
    String svgRR = "m167 85.173v-3.9274l2.6349-2.0726 2.6349-2.0726h3.1208l2.6917 2.5788 2.6917 2.5788 1.1271-1.3288c1.97-2.306 6.11-8.885 6.11-9.685 0-0.42187 0.91753-1.7519 2.039-2.9556l2.039-2.1886h11.922v-8.8572l-1.5714-1.5714c-0.87-0.864-1.94-1.571-2.38-1.571-0.44545 0-2.1914-1.413-3.8799-3.14l-3.07-3.14-0.65999-3.11-0.66-3.11-1.5215-1.7255-1.5215-1.7255 0.71157-4.7745c0.39137-2.626 0.78199-5.8995 0.86805-7.2745l0.15648-2.5 1.8864-1.5577 1.8864-1.5577-0.69709-3.1738-0.69709-3.1738-2.6746-1.3029-2.6746-1.3029 0.31748-4.2155 0.31748-4.2155h-6.0722l0.5149 1.3418 0.51491 1.3418-4.0492 3.6582-4.0492 3.6582h-3.7246l-2.4006 1.8883-2.4006 1.8883-3.8088 1.0517-3.8088 1.0517-1.4381-0.55187-1.4381-0.55186-1.3293 1.1032-1.3293 1.1032-0.80564-0.74132-0.80564-0.74132 0.53917 2.1932 0.53917 2.1932-1.7658 1.598-1.7658 1.598-2.8757-2.3911-2.8757-2.3911-5.2097 0.25089-5.2097 0.25089-1.1628-1.401-1.1628-1.401-2.6276 0.0037-2.6276 0.0037 3.25 1.9816 3.25 1.9816v8.9114l1 0.61803 1 0.61803v3.7392l1.6438 1.6438 1.6438 1.6438 2.3443-0.58839 2.3443-0.58839 3.5896 3.9732c1.9742 2.1853 4.9692 5.8777 6.6554 8.2055l3.0659 4.2323 1.0112 8.5606c0.55617 4.7083 1.0303 10.923 1.0536 13.811 0.0233 2.8875 0.29121 5.2511 0.5953 5.2524 0.3041 0.001 2.1279 1.3502 4.0529 2.9976s3.8375 2.9964 4.25 2.9977l0.75 0.002v-3.9274z";
    String svgSC = "m338 456.57v-2.3537l0.91299-0.56425 0.91299-0.56426 0.66226-3.9199 0.66226-3.9199-1.2367-2.3108-1.2367-2.3108-0.29204-5.2641-0.29204-5.2641h0.95349c0.52442 0 0.95349-0.45 0.95349-1v-1h-6.555l-2.2225 1.5567-2.2225 1.5567-2.2225-1.5567-2.2225-1.5567h-8.437l-0.5382 0.87084c-0.29602 0.47896-1.8976 1.1427-3.559 1.475l-3 0.59v5.05l-3.25-0.008-3.25-0.008-6.2151-1.8901c-3.4183-1.0396-8.9308-2.2053-12.25-2.5906l-6.03-0.7v9.6964l4.25 0.0698c2.3375 0.0384 6.5997 0.58681 9.4715 1.2187l5.2215 1.1489 4.7785 2.4457 4.7785 2.4457 3.2653 3.3356c1.7959 1.8346 3.8579 4.1819 4.5821 5.2162l1.3169 1.8807 5.2512 0.50457 5.2512 0.50457 0.49738 1.2962 0.49738 1.2962-2.3291 3.1503-2.3291 3.1503 1.8323 1.3398 1.8323 1.3398 5.9162-6.0088 5.9162-6.0088v-2.3537z";
    String svgSP = "m358.5 406.93 8-5.4266 4.5334-1.7032 4.5334-1.7032h5.2192l0.57561-1.5 0.5756-1.5h1.4843c0.81638 0 2.5604-0.49029 3.8756-1.0895l2.3913-1.0895-0.45355-2.3726-0.45354-2.3726 1.43-1.4301c0.78653-0.78653 2.2982-1.6051 3.3593-1.819l1.9293-0.38894-3.3482-1.6913-3.3482-1.6913-3.508 1.4657-3.508 1.4657-0.78046-0.48235-0.78046-0.48235-1.2358 1.489-1.2358 1.489h-6.4452l-1.4481-1.75c-0.79647-0.9625-2.0557-2.9659-2.7983-4.452l-1.3502-2.702 0.64066-5.451 0.64066-5.451-2.7916-0.97315-2.7916-0.97315-1.1591-3.7767-1.1591-3.7767 0.90653-1.6939 0.90653-1.6939-0.86852-0.90319c-0.47768-0.49676-1.0191-2.0282-1.2032-3.4032l-0.33468-2.5-2.25-0.11346-2.25-0.11347v1.7269h-13v1.8h-7.012l-0.57531-2.2922-0.57531-2.2922-6.4081-0.68625-6.4081-0.68625-0.56373-0.91214-0.56372-0.91213-3.0663 2.2406c-1.6865 1.2323-4.5089 3.5906-6.272 5.2406l-3.2056 3-2.1748 4.2808c-1.1962 2.3544-2.1748 4.9419-2.1748 5.75v1.4692h-0.80073c-0.44041 0-1.7926 2.0414-3.0048 4.5365l-2.204 4.5365-3.4952 2.0622c-1.93 1.13-3.5 2.26-3.5 2.52 0 0.25222 2.3625 0.41346 5.25 0.35831 6.1479-0.11741 14.406 1.1544 17.25 2.6567l2 1.0565 6 0.58566 6 0.58565 2.25 2.6063 2.25 2.6063v8.6094l2.4691 3.6384 2.4691 3.6384-0.57605 1.5012-0.57606 1.5012 2.357 0.0136c1.2964 0.008 3.3695 0.285 4.607 0.61664l2.25 0.60297v3.5228l2.25 1.519 2.25 1.519 1.5-1.2673c0.825-0.69699 5.1-3.7092 9.5-6.6938z";
    String svgSE = "m498.4 231.1c2.1742-0.80312 1.7523-2.8079 3.5224-4.0655l2.3953-1.5188c0.53642-0.34014 0.47571-1.1562 2.5006-2.0242l3.6816-1.5783-1.902-1.1566c-1.0461-0.63612-2.8461-2.2138-4-3.506l-2.098-2.3494-4.8494-2.4678c-5.2952-2.6947-6.3859-2.5759-4.7316 0.51525l1.081 2.0199v8.8866l-1.4873 1.2343-1.4873 1.2343-1.5127-0.58049-1.5127-0.58049v0.84617c0 0.46539 0.675 1.4064 1.5 2.0911l1.5 1.2449v3.0346l1.75 1.3264 1.75 1.3264 1-0.32377 1-0.32378c0.995-0.71754 1.2634-2.3012 1.9-3.2847z";
    String svgTO = "m360.98 258.86 1.8443 1.1518 3.1013-0.88945 3.1014-0.88946 3.381 0.54866 3.381 0.54866 0.71218-2.2439c0.39171-1.2341 0.80168-3.5366 0.91107-5.1165l0.19887-2.8726-0.7377-1.1936-0.73771-1.1936 0.96541-1.8039 0.96541-1.8039h-1.8372l-0.46577-2.4365-0.46577-2.4365 1.5133-1.5133 1.5133-1.5133-1.2865-1.5502-1.2865-1.5502h2.619l-2.81-2.933-2.81-2.933 2.3586-3.817c1.2972-2.0993 3.4816-4.7832 4.8542-5.9642l2.4956-2.1473-3.7571-2.2167-3.7571-2.2167-0.97416-1.8202c-0.53579-1.0011-0.98627-2.8623-1.0011-4.136l-0.0269-2.3157-2.8027-3.3791-2.8027-3.3791 1.5796-4.4122 1.5796-4.4122 2.3-0.57964 2.3-0.57963-0.30835-1.629-0.30834-1.629-3.8257-0.31537-3.8257-0.31538-1.666-2.9283-1.666-2.9283-1.25-0.006-1.25-0.007v-1.0714c0-0.58928-0.66908-1.7405-1.4868-2.5583l-1.4868-1.4868 2.0148-2.7252 2.0148-2.7252 0.15813-7.7527 0.15813-7.7527-1.9366-1.9366-1.9366-1.9366-4.7495-1.4294-4.7495-1.4294v0.7855c0 0.43202 0.89773 1.0203 1.995 1.3072l1.995 0.52169 0.64056 1.6693 0.64057 1.6693-1.287 3.8997-1.287 3.8997-1.8485 1.9841c-1 1.09-1.83 2.61-1.83 3.38v1.3901l-4 1.5712-4 1.5712v2.6462c0 1.4554-0.45122 3.4893-1.0027 4.5198l-1.0027 1.8736 1.0027 0.61971 1.0027 0.6197v2.4731c0 1.3602-0.68321 4.1083-1.5182 6.1068l-1.5183 3.6337-4.2688 4.5842-4.2688 4.5842-1.3438 3.5c-0.73908 1.925-2.1589 5.3-3.1552 7.5-0.99628 2.2-2.5472 7.15-3.4464 11l-1.635 7 0.66384 8.8969c0.3651 4.8933 0.98694 9.7704 1.3819 10.838l0.71803 1.941 1.3178-1.5879c0.72482-0.87335 1.6732-1.5879 2.1075-1.5879h0.78965l0.6625 3.9213 0.66249 3.9213 4.0504 1.6206 4.0504 1.6206 1.6709-1.5122 1.6709-1.5122 3.6769 0.59667 3.6769 0.59668 0.59528 1.8756 0.59528 1.8756 2.4227-0.60805 2.4227-0.60805 0.68638 1.8561c0.37751 1.0208 1.1692 2.191 1.7593 2.6003l1.0729 0.74425 1.8198-2.1912 1.8198-2.1912 1.8443 1.1518z";
    //BRASIL FIM
    Label labelBrasil = new Label("");
    //int newX = 0, newY = 0;

    @Override
    public void start(Stage plano) {

        //Lista vai receber os links dos videos da plataforma Youtube, um para cada indice
        lista = new String[7];
        lista[0] = "<iframe width=\"560\""
                + "height=\"315\""
                + "src=\"https://www.youtube.com/embed/HqOSLZl9GUo\""//aventura
                + "frameborder=\"0\" allow=\"accelerometer;"
                + "autoplay; encrypted-media; gyroscope;"
                + "picture-in-picture\" allowfullscreen></iframe>"
                + "";
        lista[1] = "<iframe width=\"560\""
                + "height=\"315\""
                + "src=\"https://www.youtube.com/embed/WEctnzPOr_I\""//comedia
                + "frameborder=\"0\" allow=\"accelerometer;"
                + "autoplay; encrypted-media; gyroscope;"
                + "picture-in-picture\" allowfullscreen></iframe>"
                + "";
        lista[2] = "<iframe width=\"560\""
                + "height=\"315\""
                + "src=\"https://www.youtube.com/embed/5-_wIaTtsLM\""//suspence
                + "frameborder=\"0\" allow=\"accelerometer;"
                + "autoplay; encrypted-media; gyroscope;"
                + "picture-in-picture\" allowfullscreen></iframe>"
                + "";
        lista[3] = "<iframe width=\"560\""
                + "height=\"315\""
                + "src=\"https://www.youtube.com/embed/ahxc2fv1Zcc\"" // romance
                + "frameborder=\"0\" allow=\"accelerometer;"
                + "autoplay; encrypted-media; gyroscope;"
                + "picture-in-picture\" allowfullscreen></iframe>"
                + "";
        lista[4] = "<iframe width=\"560\""
                + "height=\"315\""
                + "src=\"https://www.youtube.com/embed/gTEDClDGr5A\"" //terror
                + "frameborder=\"0\" allow=\"accelerometer;"
                + "autoplay; encrypted-media; gyroscope;"
                + "picture-in-picture\" allowfullscreen></iframe>"
                + "";
        lista[5] = "<iframe width=\"560\""
                + "height=\"315\""
                + "src=\"https://www.youtube.com/embed/6ZfuNTqbHE8 \"" //ficção
                + "frameborder=\"0\" allow=\"accelerometer;"
                + "autoplay; encrypted-media; gyroscope;"
                + "picture-in-picture\" allowfullscreen></iframe>"
                + "";
        lista[6] = "<iframe width=\"560\""
                + "height=\"315\""
                + "src=\"https://www.youtube.com/embed/25Dcrc9K24A \"" //documentario
                + "frameborder=\"0\" allow=\"accelerometer;"
                + "autoplay; encrypted-media; gyroscope;"
                + "picture-in-picture\" allowfullscreen></iframe>"
                + "";

        //As opçoes disponiveis no comboBox de seleção de genero
        opcoesUm = FXCollections.observableArrayList(
                "Aventura", "Comedia", "Suspence", "Romance", "Terror", "Ficção", "Documentário");
        comboUm = new ComboBox(opcoesUm);

        //Recupera a imagem matricial de logotipo da pasta de recursos do projeto, com largura em 100 e aspecto de proporçoes preservado
        URL url = getClass().getResource("/PucFlixImagem.png");
        imagem = new Image(url.toString());
        imagemLOGO2 = new ImageView(imagem);
        imagemLOGO2.setFitWidth(100);
        imagemLOGO2.setPreserveRatio(true);

        //Recupera o video intrudutorio da pasta de recursos do projeto, a exibição do video sera feita pelo mediaView
        URL urlVIDEO = getClass().getResource("/Pucflix.mp4");
        URLVIDEO = urlVIDEO.toString();
        Media video = new Media(URLVIDEO);
        final MediaPlayer mediaPlayer = new MediaPlayer(video);
        MediaView mediaView = new MediaView(mediaPlayer);

        //Recupera o audio contendo a sinopse do filme de aventura da pasta de recursos do projeto
        URL urlAUDIO = getClass().getResource("/audioAventura1.mp3");
        URLAUDIO = urlAUDIO.toString();
        AudioClip audioAventura1 = new AudioClip(URLAUDIO);

        //Recupera o audio contendo a sinopse do filme de comedia da pasta de recursos do projeto
        urlAUDIO = getClass().getResource("/audioComedia1.mp3");
        URLAUDIO = urlAUDIO.toString();
        AudioClip audioComedia1 = new AudioClip(URLAUDIO);

        //Recupera o audio contendo a sinopse do filme de suspence da pasta de recursos do projeto
        urlAUDIO = getClass().getResource("/audioSuspence1.mp3");
        URLAUDIO = urlAUDIO.toString();
        AudioClip audioSuspence1 = new AudioClip(URLAUDIO);

        //Recupera o audio contendo a sinopse do filme de romance da pasta de recursos do projeto
        urlAUDIO = getClass().getResource("/audioRomance1.mp3");
        URLAUDIO = urlAUDIO.toString();
        AudioClip audioRomance1 = new AudioClip(URLAUDIO);

        //Recupera o audio contendo a sinopse do filme de terror da pasta de recursos do projeto
        urlAUDIO = getClass().getResource("/audioTerror1.mp3");
        URLAUDIO = urlAUDIO.toString();
        AudioClip audioTerror1 = new AudioClip(URLAUDIO);

        //Recupera o audio contendo a sinopse do filme de ficcao da pasta de recursos do projeto
        urlAUDIO = getClass().getResource("/audioFiccao1.mp3");
        URLAUDIO = urlAUDIO.toString();
        AudioClip audioFiccao1 = new AudioClip(URLAUDIO);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath bluray;
        bluray = new SVGPath();
        defineAtributosSVGPATH(bluray, svgPathBluray, Color.CORNFLOWERBLUE, (float) 0.5);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath chapel;
        chapel = new SVGPath();
        defineAtributosSVGPATH(chapel, svgPathChapel, Color.BURLYWOOD, (float) 0.5);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath bolaFutebol;
        bolaFutebol = new SVGPath();
        defineAtributosSVGPATH(bolaFutebol, svgPathBolaFutebol, Color.DARKGRAY, (float) 0.7);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath tesoura;
        tesoura = new SVGPath();
        defineAtributosSVGPATH(tesoura, svgPathTesoura, Color.LAWNGREEN, (float) 0.4);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath pessoas;
        pessoas = new SVGPath();
        defineAtributosSVGPATH(pessoas, svgPathPessoas, Color.PALEVIOLETRED, (float) 0.3);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath tenda;
        tenda = new SVGPath();
        defineAtributosSVGPATH(tenda, svgPathTenda, Color.LIGHTYELLOW, (float) 1.0);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath coracao;
        coracao = new SVGPath();
        defineAtributosSVGPATH(coracao, svgPathCoracao, Color.PALEGREEN, (float) 0.3);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath casal;
        casal = new SVGPath();
        defineAtributosSVGPATH(casal, svgPathCasal, Color.HOTPINK, (float) 0.08);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath crianca;
        crianca = new SVGPath();
        defineAtributosSVGPATH(crianca, svgPathCrianca, Color.DEEPSKYBLUE, (float) 0.4);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath fantasma;
        fantasma = new SVGPath();
        defineAtributosSVGPATH(fantasma, svgPathFantasma, Color.VIOLET, (float) 0.5);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath manopla;
        manopla = new SVGPath();
        defineAtributosSVGPATH(manopla, svgPathManopla, Color.PALEGOLDENROD, (float) 0.05);

        //A imagem vetorial que sera usada como um botao tem seus valores ajustados
        SVGPath estrela;
        estrela = new SVGPath();
        defineAtributosSVGPATH(estrela, svgPathEstrela, Color.WHITESMOKE, (float) 0.5);

        //Posicionar os estados dentro do Brasil #########################
        SVGPath Brasil;
        Brasil = new SVGPath();
        //Brasil.setContent(svgBRASIL);
        //Brasil.setFill(Color.BLACK); 
        defineAtributosSVGPATH(Brasil, svgBRASIL, Color.BLACK, (float) 0.30);//0.30 da escala original//ORIGINAL 1
        defineCordenadasXYdeSVG(450, 0, Brasil);//X450, Y200 deixa bem visivel o mini brasil//X450,Y0 parece bom//original 0,0

        SVGPath Acre;
        Acre = new SVGPath();
        defineAtributosSVGPATH(Acre, svgAC, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(601, 44, Acre);

        SVGPath Alagoas;
        Alagoas = new SVGPath();
        defineAtributosSVGPATH(Alagoas, svgAL, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(283, 38, Alagoas);

        SVGPath Amapa;
        Amapa = new SVGPath();
        defineAtributosSVGPATH(Amapa, svgAP, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(430, 152, Amapa);

        SVGPath Amazonas;
        Amazonas = new SVGPath();
        defineAtributosSVGPATH(Amazonas, svgAM, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(552, 99, Amazonas);

        SVGPath Bahia;
        Bahia = new SVGPath();
        defineAtributosSVGPATH(Bahia, svgBA, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(333, 5, Bahia);

        SVGPath Ceara;
        Ceara = new SVGPath();
        defineAtributosSVGPATH(Ceara, svgCE, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(305, 83, Ceara);

        SVGPath DistritoFederal;
        DistritoFederal = new SVGPath();
        defineAtributosSVGPATH(DistritoFederal, svgDF, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(390, -15, DistritoFederal);

        SVGPath EspiritoSanto;
        EspiritoSanto = new SVGPath();
        defineAtributosSVGPATH(EspiritoSanto, svgES, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(327, -55, EspiritoSanto);

        SVGPath Goias;
        Goias = new SVGPath();
        defineAtributosSVGPATH(Goias, svgGO, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(405, -17, Goias);

        SVGPath Maranhao;
        Maranhao = new SVGPath();
        defineAtributosSVGPATH(Maranhao, svgMA, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(361, 83, Maranhao);

        SVGPath MatoGrosso;
        MatoGrosso = new SVGPath();
        defineAtributosSVGPATH(MatoGrosso, svgMT, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(465, 14, MatoGrosso);

        SVGPath MatoGrossoDoSul;
        MatoGrossoDoSul = new SVGPath();
        defineAtributosSVGPATH(MatoGrossoDoSul, svgMS, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(452, -61, MatoGrossoDoSul);

        SVGPath MinasGerais;
        MinasGerais = new SVGPath();
        defineAtributosSVGPATH(MinasGerais, svgMG, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(368, -43, MinasGerais);

        SVGPath Para;
        Para = new SVGPath();
        defineAtributosSVGPATH(Para, svgPA, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(432, 102, Para);

        SVGPath Paraiba;
        Paraiba = new SVGPath();
        defineAtributosSVGPATH(Paraiba, svgPB, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(282, 64, Paraiba);

        SVGPath Parana;
        Parana = new SVGPath();
        defineAtributosSVGPATH(Parana, svgPR, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(423, -98, Parana);

        SVGPath Pernambuco;
        Pernambuco = new SVGPath();
        defineAtributosSVGPATH(Pernambuco, svgPE, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(295, 52, Pernambuco);

        SVGPath Piaui;
        Piaui = new SVGPath();
        defineAtributosSVGPATH(Piaui, svgPI, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(344, 69, Piaui);

        SVGPath RioDeJaneiro;
        RioDeJaneiro = new SVGPath();
        defineAtributosSVGPATH(RioDeJaneiro, svgRJ, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(348, -76, RioDeJaneiro);

        SVGPath RioGrandeDoNorte;
        RioGrandeDoNorte = new SVGPath();
        defineAtributosSVGPATH(RioGrandeDoNorte, svgRN, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(282, 76, RioGrandeDoNorte);

        SVGPath RioGrandeDoSul;
        RioGrandeDoSul = new SVGPath();
        defineAtributosSVGPATH(RioGrandeDoSul, svgRS, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(443, -155, RioGrandeDoSul);

        SVGPath Rondonia;
        Rondonia = new SVGPath();
        defineAtributosSVGPATH(Rondonia, svgRO, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(536, 33, Rondonia);

        SVGPath Roraima;
        Roraima = new SVGPath();
        defineAtributosSVGPATH(Roraima, svgRR, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(524, 155, Roraima);

        SVGPath SantaCatarina;
        SantaCatarina = new SVGPath();
        defineAtributosSVGPATH(SantaCatarina, svgSC, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(421, -129, SantaCatarina);

        SVGPath SaoPaulo;
        SaoPaulo = new SVGPath();
        defineAtributosSVGPATH(SaoPaulo, svgSP, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(398, -79, SaoPaulo);
        //newX = 398;
        //newY = -79;

        SVGPath Sergipe;
        Sergipe = new SVGPath();
        defineAtributosSVGPATH(Sergipe, svgSE, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(289, 30, Sergipe);

        SVGPath Tocantins;
        Tocantins = new SVGPath();
        defineAtributosSVGPATH(Tocantins, svgTO, Color.YELLOW, (float) 0.30);
        defineCordenadasXYdeSVG(392, 46, Tocantins);

        //int newX=0,newY=0;
        //Todos os estados são Botões: 
        Acre.setPickOnBounds(false);
        Acre.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Acre!");
            funcaoClickEstados(labelBrasil, "Clicked Acre!\n"
                    + "Área Territorial 164.123,964 km²[2019]\n"
                    + "População estimada 894.470 pessoas [2020]\n"
                    + "Densidade demográfica 4,47 hab/km² [2010]\n"
                    + "Matrículas no ensino fundamental 157.646 matrículas[2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,663 [2010]\n"
                    + "Receitas realizadas 6.632.883,10836 R$ (×1000) [2017]\n"
                    + "Despesas empenhadas 6.084.416,8063 R$ (×1000) [2017]\n"
                    + "Rendimento mensal domiciliar per capita 890 R$ [2019]\n"
                    + "Total de veículos 277.831 veículos [2018]\n");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Acre.setFill(Color.RED);

        });

        Alagoas.setPickOnBounds(false);
        Alagoas.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Alagoas!");
            funcaoClickEstados(labelBrasil, "Clicked Alagoas!\n"
                    + "Área Territorial 27.843,295 km²   [2019]\n"
                    + "População estimada 3.351.543 pessoas   [2020]\n"
                    + "Densidade demográfica 112,33 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 490.587 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,631   [2010]\n"
                    + "Receitas realizadas 11.950.438,46015 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 10.460.634,91711 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 731 R$   [2019]\n"
                    + "Total de veículos 834.827 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Alagoas.setFill(Color.RED);

        });

        Amapa.setPickOnBounds(false);
        Amapa.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Amapa!");
            funcaoClickEstados(labelBrasil, "Clicked Amapa!\n"
                    + "Área Territorial 142.470,762 km²   [2019]\n"
                    + "População estimada 861.773 pessoas   [2020]\n"
                    + "Densidade demográfica 4,69 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 136.185 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,708   [2010]\n"
                    + "Receitas realizadas 5.396.417,14471 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 4.224.464,08829 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 880 R$   [2019]\n"
                    + "Total de veículos 195.039 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Amapa.setFill(Color.RED);

        });

        Amazonas.setPickOnBounds(false);
        Amazonas.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Amazonas!");
            funcaoClickEstados(labelBrasil, "Clicked Amazonas!\n"
                    + "Área Territorial 1.559.167,889 km²   [2019]\n"
                    + "População estimada 4.207.714 pessoas   [2020]\n"
                    + "Densidade demográfica 2,23 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 705.007 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,674   [2010]\n"
                    + "Receitas realizadas 17.328.459,43402 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 15.324.896,55705 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 842 R$   [2019]\n"
                    + "Total de veículos 883.083 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Amazonas.setFill(Color.RED);
            //newX = newX + 1;

        });

        Bahia.setPickOnBounds(false);
        Bahia.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Bahia!");
            funcaoClickEstados(labelBrasil, "Clicked Bahia!\n"
                    + "Área Territorial 564.760,427 km²   [2019]\n"
                    + "População estimada 14.930.634 pessoas   [2020]\n"
                    + "Densidade demográfica 24,82 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 2.034.711 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,660   [2010]\n"
                    + "Receitas realizadas 50.191.003,24052 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 45.570.160,0038 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 913 R$   [2019]\n"
                    + "Total de veículos 4.139.107 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Bahia.setFill(Color.RED);

        });

        Ceara.setPickOnBounds(false);
        Ceara.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Ceara!");
            funcaoClickEstados(labelBrasil, "Clicked Ceara!\n"
                    + "Área Territorial 148.894,441 km²   [2019]\n"
                    + "População estimada 9.187.103 pessoas   [2020]\n"
                    + "Densidade demográfica 56,76 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 1.198.116 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,682   [2010]\n"
                    + "Receitas realizadas 28.420.222,47191 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 24.608.352,18276 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 942 R$   [2019]\n"
                    + "Total de veículos 3.148.369 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Ceara.setFill(Color.RED);

        });

        DistritoFederal.setPickOnBounds(false);
        DistritoFederal.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked DistritoFederal!");
            funcaoClickEstados(labelBrasil, "Clicked DistritoFederal!\n"
                    + "Área Territorial 5.760,783 km²   [2019]\n"
                    + "População estimada 3.055.149 pessoas   [2020]\n"
                    + "Densidade demográfica 444,07 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 377.622 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,824   [2010]\n"
                    + "Receitas realizadas 23.812.211,27074 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 21.990.464,6849 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 2.686 R$   [2019]\n"
                    + "Total de veículos 1.812.473 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            DistritoFederal.setFill(Color.RED);

        });

        EspiritoSanto.setPickOnBounds(false);
        EspiritoSanto.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked EspiritoSanto!");
            funcaoClickEstados(labelBrasil, "Clicked EspiritoSanto!\n"
                    + "Área Territorial 46.074,447 km²   [2019]\n"
                    + "População estimada 4.064.052 pessoas   [2020]\n"
                    + "Densidade demográfica 76,25 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 502.059 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,740   [2010]\n"
                    + "Receitas realizadas 19.685.616,74376 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 14.392.338,00188 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.477 R$   [2019]\n"
                    + "Total de veículos 1.936.862 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            EspiritoSanto.setFill(Color.RED);

        });

        Goias.setPickOnBounds(false);
        Goias.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Goias!");
            funcaoClickEstados(labelBrasil, "Clicked Goias!\n"
                    + "Área Territorial 340.203,329 km²   [2019]\n"
                    + "População estimada 7.113.540 pessoas   [2020]\n"
                    + "Densidade demográfica 17,65 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 877.593 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,735   [2010]\n"
                    + "Receitas realizadas 37.885.335,16848 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 24.248.380,34233 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.306 R$   [2019]\n"
                    + "Total de veículos 3.909.429 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Goias.setFill(Color.RED);

        });

        Maranhao.setPickOnBounds(false);
        Maranhao.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Maranhao!");
            funcaoClickEstados(labelBrasil, "Clicked Maranhao!\n"
                    + "Área Territorial 329.642,182 km²   [2019]\n"
                    + "População estimada 7.114.598 pessoas   [2020]\n"
                    + "Densidade demográfica 19,81 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 1.178.949 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,639   [2010]\n"
                    + "Receitas realizadas 18.503.261,35491 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 17.627.170,75574 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 636 R$   [2019]\n"
                    + "Total de veículos 1.696.683 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Maranhao.setFill(Color.RED);

        });

        MatoGrosso.setPickOnBounds(false);
        MatoGrosso.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked MatoGrosso!");
            funcaoClickEstados(labelBrasil, "Clicked MatoGrosso!\n"
                    + "Área Territorial 903.207,019 km²   [2019]\n"
                    + "População estimada 3.526.220 pessoas   [2020]\n"
                    + "Densidade demográfica 3,36 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 471.613 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,725   [2010]\n"
                    + "Receitas realizadas 23.958.528,83588 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 18.187.363,27009 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.403 R$   [2019]\n"
                    + "Total de veículos 2.080.848 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            MatoGrosso.setFill(Color.RED);

        });

        MatoGrossoDoSul.setPickOnBounds(false);
        MatoGrossoDoSul.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked MatoGrossoDoSul!");
            funcaoClickEstados(labelBrasil, "Clicked MatoGrossoDoSul!\n"
                    + "Área Territorial 357.145,534 km²   [2019]\n"
                    + "População estimada 2.809.394 pessoas   [2020]\n"
                    + "Densidade demográfica 6,86 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 404.114 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,729   [2010]\n"
                    + "Receitas realizadas 16.396.655,77012 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 14.506.915,37404 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.514 R$   [2019]\n"
                    + "Total de veículos 1.583.142 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            MatoGrossoDoSul.setFill(Color.RED);

        });

        MinasGerais.setPickOnBounds(false);
        MinasGerais.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked MinasGerais!");
            funcaoClickEstados(labelBrasil, "Clicked MinasGerais!\n"
                    + "Área Territorial 586.521,123 km²   [2019]\n"
                    + "População estimada 21.292.666 pessoas   [2020]\n"
                    + "Densidade demográfica 33,41 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 2.511.483 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,731   [2010]\n"
                    + "Receitas realizadas 97.199.823,15616 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 98.391.669,16323 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.358 R$   [2019]\n"
                    + "Total de veículos 11.191.341 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            MinasGerais.setFill(Color.RED);

        });

        Para.setPickOnBounds(false);
        Para.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Para!");
            funcaoClickEstados(labelBrasil, "Clicked Para!\n"
                    + "Área Territorial 1.245.870,798 km²   [2019]\n"
                    + "População estimada 8.690.745 pessoas   [2020]\n"
                    + "Densidade demográfica 6,07 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 1.439.788 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,646   [2010]\n"
                    + "Receitas realizadas 25.849.446,10454 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 22.533.470,04547 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 807 R$   [2019]\n"
                    + "Total de veículos 2.013.952 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Para.setFill(Color.RED);
            //newY = newY + 1;

        });

        Paraiba.setPickOnBounds(false);
        Paraiba.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Paraiba!");
            funcaoClickEstados(labelBrasil, "Clicked Paraiba!\n"
                    + "Área Territorial 56.467,242 km²   [2019]\n"
                    + "População estimada 4.039.277 pessoas   [2020]\n"
                    + "Densidade demográfica 66,70 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 556.248 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,658   [2010]\n"
                    + "Receitas realizadas 13.097.005,31928 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 10.074.700,04266 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 929 R$   [2019]\n"
                    + "Total de veículos 1.293.668 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Paraiba.setFill(Color.RED);

        });

        Parana.setPickOnBounds(false);
        Parana.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Parana!");
            funcaoClickEstados(labelBrasil, "Clicked Parana!\n"
                    + "Área Territorial 199.298,979 km²   [2019]\n"
                    + "População estimada 11.516.840 pessoas   [2020]\n"
                    + "Densidade demográfica 52,40 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 1.427.218 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,749   [2010]\n"
                    + "Receitas realizadas 60.163.576,12246 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 55.534.402,97483 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.621 R$   [2019]\n"
                    + "Total de veículos 7.571.122 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Parana.setFill(Color.RED);

        });

        Pernambuco.setPickOnBounds(false);
        Pernambuco.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Pernambuco!");
            funcaoClickEstados(labelBrasil, "Clicked Pernambuco!\n"
                    + "Área Territorial 98.067,881 km²   [2019]\n"
                    + "População estimada 9.616.621 pessoas   [2020]\n"
                    + "Densidade demográfica 89,63 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 1.301.930 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,673   [2010]\n"
                    + "Receitas realizadas 35.746.028,97102 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 33.320.486,44445 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 970 R$   [2019]\n"
                    + "Total de veículos 3.010.638 veículos   [2018]");
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Pernambuco.setFill(Color.RED);

        });

        Piaui.setPickOnBounds(false);
        Piaui.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Piaui!");
            funcaoClickEstados(labelBrasil, "Clicked Piaui!\n"
                    + "Área Territorial 251.756,515 km²   [2019]\n"
                    + "População estimada 3.281.480 pessoas   [2020]\n"
                    + "Densidade demográfica 12,40 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 480.126 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,646   [2010]\n"
                    + "Receitas realizadas 12.124.215,61511 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 9.676.736,31835 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 827 R$   [2019]\n"
                    + "Total de veículos 1.196.192 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Piaui.setFill(Color.RED);

        });

        RioDeJaneiro.setPickOnBounds(false);
        RioDeJaneiro.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked RioDeJaneiro!");
            funcaoClickEstados(labelBrasil, "Clicked RioDeJaneiro!\n"
                    + "Área Territorial 43.750,427 km²   [2019]\n"
                    + "População estimada 17.366.189 pessoas   [2020]\n"
                    + "Densidade demográfica 365,23 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 2.003.315 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,761   [2010]\n"
                    + "Receitas realizadas 78.488.140,78862 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 67.965.548,69757 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.882 R$   [2019]\n"
                    + "Total de veículos 6.725.822 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            RioDeJaneiro.setFill(Color.RED);

        });

        RioGrandeDoNorte.setPickOnBounds(false);
        RioGrandeDoNorte.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked RioGrandeDoNorte!");
            funcaoClickEstados(labelBrasil, "Clicked RioGrandeDoNorte!\n"
                    + "Área Territorial 52.809,602 km²   [2019]\n"
                    + "População estimada 3.534.165 pessoas   [2020]\n"
                    + "Densidade demográfica 59,99 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 467.629 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,684   [2010]\n"
                    + "Receitas realizadas 13.527.552,73159 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 11.330.957,55333 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.057 R$   [2019]\n"
                    + "Total de veículos 1.290.903 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            RioGrandeDoNorte.setFill(Color.RED);

        });

        RioGrandeDoSul.setPickOnBounds(false);
        RioGrandeDoSul.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked RioGrandeDoSul!");
            funcaoClickEstados(labelBrasil, "Clicked RioGrandeDoSul!\n"
                    + "Área Territorial 281.707,156 km²   [2019]\n"
                    + "População estimada 11.422.973 pessoas   [2020]\n"
                    + "Densidade demográfica 39,79 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 1.298.736 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,746   [2010]\n"
                    + "Receitas realizadas 66.397.468,17915 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 62.476.279,34364 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.843 R$   [2019]\n"
                    + "Total de veículos 7.077.972 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            RioGrandeDoSul.setFill(Color.RED);

        });

        Rondonia.setPickOnBounds(false);
        Rondonia.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Rondonia!");
            funcaoClickEstados(labelBrasil, "Clicked Rondonia!\n"
                    + "Área Territorial 237.765,240 km²   [2019]\n"
                    + "População estimada 1.796.460 pessoas   [2020]\n"
                    + "Densidade demográfica 6,58 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 269.626 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,690   [2010]\n"
                    + "Receitas realizadas 9.122.310,72305 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 7.085.530,0168 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.136 R$   [2019]\n"
                    + "Total de veículos 985.047 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Rondonia.setFill(Color.RED);

        });

        Roraima.setPickOnBounds(false);
        Roraima.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Roraima!");
            funcaoClickEstados(labelBrasil, "Clicked Roraima!\n"
                    + "Área Territorial 223.644,527 km²   [2019]\n"
                    + "População estimada 631.181 pessoas   [2020]\n"
                    + "Densidade demográfica 2,01 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 96.582 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,707   [2010]\n"
                    + "Receitas realizadas 4.419.450,41557 R$ (×1000)   [2016]\n"
                    + "Despesas empenhadas 3.384.683,73914 R$ (×1000)   [2016]\n"
                    + "Rendimento mensal domiciliar per capita 1.044 R$   [2019]\n"
                    + "Total de veículos 219.290 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Roraima.setFill(Color.RED);

        });

        SantaCatarina.setPickOnBounds(false);
        SantaCatarina.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked SantaCatarina!");
            funcaoClickEstados(labelBrasil, "Clicked SantaCatarina!\n"
                    + "Área Territorial 95.730,684 km²   [2019]\n"
                    + "População estimada 7.252.502 pessoas   [2020]\n"
                    + "Densidade demográfica 65,29 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 851.993 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,774   [2010]\n"
                    + "Receitas realizadas 34.696.772,82078 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 25.595.103,37918 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.769 R$   [2019]\n"
                    + "Total de veículos 5.152.615 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            SantaCatarina.setFill(Color.RED);

        });

        SaoPaulo.setPickOnBounds(false);
        SaoPaulo.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked SaoPaulo!");
            funcaoClickEstados(labelBrasil, "Clicked SaoPaulo!\n"
                    + "Área Territorial 248.219,481 km²   [2019]\n"
                    + "População estimada 46.289.333 pessoas   [2020]\n"
                    + "Densidade demográfica 166,25 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 5.367.614 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,783   [2010]\n"
                    + "Receitas realizadas 232.822.496,56706 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 231.982.243,69176 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.946 R$   [2019]\n"
                    + "Total de veículos 29.057.749 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            SaoPaulo.setFill(Color.RED);
            /*
            System.out.println(" X= ");
            System.out.println(newX);
            System.out.println(" Y= ");
            System.out.println(newY);
            defineCordenadasXYdeSVG(newX, newY, SaoPaulo);
             */

        });

        Sergipe.setPickOnBounds(false);
        Sergipe.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Sergipe!");
            funcaoClickEstados(labelBrasil, "Clicked Sergipe!\n"
                    + "Área Territorial 21.925,424 km²   [2019]\n"
                    + "População estimada 2.318.822 pessoas   [2020]\n"
                    + "Densidade demográfica 94,35 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 331.297 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,665   [2010]\n"
                    + "Receitas realizadas 10.145.046,95355 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 8.494.927,19996 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 980 R$   [2019]\n"
                    + "Total de veículos 772.380 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Sergipe.setFill(Color.RED);

        });

        Tocantins.setPickOnBounds(false);
        Tocantins.setOnMouseClicked((MouseEvent e) -> {
            System.out.println("Clicked Tocantins!");
            funcaoClickEstados(labelBrasil, "Clicked Tocantins!\n"
                    + "Área Territorial 277.466,763 km²   [2019]\n"
                    + "População estimada 1.590.248 pessoas   [2020]\n"
                    + "Densidade demográfica 4,98 hab/km²   [2010]\n"
                    + "Matrículas no ensino fundamental 246.183 matrículas   [2018]\n"
                    + "IDH Índice de desenvolvimento humano 0,699   [2010]\n"
                    + "Receitas realizadas 10.305.099,01288 R$ (×1000)   [2017]\n"
                    + "Despesas empenhadas 8.929.456,43836 R$ (×1000)   [2017]\n"
                    + "Rendimento mensal domiciliar per capita 1.056 R$   [2019]\n"
                    + "Total de veículos 690.169 veículos   [2018]");
            
            amarelaBrasil(Acre, Alagoas,  Amapa,  Amazonas,  Bahia,  Ceara,
             EspiritoSanto,  Goias,  Maranhao,  MatoGrosso,  MatoGrossoDoSul,  MinasGerais,  Para,
             Paraiba,  Parana,  Pernambuco,  Piaui,  RioDeJaneiro,  RioGrandeDoNorte,  RioGrandeDoSul,
             Rondonia,  Roraima,  SantaCatarina,  SaoPaulo,  Sergipe,  Tocantins,  DistritoFederal);
            Tocantins.setFill(Color.RED);

        });
        //Todos os estados são botoes FIM.

        //Um botao responsavel pela reproducao do audio das sinopses dos filmes
        botaoTocaAudio = new Button(">");

        //O texto que sera exibido ao clicar no sgv da tela Aventura1, assim como suas configuraçoes
        labelAventura1 = new Label("For the first time ever, own all 4 Indiana Jones movies individually on Blu-ray™ & Digital HD! \n"
                + "Also available as The Complete Adventures on Blu-ray™ & Digital HD.");
        Font font = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font, Color.BROWN, labelAventura1);

        //O texto que sera exibido ao clicar no sgv da tela Aventura2, assim como suas configuraçoes
        labelAventura2 = new Label("Henry Jones, Jr., ou simplesmente Indiana Jones, \né um personagem da série de filmes Indiana Jones, \ncriado por George Lucas e Steven Spielberg, \nGeorge lucas criou o personagem em homenagem aos heróis \nde séries e filmes de ação dos anos 1930. \nO personagem apareceu pela primeira vez em 1981 \nem Indiana Jones e Os Caçadores da Arca Perdida, \ndirigido por Steven Spielberg e vivido por Harrison Ford. \nO personagem também aparece em séries de televisão.");
        Font font2 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font2, Color.BROWN, labelAventura2);

        //O texto que sera exibido ao clicar no sgv da tela Comedia1, assim como suas configuraçoes
        labelComedia1 = new Label("O Sport Club Corinthians Paulista (mais conhecido como Corinthians, \ne pelos apelidos de \"Timão\" e \"Coringão\") \né um clube multiesportivo brasileiro da cidade de São Paulo, \ncapital do estado homônimo. \nFoi fundado como uma equipe de futebol no dia 1 de setembro de 1910 \npor um grupo de operários do bairro Bom Retiro. \nSeu nome foi inspirado no Corinthian FC de Londres, \nque excursionava pelo Brasil, \nsendo chamado pela imprensa brasileira da época de Corinthian's team.");
        Font font3 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font3, Color.BROWN, labelComedia1);

        //O texto que sera exibido ao clicar no sgv da tela Comedia2, assim como suas configuraçoes
        labelComedia2 = new Label("O barbeiro Manoel, apelidado de \"Seu Mané\", morador da Vila Maria Zélia, \nna cidade de São Paulo é um torcedor fanático do Corinthians Paulista, \nque faz de tudo pelo seu time de coração, enlouquecendo sua família. \nEntra em conflito com seu vizinho italiano e palmeirense, \nLeontino. Em uma cena, há uma guerra de hinos dos dois clubes. \nMané faz promessas malucas e orações a São Jorge, \npassa sofrimentos e profere insultos na arquibancada. \nEm seu salão, \ncorta o cabelo e faz a barba de graça de quem for corintiano \ne apresentar carteirinha do clube.");
        Font font4 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font4, Color.BROWN, labelComedia2);

        //O texto que sera exibido ao clicar no sgv da tela Suspence1, assim como suas configuraçoes
        labelSuspence1 = new Label("O longa participou do Festival Internacional de Cinema Independente de Buenos Aires 2017, \nonde foi indicado ao prêmio de Melhor Filme na categoria internacional.");
        Font font5 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font5, Color.BROWN, labelSuspence1);

        //O texto que sera exibido ao clicar no sgv da tela Suspence2, assim como suas configuraçoes
        labelSuspence2 = new Label("Ian e Samantha viajam para relaxar alguns dias num parque natural. \nO casal encontra um acampamento isolado com apenas um carro e uma barraca vazia. \nÀ medida que anoitece e ninguém retorna, \nos dois passam a se preocupar. \nE quando descobrem uma criança vagando pela floresta, \neles mergulham numa terrível cadeia de acontecimentos, \nque vai levá-los até o seu limite.");
        Font font6 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font6, Color.BROWN, labelSuspence2);

        //O texto que sera exibido ao clicar no sgv da tela Romance1, assim como suas configuraçoes
        labelRomance1 = new Label("Título original: " + "Endless\n"
                + "De: " + "Scott Speer\n"
                + "Com: " + "Famke Janssen, Alexandra Shipp, Ian Tracey\n"
                + "Género: " + "Drama, Romance\n"
                + "Classificação: " + "M/14\n"
                + "Outros dados: " + "EUA, 2020, Cores, 95 min.");
        Font font7 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font7, Color.BROWN, labelRomance1);

        //O texto que sera exibido ao clicar no sgv da tela Romance2, assim como suas configuraçoes
        labelRomance2 = new Label("Quando Riley (Alexandra Shipp) e Chris (Nicholas Hamilton) \nsão separados por um trágico acidente de carro, \nRiley se culpa pela morte de seu namorado enquanto Chris fica preso no limbo. \nMilagrosamente, os dois encontram uma maneira de se conectar. \nEm uma história de amor que transcende a vida e a morte, \nRiley e Chris são forçados a aprender a lição mais difícil de todas: \ndeixar ir.");
        Font font8 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font8, Color.BROWN, labelRomance2);

        //O texto que sera exibido ao clicar no sgv da tela Terror1, assim como suas configuraçoes
        labelTerror1 = new Label("Com 95% de aprovação no Rotten Tomatoes, a crítica define Amizade Maldita como \n“uma entrada fascinante no mundo dos amigos imaginários do mal”. O filme já recebeu 9 \nprêmios em festivais internacionais, incluindo o de Filme Mais Assustador no Popcorn Frights 2019 \ne o de Melhor Filme no Sin City Horror Fest, premiação especializada em filmes de terror. \nEm entrevista, o diretor afirma que sofria de ansiedade quando criança. \n“Eu tinha medo de ficar sozinho, medo de ir para a escola, eu tinha medo de fazer qualquer \ncoisa. […] Essa experiência me ajudou a trazer um pouco de mim para Amizade Maldita, \ncom pais incapazes de saber lidar com algo assim. \nQuando não é algo que você consegue explicar ou ensinar, \ne você se sente excluído, o que você pode fazer?”");
        Font font9 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font9, Color.BROWN, labelTerror1);

        //O texto que sera exibido ao clicar no sgv da tela Terror2, assim como suas configuraçoes
        labelTerror2 = new Label("Kevin (Sean Rogerson) e Beth (Keegan Connor Tracy) notam que seu filho de oito anos, \nJosh (Jett Klyne), tem passado bastante tempo brincando com um novo amigo imaginário, \nchamado Z. O que a princípio parece uma relação inofensiva, \nrapidamente se transforma em algo destrutivo e perigoso. \nÉ quando Beth começa a desvendar o seu próprio passado, \nque ela descobre que Z pode não estar apenas na imaginação do filho.");
        Font font10 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font10, Color.BROWN, labelTerror2);

        //O texto que sera exibido ao clicar no sgv da tela Ficcao1, assim como suas configuraçoes
        labelFiccao1 = new Label("Até 13 de setembro de 2018 Avengers: Infinity War arrecadou 678,8 milhões de dólares \nnos Estados Unidos e Canadá e 1300 milhões de dólares em outros territórios, \ntotalizando US$ 2 bilhões. É a quinta produção da história do cinema, \ne a primeira do gênero super-herói, a ultrapassar tal marca. \nEm abril de 2019, estreou a continuação Avengers: Endgame, \nque superou ainda mais seu antecessor, \narrecadando 1200 milhões de dólares no primeiro final de semana de estreia, \ne 2200 milhões de dólares em apenas onze dias, \nse tornando a maior estreia de toda a história do cinema, \nsuperando o até então implacável do cinema, Titanic, \nque ocupou a posição dentre os três maiores do mundo por quase duas décadas.");
        Font font11 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font11, Color.BROWN, labelFiccao1);

        //O texto que sera exibido ao clicar no sgv da tela Ficcao2, assim como suas configuraçoes
        labelFiccao2 = new Label("Homem de Ferro, Thor, Hulk e os Vingadores se unem \npara combater seu inimigo mais poderoso, o maligno Thanos. \nEm uma missão para coletar todas as seis pedras infinitas, \nThanos planeja usá-las para infligir sua vontade maléfica sobre a realidade.");
        Font font12 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        defineFonteCorDaLabel(font12, Color.BROWN, labelFiccao2);

        //O texto que sera exibido ao lado do botao de tocar audio da sinopse
        labelTocaAudio = new Label("OUVIR SINOPSE");
        Font font13 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 10);
        defineFonteCorDaLabel(font13, Color.BROWN, labelTocaAudio);

        //O botao de confirmação de troca de canal apos o genero ser selecionado no comboBox, o primeiro passo na execução da aplicaçao
        botao = new Button("Mudar Canal");
        webVideo = new WebView();//WebView para o YouTube

        //Painel da aplicação, cor personalizada
        painel = new Pane();
        painel.setStyle("-fx-background-color: #" + "FF0000");

        //ComboBox adicionado ao painel com a primeira opção selecionada por padrão, cordenada X e Y determinadas
        painel.getChildren().add(comboUm);
        comboUm.getSelectionModel().selectFirst();
        comboUm.setTranslateX(100);
        comboUm.setTranslateY(0);

        //O botão de mudar canal é adicionado ao painel nas cordenadas 0,0
        painel.getChildren().add(botao);
        botao.setTranslateX(0);
        botao.setTranslateY(0);

        //O video de introdução do PucFlix é adicionado ao painel
        painel.getChildren().add(mediaView);
        mediaView.setScaleX(1.5);
        mediaView.setPreserveRatio(true);
        mediaView.setTranslateX(145);
        mediaView.setTranslateY(100);

        //Cena em tamanho 800x600 titulo da aplicação definido
        cena = new Scene(painel, 800, 600);
        plano.setTitle("PucFlixPlus - Trailers de filmes");
        plano.setScene(cena);
        plano.show();

        //O video de introdução da aplicação tem sua reprodução iniciada
        mediaPlayer.play();

        //Açoes que o botão mudar canal acionara
        indice = 0;
        botao.setOnAction((ActionEvent event) -> {

            //Ele limpa a tela de alguns elementos graficos para evitar o empilhamento destes 
            if (painel.getChildren().contains(webVideo)) {
                painel.getChildren().remove(webVideo);
            }
            if (painel.getChildren().contains(imagemLOGO2)) {
                painel.getChildren().remove(imagemLOGO2);
            }
            if (painel.getChildren().contains(mediaView)) {
                painel.getChildren().remove(mediaView);
            }
            if (painel.getChildren().contains(botaoTocaAudio)) {
                painel.getChildren().remove(botaoTocaAudio);
            }
            if (painel.getChildren().contains(labelTocaAudio)) {
                painel.getChildren().remove(labelTocaAudio);
            }

            //Durante a troca ou recarregamento de tela qualquer audio é parado
            audioAventura1.stop();
            audioComedia1.stop();
            audioSuspence1.stop();
            audioRomance1.stop();
            audioTerror1.stop();
            audioFiccao1.stop();
            botaoTocaAudio.setText(">");

            //as cores voltam para a cor de desativado
            bluray.setFill(Color.CORNFLOWERBLUE);
            chapel.setFill(Color.BURLYWOOD);
            bolaFutebol.setFill(Color.DARKGRAY);
            tesoura.setFill(Color.LAWNGREEN);
            pessoas.setFill(Color.PALEVIOLETRED);
            tenda.setFill(Color.LIGHTYELLOW);
            coracao.setFill(Color.PALEGREEN);
            casal.setFill(Color.HOTPINK);
            crianca.setFill(Color.DEEPSKYBLUE);
            fantasma.setFill(Color.VIOLET);
            manopla.setFill(Color.PALEGOLDENROD);
            estrela.setFill(Color.WHITESMOKE);

            //Mesmo funcionamento dos ifs das linhas anteriores porem encadeado para economia de linhas
            removeObjetosVetoriaisELabelsSeExistem(bluray, chapel, labelAventura1, labelAventura2);
            removeObjetosVetoriaisELabelsSeExistem(bolaFutebol, tesoura, labelComedia1, labelComedia2);
            removeObjetosVetoriaisELabelsSeExistem(pessoas, tenda, labelSuspence1, labelSuspence2);
            removeObjetosVetoriaisELabelsSeExistem(coracao, casal, labelRomance1, labelRomance2);
            removeObjetosVetoriaisELabelsSeExistem(crianca, fantasma, labelTerror1, labelTerror2);
            removeObjetosVetoriaisELabelsSeExistem(manopla, estrela, labelFiccao1, labelFiccao2);

            remove1ObjetoVetorialSeEsiste(Brasil);
            remove1ObjetoVetorialSeEsiste(Acre);
            remove1ObjetoVetorialSeEsiste(Alagoas);
            remove1ObjetoVetorialSeEsiste(Amapa);
            remove1ObjetoVetorialSeEsiste(Amazonas);
            remove1ObjetoVetorialSeEsiste(Bahia);
            remove1ObjetoVetorialSeEsiste(Ceara);
            remove1ObjetoVetorialSeEsiste(EspiritoSanto);
            remove1ObjetoVetorialSeEsiste(Goias);
            remove1ObjetoVetorialSeEsiste(Maranhao);
            remove1ObjetoVetorialSeEsiste(MatoGrosso);
            remove1ObjetoVetorialSeEsiste(MatoGrossoDoSul);
            remove1ObjetoVetorialSeEsiste(MinasGerais);
            remove1ObjetoVetorialSeEsiste(Para);
            remove1ObjetoVetorialSeEsiste(Paraiba);
            remove1ObjetoVetorialSeEsiste(Parana);
            remove1ObjetoVetorialSeEsiste(Pernambuco);
            remove1ObjetoVetorialSeEsiste(Piaui);
            remove1ObjetoVetorialSeEsiste(RioDeJaneiro);
            remove1ObjetoVetorialSeEsiste(RioGrandeDoNorte);
            remove1ObjetoVetorialSeEsiste(RioGrandeDoSul);
            remove1ObjetoVetorialSeEsiste(Rondonia);
            remove1ObjetoVetorialSeEsiste(Roraima);
            remove1ObjetoVetorialSeEsiste(SantaCatarina);
            remove1ObjetoVetorialSeEsiste(SaoPaulo);
            remove1ObjetoVetorialSeEsiste(Sergipe);
            remove1ObjetoVetorialSeEsiste(Tocantins);
            remove1ObjetoVetorialSeEsiste(DistritoFederal);
            if (painel.getChildren().contains(labelBrasil)) {
                painel.getChildren().remove(labelBrasil);
            }

            //Conjunto de ifs que verificam o conteudo selecionado no comboBox e definem um indice para lista de trailers com base na seleçao
            if (((String) comboUm.getSelectionModel().getSelectedItem()).equals("Aventura")) {
                indice = 0;
            }
            if (((String) comboUm.getSelectionModel().getSelectedItem()).equals("Comedia")) {
                indice = 1;
            }
            if (((String) comboUm.getSelectionModel().getSelectedItem()).equals("Suspence")) {
                indice = 2;
            }
            if (((String) comboUm.getSelectionModel().getSelectedItem()).equals("Romance")) {
                indice = 3;
            }
            if (((String) comboUm.getSelectionModel().getSelectedItem()).equals("Terror")) {
                indice = 4;
            }
            if (((String) comboUm.getSelectionModel().getSelectedItem()).equals("Ficção")) {
                indice = 5;
            }
            if (((String) comboUm.getSelectionModel().getSelectedItem()).equals("Documentário")) {
                indice = 6;
            }

            //WebVideo usa a engine do Youtube para reprodução do video, é passado o link do video que estava na lista
            webVideo.getEngine().loadContent(lista[indice], "text/html");
            webVideo.setTranslateX(50);
            webVideo.setTranslateY(50);
            painel.getChildren().add(webVideo);

            //Adicionado o logotipo em miniatura no canto superior direito
            painel.getChildren().add(imagemLOGO2);
            imagemLOGO2.setTranslateX(700);
            imagemLOGO2.setTranslateY(0);

            if (indice != 6) {
                //adicionado label ao lado do botao de ouvir audio da sinopse para alertar sobre função do botao
                painel.getChildren().add(labelTocaAudio);
                labelTocaAudio.setTranslateX(680);
                labelTocaAudio.setTranslateY(50);
            }

            //Ifs que serão acionados de acordo com o valor atual de indice,
            if (indice == 0) {

                //um botao é adicionado no painel, ao preciona-lo o audio do argumento é tocado
                adicionaBotaoQueTocaAudio(botaoTocaAudio, audioAventura1);
                //são adicionados 2 SVG cada um com uma label associada, esses  sgv que tem seus atributos de cores alterados como um interruptor de uma casa
                adiciona2SVGsInterativosNoPainel(labelAventura1, labelAventura2, Color.BLUE, Color.CORNFLOWERBLUE, Color.CHOCOLATE, Color.BURLYWOOD, bluray, chapel);
                defineCordenadasXYdeSVG(500, -950, bluray);
                defineCordenadasXYdeSVG(600, 250, chapel);

            }
            if (indice == 1) {

                //um botao é adicionado no painel, ao preciona-lo o audio do argumento é tocado
                adicionaBotaoQueTocaAudio(botaoTocaAudio, audioComedia1);
                //são adicionados 2 SVG cada um com uma label associada, esses  sgv que tem seus atributos de cores alterados como um interruptor de uma casa
                adiciona2SVGsInterativosNoPainel(labelComedia1, labelComedia2, Color.BLACK, Color.DARKGRAY, Color.GREEN, Color.LAWNGREEN, bolaFutebol, tesoura);

                defineCordenadasXYdeSVG(610, 100, bolaFutebol);//nao acertei as cordenadas ainda//NAO ESQUECER//ja fui ate 3000+-
                defineCordenadasXYdeSVG(550, 200, tesoura);
            }
            if (indice == 2) {

                //um botao é adicionado no painel, ao preciona-lo o audio do argumento é tocado
                adicionaBotaoQueTocaAudio(botaoTocaAudio, audioSuspence1);
                //são adicionados 2 SVG cada um com uma label associada, esses  sgv que tem seus atributos de cores alterados como um interruptor de uma casa
                adiciona2SVGsInterativosNoPainel(labelSuspence1, labelSuspence2, Color.RED, Color.PALEVIOLETRED, Color.YELLOW, Color.LIGHTYELLOW, pessoas, tenda);
                defineCordenadasXYdeSVG(525, 25, pessoas);
                defineCordenadasXYdeSVG(650, 250, tenda);
            }
            if (indice == 3) {

                //um botao é adicionado no painel, ao preciona-lo o audio do argumento é tocado
                adicionaBotaoQueTocaAudio(botaoTocaAudio, audioRomance1);
                //são adicionados 2 SVG cada um com uma label associada, esses  sgv que tem seus atributos de cores alterados como um interruptor de uma casa
                adiciona2SVGsInterativosNoPainel(labelRomance1, labelRomance2, Color.SPRINGGREEN, Color.PALEGREEN, Color.DEEPPINK, Color.HOTPINK, coracao, casal);
                defineCordenadasXYdeSVG(525, 0, coracao);
                defineCordenadasXYdeSVG(180, -550, casal);
            }
            if (indice == 4) {

                //um botao é adicionado no painel, ao preciona-lo o audio do argumento é tocado
                adicionaBotaoQueTocaAudio(botaoTocaAudio, audioTerror1);
                //são adicionados 2 SVG cada um com uma label associada, esses  sgv que tem seus atributos de cores alterados como um interruptor de uma casa
                adiciona2SVGsInterativosNoPainel(labelTerror1, labelTerror2, Color.DODGERBLUE, Color.DEEPSKYBLUE, Color.DARKVIOLET, Color.VIOLET, crianca, fantasma);
                defineCordenadasXYdeSVG(350, 0, crianca);
                defineCordenadasXYdeSVG(625, 200, fantasma);
            }
            if (indice == 5) {

                //um botao é adicionado no painel, ao preciona-lo o audio do argumento é tocado
                adicionaBotaoQueTocaAudio(botaoTocaAudio, audioFiccao1);
                //são adicionados 2 SVG cada um com uma label associada, esses  sgv que tem seus atributos de cores alterados como um interruptor de uma casa
                adiciona2SVGsInterativosNoPainel(labelFiccao1, labelFiccao2, Color.GOLD, Color.PALEGOLDENROD, Color.WHITE, Color.WHITESMOKE, manopla, estrela);
                defineCordenadasXYdeSVG(-300, -500, manopla);
                defineCordenadasXYdeSVG(700, 300, estrela);
            }
            if (indice == 6) {

                painel.getChildren().add(Brasil);
                painel.getChildren().add(Acre);
                painel.getChildren().add(Alagoas);
                painel.getChildren().add(Amapa);
                painel.getChildren().add(Amazonas);
                painel.getChildren().add(Bahia);
                painel.getChildren().add(Ceara);
                painel.getChildren().add(EspiritoSanto);
                painel.getChildren().add(Goias);
                painel.getChildren().add(Maranhao);
                painel.getChildren().add(MatoGrosso);
                painel.getChildren().add(MatoGrossoDoSul);
                painel.getChildren().add(MinasGerais);
                painel.getChildren().add(Para);
                painel.getChildren().add(Paraiba);
                painel.getChildren().add(Parana);
                painel.getChildren().add(Pernambuco);
                painel.getChildren().add(Piaui);
                painel.getChildren().add(RioDeJaneiro);
                painel.getChildren().add(RioGrandeDoNorte);
                painel.getChildren().add(RioGrandeDoSul);
                painel.getChildren().add(Rondonia);
                painel.getChildren().add(Roraima);
                painel.getChildren().add(SantaCatarina);
                painel.getChildren().add(SaoPaulo);
                painel.getChildren().add(Sergipe);
                painel.getChildren().add(Tocantins);
                painel.getChildren().add(DistritoFederal);
            }

        });
    }

    public static void main(String[] args) {
        launch(args);
    }

    public void defineAtributosSVGPATH(SVGPath svgpath, String stringConteudoSVG, Color cor, float escalaXY) {
        //Define alguns atributos de um svg como: seu conteudo, a cor deste conteudo, e seu tamanho, outros valores assumem valores padroes para a função
        svgpath.setContent(stringConteudoSVG);
        svgpath.setFill(cor);
        svgpath.setScaleX(escalaXY);
        svgpath.setScaleY(escalaXY);
        svgpath.setOpacity(1.0);
        svgpath.setStrokeWidth(2);
        svgpath.setStroke(Color.BLACK);
    }

    public void defineFonteCorDaLabel(Font fonte, Color cor, Label label) {
        //define a fonte e cor de uma label com uma chamada que ocupa uma linha só
        label.setFont(fonte);
        label.setTextFill(cor);
    }

    public void removeObjetosVetoriaisELabelsSeExistem(SVGPath svg1, SVGPath svg2, Label label1, Label label2) {
        //remove SVGs se eles estao presentes, uma unica chamada economiza todas essas linhas tornando o codigo mais limpo
        if (painel.getChildren().contains(svg1)) {
            painel.getChildren().remove(svg1);
        }
        if (painel.getChildren().contains(label1)) {
            painel.getChildren().remove(label1);
        }
        if (painel.getChildren().contains(svg2)) {
            painel.getChildren().remove(svg2);
        }
        if (painel.getChildren().contains(label2)) {
            painel.getChildren().remove(label2);
        }
    }

    public void adiciona2SVGsInterativosNoPainel(Label label1, Label label2, Color svg1cor1, Color sgv1cor2, Color sgv2cor1, Color svg2cor2, SVGPath objetoClicavel1SVG, SVGPath objetoClicavel2SVG) {
        ///*
        //de acordo com indice, um genero sempre é selecionado, a função é chamada com diferentes parametros relacionados ao conteudo e genero
        painel.getChildren().add(objetoClicavel1SVG);//adiciona o primeiro objeto vetorial interativo ao painel
        painel.getChildren().add(objetoClicavel2SVG);//adiciona o segundo objeto vetorial interativo ao painel

//*/
        //Se o SGV for precionado uma informação textual é exibida atravez de um label, caso o label ja esteja no painel ele é retirado
        objetoClicavel1SVG.setOnMouseClicked((MouseEvent e) -> {

            if (painel.getChildren().contains(label2)) {
                painel.getChildren().remove(label2);//se o outro SGV estava exibido sua label antes de apertar esse, ela é removida
                objetoClicavel2SVG.setFill(svg2cor2);//um SGV desliga o outro, o SGV ativado tem sua label exibida e uma cor mais forte
            }
            if (painel.getChildren().contains(label1)) {
                painel.getChildren().remove(label1);//um SGV precionado duas vezes tem seu conteudo retirado e cor em tom mais apagado
                objetoClicavel1SVG.setFill(sgv1cor2);//cor1 é mais forte, cor2 é mais apagado, para dar a impressao de precionado
            } else {
                painel.getChildren().add(label1);//quando um SGV é precionado uma vez, ele assume uma cor forte e exibi o conteudo textual
                label1.setTranslateX(60);//cordenadas da label
                label1.setTranslateY(400);
                objetoClicavel1SVG.setFill(svg1cor1);//o SGV tem a cor do svg alterada
            }
        });

        objetoClicavel2SVG.setOnMouseClicked((MouseEvent e) -> {//segue a mesma logica do SGV 1 de forma inversa
            //botao2.setOnAction((ActionEvent e) -> {
            //System.out.println("botao funciona");
            if (painel.getChildren().contains(label1)) {
                painel.getChildren().remove(label1);
                objetoClicavel1SVG.setFill(sgv1cor2);
            }
            if (painel.getChildren().contains(label2)) {
                painel.getChildren().remove(label2);
                objetoClicavel2SVG.setFill(svg2cor2);
            } else {
                painel.getChildren().add(label2);
                label2.setTranslateX(60);
                label2.setTranslateY(400);
                objetoClicavel2SVG.setFill(sgv2cor1);
            }
        });
        //*/

        //Botao para cada estado: 
    }

    public void adicionaBotaoQueTocaAudio(Button botaoTocar, AudioClip audioTocavel) {
        painel.getChildren().add(botaoTocar);//adiciona botao que inicia o audio da sinopse
        botaoTocar.setTranslateX(650);
        botaoTocar.setTranslateY(50);

        botaoTocar.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent e) {
                if (!audioTocavel.isPlaying()) {//se audio nao esta tocando no momento que o botao é pressionado
                    botaoTocar.setText("||");
                    audioTocavel.play();//inicia o audio da sinopse do parametro
                } else {//se audio esta tocando no momento que o botao foi precionado
                    botaoTocar.setText(">");
                    audioTocavel.stop();//para o audio e ele volta para inicio do tempo de reprodução
                }
            }
        });

    }

    public void defineCordenadasXYdeSVG(int x, int y, SVGPath svg) {
        svg.setTranslateX(x);
        svg.setTranslateY(y);
    }

    public void remove1ObjetoVetorialSeEsiste(SVGPath svg) {
        if (painel.getChildren().contains(svg)) {
            painel.getChildren().remove(svg);
        }
    }

    public void funcaoClickEstados(Label label, String stringLabel) {
        if (painel.getChildren().contains(label)) {
            painel.getChildren().remove(label);
        }

        label.setText(stringLabel);
        Font font = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 14);
        label.setFont(font);
        label.setTextFill(Color.BROWN);

        painel.getChildren().add(label);
        label.setTranslateX(60);
        label.setTranslateY(400);

    }

    public void amarelaBrasil(SVGPath Acre, SVGPath Alagoas, SVGPath Amapa, SVGPath Amazonas, SVGPath Bahia, SVGPath Ceara,
            SVGPath EspiritoSanto, SVGPath Goias, SVGPath Maranhao, SVGPath MatoGrosso, SVGPath MatoGrossoDoSul, SVGPath MinasGerais, SVGPath Para,
            SVGPath Paraiba, SVGPath Parana, SVGPath Pernambuco, SVGPath Piaui, SVGPath RioDeJaneiro, SVGPath RioGrandeDoNorte, SVGPath RioGrandeDoSul,
            SVGPath Rondonia, SVGPath Roraima, SVGPath SantaCatarina, SVGPath SaoPaulo, SVGPath Sergipe, SVGPath Tocantins, SVGPath DistritoFederal) {

        Acre.setFill(Color.YELLOW);
        Alagoas.setFill(Color.YELLOW);
        Amapa.setFill(Color.YELLOW);
        Amazonas.setFill(Color.YELLOW);
        Bahia.setFill(Color.YELLOW);
        Ceara.setFill(Color.YELLOW);
        EspiritoSanto.setFill(Color.YELLOW);
        Goias.setFill(Color.YELLOW);
        Maranhao.setFill(Color.YELLOW);
        MatoGrosso.setFill(Color.YELLOW);
        MatoGrossoDoSul.setFill(Color.YELLOW);
        MinasGerais.setFill(Color.YELLOW);
        Para.setFill(Color.YELLOW);
        Paraiba.setFill(Color.YELLOW);
        Parana.setFill(Color.YELLOW);
        Pernambuco.setFill(Color.YELLOW);
        Piaui.setFill(Color.YELLOW);
        RioDeJaneiro.setFill(Color.YELLOW);
        RioGrandeDoNorte.setFill(Color.YELLOW);
        RioGrandeDoSul.setFill(Color.YELLOW);
        Rondonia.setFill(Color.YELLOW);
        Roraima.setFill(Color.YELLOW);
        SantaCatarina.setFill(Color.YELLOW);
        SaoPaulo.setFill(Color.YELLOW);
        Sergipe.setFill(Color.YELLOW);
        Tocantins.setFill(Color.YELLOW);
        DistritoFederal.setFill(Color.YELLOW);
    }
}
